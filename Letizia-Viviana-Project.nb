(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    184811,       3612]
NotebookOptionsPosition[    168553,       3332]
NotebookOutlinePosition[    173640,       3449]
CellTagsIndexPosition[    173425,       3440]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["Last modified on: Tuesday, July 10, 2018 at 19:06", \
"TemplateInstructions",
 Deployed->True,
 Background->RGBColor[0.75, 0.75, 0.75],
 CellTags->
  "LastModified",ExpressionUUID->"16a93950-ad73-4ed1-ba61-5139c9a9dd32"],

Cell[CellGroupData[{

Cell["Author Info", "TemplateSectionHeaders",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{3.736188040860998*^9},
 CellTags->
  "AuthorInfo",ExpressionUUID->"47541fce-e5a1-4793-b8e1-e1340b437ca6"],

Cell["Viviana  Letizia", "TemplateAuthorInfo",
 ShowCellBracket->False,
 CellFrameLabels->{{
    Cell["Name:", "TemplateLabel"], None}, {None, None}},
 CellFrameLabelMargins->{{35, 0}, {0, 0}},
 CellChangeTimes->{
  3.736536207540806*^9, {3.740230479184558*^9, 3.740230485339913*^9}, 
   3.7402305307246513`*^9},ExpressionUUID->"2214bf82-cb91-41b2-a79f-\
ecd872282532"],

Cell["Vladimir  Grankovsky", "TemplateAuthorInfo",
 ShowCellBracket->False,
 CellFrameLabels->{{
    Cell["Mentor: ", "TemplateLabel"], None}, {None, None}},
 CellFrameLabelMargins->{{25, 0}, {0, 0}},
 CellChangeTimes->{
  3.736536216260921*^9, {3.7402304891440277`*^9, 
   3.7402305322246037`*^9}},ExpressionUUID->"1d803eb4-64f6-4601-a1a0-\
49b5afc9692c"],

Cell["SoftwareX  Elsevier", "TemplateAuthorInfo",
 ShowCellBracket->False,
 CellFrameLabels->{{
    Cell["Affiliation: ", "TemplateLabel"], None}, {None, None}},
 CellFrameLabelMargins->{{8, 0}, {0, 0}},
 CellChangeTimes->{
  3.736536278299572*^9, {3.740230513284227*^9, 
   3.7402305334518557`*^9}},ExpressionUUID->"f3f2c56d-6554-49c0-a8f0-\
7c8d2bae5215"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Poster Session Content", "TemplateSectionHeaders",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{3.7361879449416428`*^9},
 CellTags->
  "PosterContent",ExpressionUUID->"e3c11918-b62c-4e4f-bc19-a4aa32cba637"],

Cell["Screening Test Framework for a Notebook Submission", \
"TemplateEditableContent",
 CellFrameLabels->{{
    Cell["Title of \nproject: ", "TemplateLabel"], None}, {None, None}},
 CellFrameLabelMargins->{{17, 0}, {0, 0}},
 CellChangeTimes->{3.7365364091022453`*^9, 
  3.740231135026431*^9},ExpressionUUID->"16215b85-c481-4f11-8175-\
b0652d7bbfad"],

Cell["\<\
In order to verify if the set of guidelines of a notebook submission are \
respected, we create a test framework code for the computational essay. The \
main specification is to read in NoteBook and generate a feedback report.\
\>", "TemplateEditableContent",
 CellFrameLabels->{{
    Cell["Goal of \nthe \nproject: ", "TemplateLabel"], None}, {None, None}},
 CellFrameLabelMargins->{{18, 0}, {0, 0}},
 CellChangeTimes->{
  3.736536691820487*^9, {3.740155118117497*^9, 3.7401551204584227`*^9}, 
   3.7402311459344893`*^9},ExpressionUUID->"c662dd0a-9849-40e8-bc89-\
a9f688107475"],

Cell["\<\
Add the most representative image of your project here. (We recommend just 1 \
image, if you add more, we will make a collage of the images.)\
\>", "TemplateInstructions",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{
  3.736704649824739*^9},ExpressionUUID->"ec924e65-f9fc-4678-8fe3-\
95cd292f053c"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsnQmcHVWZvnFGx5lxHUfFdQTcQFxH1Bn9uw06ruOCgjo6LoA47gi4ICLK
IqKoo7IkhCxkg4SQhZBASEJCQiCQzkJC9o3OQjrpztJhD4Tvf9/q/m6+W123
b3XSye3qft7f70nf2k6dOrXkvPWdc+rIk394wml/c9hhh53596V/TvjGTz94
xhnfOPtzzy9NnPiDM7/9rR9889SP/eCsb37rm2f828l/W5q59mmHHTat9OPp
pd8NDQ0Gh4bdu3d3ytp/OuyAqJU+QE/mQO+vY445pu73OAAAAAAUi5NPPtmm
TZtW93z0BmrV96v52KYvf8aeaFxvrkfvmGHrj3h+j/C7xx9/vA0aNKg8ff75
59thhx1mp556at39k6O8KF8HI+0jjzzSFi9eXPdjPNScccYZtmDBgqrLtUzr
dCXNA72/8LsAAAAA0FXwu91Hrfp+2uM+vnih7d21MyEted798bvyp2nvp2n5
tjhvypQpHeZVS8/9rnyfvG69PJh8rfbveL7wu92P/OwnPvGJTM/b2bLOOND7
C78LAAAAAF0Fv9t91KrvR68bpdjuY4sa7JGSx31s/t3l+buu/JNtfN9bu+R3
5QHlUeM8TcsfRt8mf5gnRhv9bl6PfDDQftP59Wn87sEhy9fur9cVB3p/HSq/
+73vfc/Gjh2ba12tp/Xr/ewBAAAA6KtceOGF9te//rU8rd8nnHBCgpbhd7uP
WvV9960PTRpX9rRPbm+x3aOGJd62deAVtv2iXyTzohfuit/NisF6++PYLlk+
Tv5VvzU/K24q3O9mreOe2f201vf2zo6n4z48xmg9/fS6aWp587Tf7ex40r4/
vW3Mv5b1Zb+b9rcH4nWL5HdnzpxpJ510Uk3Pq+VaT+vX+9kDAAAA0FeJfnfo
0KGJv/Vl7n3xu91DHr+rfrmxr+7DUyfb7pGD7aEbxyTI8z5825SK+G/jW47o
Uv/dGJPVX/e67hmjJ5bnjV7Tl7kX7iy+697Q13X/GH/7tHvQ2AY5bhvXTVPL
c0bPWut4OvO7ylvW8fVlvyvc5x6I1xUHen8dyvbMtTwvXhcAAACgZxD97lln
nZV43ric+G73Uau+L8+qPrtRrUP6Jzw4ZmQS59XvGP+VtE1X/G6Mh7rXjR43
tnlOx319e/eAtfxuuu10JO4n3c661nSkVp/h6FlrHU9nfjc9Npfo6/Fdcaj9
rnxtVzkY93M1z4vXBQAAAOg5RL+b5W3xu91Hrfq+PGtaTz3+uD18y8Qkrqs2
zfr95JYHOqzXFb8rf+a+NPo1+Tl51ugJfV7aH7pfruV30zFZj6863eV388Z3
ax1PZ343y9v2db/bF9szR9KeF68LAAAA0LNIx3fHjRtXsZz2zN1Hrfp+lt9N
4rdLF7eNV3X7tIq2zvvrd92npT2kxzmjhzvQ+G70u+n2wN0V3601HlVX4rtp
/1rLK/fl9sx9dbyqNO55L7vsMrwuAAAAQA9Dftb9rv7Sf/fgUau+L8+67Ttf
z/SznUnbdNXv+lhL0Se6X42etFp/1xgT7orfjZ5Vv7vD73qe0p43tsmu1X83
Ho+vm043/d2mvtx/l+8RVSKP+/Wvfx2vCwAAANDDSI/PrBivj8/s/he/2z3U
qu+nv6fbVbriLdz3ZcUr022Q0+MZx2262p5Zy+P4xt3hd7PSTo911dn4zPF4
3OMK/8ZR3DaOF52OhfclzjjjjE79rJZpna6keaD3F9/fBQAAAACoH7Xq+4fS
7wL0NA70/sLvAgAAAADUj1r1ffwu9GUO9P7C7wIAAAAA1I9a9X38LvRl6n1/
AgAAAADA/lNvPwHQk6n3/QkAAAAAAPtPvf0EQE+m3vcnAAAAAADsP/X2EwA9
mXrfnwAAAAAAsP/U208A9GTqfX8CAAAAAMD+U28/AdCTqff9CQAAAAAA+0+9
/QRAT6be9ycAAAAAAOw/9fYTAD2Zet+fAAAAAACw/9TbTwD0ZOp9fwIAAABA
76PedVwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAACAItPS0mJr1qypoLGxMZnv62zdutXWrVvXYb24
DgAAAAAAAEBPQB52y5YtiY+dNWuWLVy4sMycOXOSecuWLbPFixcnv+fOnVte
Pm/evGSetlUaSqvexwMAAAAAAAAg5FvlWZ30cvlYeVyh3+llcVulVe/jAQAA
AAAAABDyqIrfeny32jpZXtb9rrZVGkXwu4cddlgSq/bp448/Ppk3aNCgQ54X
7VP7Pxhpn3rqqXU5pv1h9uzZNnr06KrLtezGG2+sez4jt956qw0dOrTTddTW
v3///jZ//vyDnh+Vj/LU1e2UN+VReT2Qdep1XWgdP/7O1hX1OAYAAAAAqC/y
qKoDunettk5nfld/lUbR/O7B9Jt56At+N4/HqOVrDhSl31W/LC97KHxqd5HX
7+qYDmZZO8rLgb6j6IrfzQN+FwAAAKDv0Zf97vnnn5/4wnrlpbf73bw+s6f5
3UPlCbuTnuZ39b7gQL0lfhcAAAAADpTu9rvLly8/KPmUL4z+TdPyqz595JFH
ln2svJ58rRPbL/t01jq+D027D/X2znGe70P7137jsqx1hafr+Ly43pQpUyrW
iceXPv7OtlWeOvO78Zii3/dj8TRi2ppWfmJ5xTKMZezIj8QYqfyGE32M+xr5
NV8evVva18T10n5Ivi8ui+sKT0d+LD0vpqF5WTFKbReXeZvluI6Wad/pZem8
dHb81Y43va+Y51hmWWWkNGM6Wkfnx9tlx7KL+YjrpNfLatMdPXWtc5uOo8cy
78p1kT7+eAyevv+udu0AAAAAQO+ju/3uJZf+wXbs2t3tDBxyjZ32v99Jfi9c
vMT+7u//0f7zox8vT7/26GOS3xdcdHF5vm+ndX1av7W+r+tpCm0X19V6aU/t
HtK9nvs894pZ67rX9WVxvntWpZPlzX3dzvxuelv3vll+V9tEjxvTj8eqdTx9
T8+Xu+/1bTWd9vfpOKL7RJ+OfXLdh6X9ivuU6Gv0N3os90P6ne7DGbeJvrWz
WKiuY08/7VfjsujL0n7cfX56+3Qeqh1/+hirbReJx9RZGaXPS9rLxrLz/WT5
3ay008ef59zW8rt5r4t4/NXivml/nvWuAwAAAAB6F0Xxu9HTysPKq7o39Wn9
1jruZ6OPvfnWqbn8rqfjxOP1mG76d63ptFd1omfVunF7X+7etDO/m9UuOyu+
6744nQ/Nj/Fcx9f1+K7PrzUtPEaq31ltaKN3TPszIe+S5V/SMeOYdrX2qll+
t1r75rjf9L7jsqw4ZPq4smK/MU/pGGhc3tmxZMUl036vWhnl8bvpfFfzxOly
SB9/nnNby+/mvS7Sx5/1PiNdpvs7xhcAAAAAFIei+N3oZeVR5V/dx/q0+9n0
dlpPnjiP3/X1nNiGN8Y4u+J3Y1vrSPSsWf40Lu/M72ZtmzVPvjSrv3C1+R4z
3h+/m26vm/aX0VNlebhq8dPYDjm2S037rEjW/rWNts1qrxw9Udw2Lkv7PD+W
6MeyfGNWm+5afrfadpHo3aqVkadVy+9m+eW0h41px3JIvy+odW7ztGfOc12k
vauXQTo2jN8FAAAA6FsUye/Kn8qPentlTQuP+3ZHfDf6XS2LcdMDie/KE6bL
ryvx3bR/rbVtVky5Why3u+O7aX+ZJ76b1Q83T3w30lkstVo8t7O2vjFd5Tcu
S/tdj2e79/ZjjJ4+7Rnz+N3OtuusvKqVUS2/m9VnOa7jfZOrrZ/1vqDWue2K
3612XVTzrrEdPX4XAAAAoO9RJL/rMd3Yj1f+NvbXzeq/G/1wV/1u9JH7G9+V
74x+MM6v1X/XfXK6j6zSS/evrdZ/N/bNTffTrTZf+Xev3VW/m+W3svrvxv6m
sV+m+0T3Juk2xdXGGUq3U47pV9smxiNjG+yIts0aMyvuy/cR99NZDDuuW8vv
VtsulkX0bp2VUdrfxulqMfK0303729jPN73fWuc2fc5ivLgr10U17xrPKX4X
AAAAoO9RJL/rfjV6UnnZdJ9b+VSt56S3z+t3tV5sy7y/8V0R20W7N6w1PnM6
PhvHT07735i+j0lVbSyqdDpZ89P5yut3O/veTbU2sNErpsfUFWmvmR5HOO2j
s/YR143r1PJ6nr+sMZjTcdB0XtLtmWM74zi2Vq32zNW2q+Z3a5VRbOsbvWxW
O+j0OlnnMbYvTr/nqHVu0+llxXfzXBfV2nPHcsXvAgAAAPQ9ut/vXmot27ba
1q3tbNth23N52Z3WvLXZWnbmXbeUdsvOA0gjH/U+P0WjWoz0QOisfW53ke53
Cl2j2vuCg/1tZQAAAACAzkj7Xf2N7Nixo+x39TsuW7duXQe/e9GFF1rzjuAZ
d+6wlh15vGhX/W6zbSv56op94XfrSmfjEfekNLOoNh4y5KNarBS/CwAAAAD1
JO1308yZM6dM1vK03/3NJdXaM3e/320p+e9tFfFj/G5vIqstLhQL/C4AAAAA
1BP3u9WWNzY2lv2ufldbz/3ubzP777a3P3aSdsht3rS5pbk0r6XkWbO8aqu1
bGvJaA+9b93tLVtt2/ZW/C4AAAAAAABUII86d+7ccpvlLLQ8zzr6W72vbtqL
tnngzr1qbb9b/Td+FwAAAAAAoC+jmK1is92B0uqa360yvXOHbYvx4Hb29dVN
bbujpSJmjN8FAAAAAACA7qZy/Kj99Ltdiu/6evLD+F0AAAAAAAA4OFTGYXd3
Mj5zd/rdGBPG7wIAAAAAAED306Etchg/WWNLpcer6tzv5o0Vt6e/vRm/CwAA
AAAAAAeF7vKZPYV6lycAAAAAAAD0DOrtT/G7AAAAAAAAcDCotz/F7wIAAAAA
AMDBoN7+FL8LAAAAAAAAB4N6+1P8LgAAAAAAABwM6u1P8bsAAAAAAABwMKi3
P8XvAgAAAAAAAAAAAAAAAADkY8eOHQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC9jl27
dllTU5Nt3LjR1q5dCwAAAAAAkNDY2Ghbtmyx7du31923AOwPuobleR9//HFD
CCGEEEIIIdcTTzyReIX169fX3bcAdBW9q9FfhBBCCCGEEKomeV73DgBFoKWl
JYnt6p0NQgghhBBCCFXT3r17kxivPES9fQxAHpqbm5M2+QghhBBCCCFUS/IO
8hD19jEAecDvIoQQQgghhPIKvwtFAr+LEEIIIYQQyiv8LhQJ/C5CCCGEEEIo
r/C7UCTwuwghhBBCCKG8wu9CkcDvIoQQQgghhPIKvwtFAr+LEEIIIYQQyiv8
LhQJ/C5CCCGEEEIor/C7UCTwuwghhBBCCKG8wu9CkcDvIoQQQgghhPIKvwtF
Ar+LEEIIIYQQyiv8LhQJ/C5CCCGEEEIor/C7UCTwuwghhBBCCKG8wu9CkcDv
IoQQQgghhPIKvwtFAr+LEEIIIYQQyiv8LhQJ/C5CCCGEEEIor/C7UCTwuwgh
hBBCCKG8wu9CkcDvIoQQQgghhPIKvwtFAr+LEEIIIYQQyiv8LhQJ/C5CCCGE
EEIor/C7UCTwuwghhBBCCKG8wu9CkcDvIoQQQgghhPIKvwtFAr+LEEIIIYQQ
yiv8LhQJ/C5CCCGEEEIor/C7UCTwuwghhBBCCKG8wu9CkcDvIoQQQgghhPIK
vwtFAr+LEEIIIYQQyiv8LhQJ/C46lNq7d689/vjj9sgjj9jDDz9s9913n23f
vj35nTW9bNmy5Br16eXLl9u2bdvK0ytWrLCtW7eWp1euXGlNTU3l6VWrVtmW
LVvK06tXr7YHHnigPL1mzRrbvHlzeVr3wqZNm8rT69ats40bN5an169fbxs2
bChP33///dbY2Fie1m/N82mtq218WmkpTZ/WvrRPn1ZelCefVl6VZ5/WseiY
fFrHqmP2aZWFysSnVVYqM59WWapMfbqlpcWWLl1anlbZ6xz4tJ4RS5YsKU/v
3LnTFi9eXJ7etWuX3XvvveXp1tZWW7RoUXl69+7dtnDhwvL0gw8+aAsWLChP
P/TQQzZ//vzytGhoaKiY1nKt59PaXun4tNLXfnxa+1c+fFr5Uz59WvnXcfi0
jk/HWe0aVPmonA7WNZm+Bmtdk1yDXIO9/bmYvgZrXZNcg1yDfem5qPrTY489
Zk899VRd63P4XSgS+F10qKRns57v8f8g/G7P/T9V6BlBPQ+/yzXYu6/BnvZc
xO9yDdb7Guzpz0Udj7ZXDKFewu9CkcDvokMlxXX1jI7/JwIAAABAflSPUn1K
9ap6Cb8LRQK/iw6VvA0zAAAAABwYqlfVS/hdKBL4XXSoVO//FwAAAAB6C/hd
gHzgd9GhkvqzxP47AAAAANB1VJ9Sv+B6Cb8LRQK/iw6VNHZDHL8BAAAAALqO
16nqJfwuFAn8LjpUqvf/DQAAAAC9BdozA+QDv4sOler9/wIAAABAbwG/C5AP
/C46VOrqc3zehCvsyiuymGDzesD/MwAAAAD1Ar8LkA/8LjpU0rfT4/fTa1HL
764J33oHAAAA6Ct4napewu9CkcDvokOllpaWhLzP8lp+V8tHTMfzAgAAQN9C
9ant27fXrU6H34Uigd89cG2Zc70NGnS9zXmg+9Lcc/9MGz1olM28f89+p9Gy
YKINHzbRFrZ0X74ORF19lufxu5ruE553Z5Nt3NxsrTXWa23ebBubdtY/v8rL
5mXWMHeuLVpbmZ/9zWPj4oW2dufByOtOa9q42Zpb82+zo2mjbW5uPTjl1oPO
YUeabMn8pdZc93wAAADtmQHygd89cK0ed6H94PsX2rjV3ZfmguFnl9L8vv12
/Lr9TGGb3fJ/3y+lcboNmtN9+ToQdfU5ntfvdsnzLptlN02cmHDz9DnWsGxz
TQ/ZI7hngl05YrqtqbHemukj7MoJ99Q/v8332I1XD7SxpTK+c9Eyu2N0Pxs0
efH+57F1kU2+doot7YInzU8pr1eMsOmr9Xux3Tywn10/e1On2xzMtgU95hxm
0moLJ420qcvqnQ8AAMDvAuQDv3vgOhh+1x7ZZIvuWWJN+x/etT2tK+2ee9ZY
/Z6Gldq2bVtC3ud4V8arkke48Z4c6co3Dh5vM+fOtblzptuEYf1t0Ni7rLEH
/L9VM99F8rtLp9iQkN8daxfZ4vWt+53H5rvG2uiZjQcpv9HvttrmZYtsRVPn
2+Tyu+tm2Mgc56zHnsNqLJtqw0v5K8R7IgCAXorqU6rD10v4XSgS+N19emTN
PXbruGE2aNRNds/KVmuzmhts4YwZNuOulbarfb1dK++yGaV5Cze0TZf97vIm
WzJjnA0fNs5mLGmyfVa1LQ2tr33cNGqQjb5pviVNlfeUtpkyqm2fa4Iz3bCw
Yh+lFa1pyZxk2+HjZtiiTfvW3dO0xObcVEpD+120qexv2/J5l63ctS/ZZH/K
46BRdtM9K601+ulknwttY7KvKTZ60DAbN2OpdVdz6OXLlyfkfZZX97tX7L8f
SPvG1pU2bcS+eF7zqvk2f1Vz4s/mzl3S7oN32ob7GkrTJY+8aK3tCOl5m925
ZZZ09M6tzbZ6Udvyinhy4xKbu6Tk4XautUXatmGZbY7xy50b7L4GbbfI1jZM
soFVvFNr8+ry9stnjtpXNs2rbP78Vdbcnv6SxlSeG+6zDaF9cOMSrSO/13as
i1ZXaz9dvTz8eO+feX37e4X5tqq5LW2Vq5Z39HM7bW17+aTbPrfRbHfe4H40
Y5uYzyrHvI9Wa169KJX36HebbdX81Hbl89Bgyza3lq/NfX63yVY03G1LN1WW
web5k21I+7sVP/aq+Q54+bRdg9nXTNs5bCtbzfd15y5ava9dtta9d315W13b
DSuaUue7rUz8nDfctyGczzC/oh3EUptyzQSbd1Bi7QAAkAevU9VL+F0oEvjd
Nu25Z7j94vTv249+co6de85P7EffP9OumvVQaclsG/D979sPLhxnHr5t87ff
twGz4/TpdtaZp5e2/5n99HS1Iz67tNydYlsav/rdpck+tK346V+vtWEXn16e
/sHpf7TJ7m9nD6jYx4ab/8/OKk2f9bNz7dyfndnmr1clC+zPZ5a2PfNndu65
P0vWuWjsqpCvEHdumW2DztH+zrSzk2MsHe/Fo+3eXXGf59nvLj0nWeb5uqib
AtddfZZ36nczyB3fTfnG5jtvsCtvuDPpkyivMXz8BBszarJNn72g5F23W8ON
g0vzptucuTNt4tD+NnJGu89ZPcNGDh5tU+fMtTlTR9ugq4bb2ImzbFnFPlfb
bdcOsVGTZ9rcOVPt+oEDbWJDc8jLtXb9teNt+hyl3c+GTl3Wtqy5wW4a3N+G
TmzbbsyQ/tY/y++unmnX9R9o10+dY3Nn3mQjB/Tb5yVXT7cRw8bbjWNG2c3T
Z9vCkrdpbrjJBg8YZjfNnGu3T77WBg+eaPOa9pX3oMEj2vI6c7JdF/NappPy
cDY12NTR19iVV4+wcROnWsOmSn9Y6XdX2x2jB7cdp9IbNsRuXpTuF9tgEwdO
skWhTGdeO8AGj5lqc+ZMt/FDB9h1M1a2+bGMY96XTqvdd+tQu2rouFJ5z7Hp
40bZ5AU7rNLvrrbpI8K11HiXjS2Vw3XtZTLqhpm27uF4PK22cvpIG1w6nqaq
ZTDRpjZs6jzfgaR8+g+wkeOmt68XyljXzPUTbOKo0jFMn2v3lTznmpnX2tWD
x5SuQx3TULv62hm2Ul500ywbfbWXm94ZlO6TUbNsUzK90qYNG2WzSuemcdYo
u2rk5NL5LF0TE71Mmm3R5KE2eHQpr3PnlI5liF0/e198fd6EwTZlaf3rewAA
fRnaMwPkA7/bpnlDf1Lydn+2Ke0W9ZFNm9rjmnn97k/sssntbYdbZlr/n5S2
OfdauzemcfblNkUx3D332rXntXniP0+8r7TNHls/4XdJmpdNbTefFX73AZv8
x9L6Px9hC5OFe6xpU1v8eMukP5bW+7mNXNC22Z6mTeU20JV+d5fddvnpyfT1
97U9H1tK+zhbPnz0fRX7PPvyKZaEmlum2mXy5xePt+64Qrr6HD9UfjfOS7zG
iGltfiFr+9BON/HG01a2L5N/GGkz1nW+/8Rbu9fTfodNteXt+2qdO77sR5T2
wNJ6zZ3lu+S15k3oV9GutsJLyvuVfNy0le4fl9nUa662SQtay9svnHR12WOr
vPcdT3tey/6odnl0Vs7V/G5rab2rbrhzn1dcNMkGpdvKNt9pN4S01La5/3Uz
98XRG0uev99Yu6s565gDWnb1BJvXnD6Oan63Y/k+nDqeplL+B4+cnn29pMqg
03yH7ZLyGT93XxmojN23Ks2rx9vd3t66ueTH+11nt5d9faPdfl0/G3tXc/ux
tPvS1tIxXnuT3TTyBrtT+5MXHjzFlpa2aZjYz8bMbupYVteE/tJaPxzLymnD
8t1vAABw0MDvAuQDv9umXbddnsQ0z7rgKhs3O7bzzet3Y//dPTazn/zsxTZh
XUjDN9CcAVo+wGbvm1EZS03Fd+8bfV4SQ/7FpcNtSmizXFpgv1Kc9pxLbcSU
RbYxPPoq8zXHBnXwriXffW7w5al9llKwcRdWHvuBqKvP8UPqd0fOSOJ2mX0n
d661hunj7bphw2z44AHlOKv8S9mrtS6wSQM7ehehtqd3TB5tI0vbDx3Yv9Lv
xryEaR37DXc2d57v6Gfa53X0u7Gvs3xdySu1Zh97hz6piT+McdXOy6Ozcq7m
dxNfP2JceQyxm8aN6NhuW/kI8yrfM3g59LOJDVnHnMpT9JEV5ZLld/V7WMk7
Z1+bagcwst8Vdl21fsWpMug032G7jteg8tcWi+1wHSTx7Gm2MrV9/4kNye+l
Uwbb6FmbEs88asrS0vQ1pWNrTd5lDJy0qO36XH+nTRgywK4eMd6mz2tv4639
XDN633mZONqGhnLN3V8eAAAOGvhdgHzgd1177P6Zw+2Pvzwz8Xw/OucvNnm5
TO/++F33sz7vwP2uWYstnHiVXfyTtvbPZ10w3Oa2x6L13aGrftPWPvkHZ15g
I9oXVOarPQ/9ZoZ+xe1+1vNxkP1ut/bf7Ta/2xbjHFLyApru6DWW2bRhg+3G
ue39GqP3ai35FbVPHTLEBg8eahPuXN/RSzXPtfEDRtq0pe19NbX/nH438SlV
8y3kl662yYv2zavtd9t9U/u8JKbc3pa7g9/NjN12Uh6dlHNnfrfSA2bQWirD
lG90r9bGyiRPie+v5Xcz49Wd+d3K8q24NvuNtOn3zrYb+t9gd2aNb5Xhd6vm
O2zX4RpUfNuPKcvvpt5JKPbq17Pi5QNL53fp9JFtvrphog0tLVs0aWDie/ft
V/2a5+5rn1713UAb8tH4XQCA+kH/XYD84HfT2mNNDSPsInnegfqQT0e/u+KG
C2r43XafePpAa/sUUHf4XdcjtmbyX+2nGd8qemTNZLvsJ/tiuJX5useGVrSx
1qGW8hVjvgfZ73bf+Mzd5Xd32trZY21Qv5IHbG8P2sFrbL/LxoaYaNP8ifs8
YMk7DJ9aw78vu9WGluNvrbZ+xnW5/G7jzOusf8mbNbZvt3nW9ZntmeXVB5U8
VGv78dw7eXAnfrfZ7hrbz0ZMa+8z2rrObh/Vv+SrG8vlPeSWxe1pNdnd468u
f0MoV3lULedO+u8um2pDB04o9yHWMbV2aBus8ZEmWkO5TEvbhDa9OxZMskHq
39uadcyBpO1vaOvcutk2J2lU77+7fOo1NrDk+7y9ddPmtnGbYttv9X8dFNYp
k469dpbvsF1SPtfPbk+vteRfR1j/sXe1tW3v8N6jrY36+Lnt7ZF3qp3BwJJH
92MsHdvAG2zsqPZ2zEnb8Al244j2aR3Thn1jVCXvP3RuVFb9S35+5b627/vO
S2vp2siOewMAwKGB8ZkB8oPflfbYinF/sb+Mnm3LSvXZzQtHJ373p0PvsX3e
9WIbNmWGzbhpoP26fcyp9HhVvx44xRatXWazh16cxFrPLm3fFks9UL/bYjMH
XmqDpyyytaX8rZ3aL/G7f5z0gLXMHGiXDtZ+S/leO7Wt3/AfJ9kW6+jDV49X
vk633w7VcS6zKZefneT7sqktGfs067XtmfspJjvQrir9HTp6st29fl+cq2N8
t6mUj9K6A4fYNUOG2dipk2yU+43G2Tbm6rb47jVi2Gi7eW4qxtu60qaP7G9X
D9Y619pNU8bbkBx+V9vNuLZ/234HD7bRE8ba0Cxf2XSPTRzcnv7goTZ+3Cjr
X9Xvav0FdvOwAW3rl3zR8MkLyj5N5T1w6DAbmiwr7dvHParYZyflkS7nKn73
4cWTbVD/4TY9+YZryc/NGmODBwxsK8PSMdx495bUPtWP9poQB43bDLZBQ8bY
LPdlnfndEk0LJtvwAe0x+dIxjJ2ztjR/k90xulSGE+aWPGVqvKrSeZg1ZrBd
nRzvQBs0bIot3p6OhWsbxUtTfWDDuR9+6+LO8x3QNThk1BgbWTrv1wweYFeF
McWy4vytK2fZmNJ6g9qPacysOAZWepyqTTZrVOV0w6RhJd99rY0dP7p03q+1
Ge15imWla/C621a0p7nIJl+T0c4dAAAOKbRnBsgHfldqsYXjLrPzztw3JnFF
e+H2cZ3a2jn3s2kzRti5ab97bj8b1s/HNT7dfvGXSbYi3Qd4f/3unvtt5uDf
tI/7HNNXG+zB5TbOle2ws+LOLTZ3+AXJGM5t40GfY38Zt2Df94b6gt/dT3Y0
bbSmnZXz1swoeYQ7m6y1ebNt3LjRNq64zUZleq1Wa968ed93Yg5wvx3pevpK
d3Nzpdcqe7idTbaxKeu7QF3NV2fbp/Kr7/dsrH4MrQsm2Ugfu7pim6aO30Oq
yU5rSu9LaXVyzMk5rlEmXdpXnnxrvc3VvgmVdQ0cwDmpmiflvzLdzHMBAACH
HPwuQD7wu1GP2HbFd7d3fH7sad1aqntut1pPlke2Z2/fLdrTaltL+dta8dHc
ZIG1bi3td2urpZdk6pHtpWPZah2SOchqaWlJyPsc70l+tyNqGzxwXzvSEk0L
J9nQa6ba8h7wf+D+0KH/bo9itU0flTW2MhxamuzOsaPL7f8BAKA+qD61ffv2
Q1uRC8LvQpHA76JDpaVLlybkfZb3bL+rcZcb7NbRw2z4sBE2YsQwu278TFuS
NW5RQVg2y78TW/+8ZJZ3c9N+xcihe9nRnDfmDAAABwuvU9VL+F0oEvhddKhU
7/8bAAAAAHoLtGcGyAd+Fx0q1fv/BQAAAIDeAn4XIB/4XXSoVO//FwAAAAB6
C/hdgHzgd9Gh0sqVKxPq/f8DAAAAQJHxOlW9hN+FIoHfRYdKTU1NCfX+PwIA
AACgyKg+tXXr1rrV6fC7UCTwu+hQqd7/NwAAAAD0FmjPDJAP/C46VNJzud7/
NwAAAAD0BvC7APnA76JDpccff9waGxtt27Ztdf8/AgAAAKCIqB6l+tRjjz1W
tzodfheKBH4XHSo99dRTtnz58uQZ7c/s++67z7Zv316e1rfTW1paytPLli1L
rlGf1vbRL69YsSLpv+LTGrsh9hFetWqVbdmypTy9evVqe+CBB8rTa9assc2b
N5endS9s2rSpPL1u3TrbuHFjeXr9+vW2YcOG8vT9999fcTz6rXk+rXW1jU8r
LaXp09qX9unTyovy5NPKq/Ls0zoWHZNP61jjGGAqC5VJ/D9RZebTKkuVqU+r
rFXmPq1zoXPi03pGLFmypDy9c+dOW7x4cXl6165ddu+995anW1tbbdGiReXp
3bt328KFC8vTDz74oC1YsKA8/dBDD9n8+fMr/h9vaGiomNZyrefT2l7p+LTS
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
HnbYYQlPe9rTknk+DVBv/u7v/s6e97znJb+f/exnl+frWq133qBnoGcWzy0A
gGLx3Oc+N/nbG4XfhSLR2/2unjMxvqvYrvep8LFaEKqn1NbA47u99f9FhBBC
qC/J224961nPqndWDorwu1AkervfVYzM1draWrGMb2ageiv2J5fvdb9Lm2Yk
qb7k/S/Un9vf0cWxlRFCCPU8eZ+T3voeG78LRaK3+109Z9Lf5FB/Cv9epI8P
BFAPJF2behejv/7/4u7du7k+ofzM8rHL0qp3/gAAIBv/fxy/C1B/ervfVd/I
ODZV/OYLQvVWetw0/b8YY3gI6RpRvUnv6eJ3LXrrNy4QQqi3SM/uZzzjGfXO
xkERfheKRG/3u1nv1TzWqxivYibbtm2zxYsXJ/PkMfTdIpf7Y48H+7R7EU9L
0zH+ovVVH/3v//5v+9WvflWxb19Py2P6vg8t9/TdD7W0tFQcg9rB5vVDsd22
jxWoPs2+/RVXXGEf+9jHyvmK6Sp/7r+8vNLH7es3NTWVt/P3mr5vrf/CF77Q
li5dWj523z6Wm+b7st46hn81qZz/9m//tqJsdP5Xr16dxH/9utTf++67LzmX
Pi+2i9Z50nZ5yi/9/ie2mfVrxc+vpxe3ideK51t58d+xXcXnPvc5+8Mf/lCR
dvT22sbvAT8OKev69ePz+yOdTtzG19H6nq/0GMexr0McTzPd50HHnnXf6Tx4
2sp3eh1PM+1RR4wYkYynp+ePn++Y561bt9ob3vAGe9GLXmT/9m//Zp///Oc7
7PsLX/hCskxSecc865j9GonXQ3zGaRvP79Of/nS7//77O+wDIYRQ1+TPVeK7
APWnt/tdjWnqStc1/Rtp3/72t5PnkXtKzYt1ev1WndDr1LFeK8nDnXnmmcl8
r997ffKzn/2sXXLJJeX6q3uROIaWpHnRV/r4RbGPnjyk1uvK+Pa+fTwe+fu4
XPn76Ec/mkzr+ezeyfOQfgcQ68Pp+KTW9fp2rF8r7zoXqr+7p/I86Xdv/kZd
XmX5Xemtb31rch2pXP3cH3nkkTZ37tzkt3u17du3V/VjtaRnQXw3Ea9Pzde5
iZ465k/z/Tp44IEH7Dvf+U75eHwd/f2v//ovu/DCCzvsO17Pfr1Gn+z3n+dF
8ncv/s4oXksxb66Y3oYNGzLLIHptSeXpitd/3L/KPvpL7cf3lb6e08eg4540
aZJ96Utfsnnz5nXIh45N/vbHP/5xedstW7Ykf/19ko532LBhyfsqPy4vg+jh
labmx+NQGcX3bZrWc1DnU3lPlwdCCKH8wu8C9Bx6u99VvMKVrlfrWaSYpOIr
8qu//vWvy8ur+S/VM73OqPqg6q533HGHvec976mod/v+PvKRjyQxLffL0b/K
T3qd2uuzMUaq5el6fFQefxhjW15HlmJ/wEsvvdTe+973Vk3X68LRd/h8L5Os
tpXat+rOKi9tp7HDFi1aVFEPj8el9fz/B+2rr40nVs3vvupVr7J/+Zd/sZkz
Z5bXfc5znmO33357xfbx3Oh39GvVpGdA3L9L14DSiNezXxdp3+vSutOnT7ej
jz66HH9136xz/vGPf9z+8pe/lPel+0Pr+XmO8etq6et5JcVrI17X8VhiO4r0
Np6eH0ssB5W7X9vRy2fF0qO03Jf5Nll5i20YYv5U3v7bt/vXf/1Xu+aaazqk
5flLv/tK37s+Hn0sU03Hc+3vszRP96jeZ9HvAyGEDkz4XYCeQ2/3u6q/ZbWt
9Hrp1KlTkxjKjTfeaP/+7/9eXq76n9ohDxw4MKlTan2h2JV8hspu1apV9oEP
fMDe9KY3Jc+zd7/73fahD33IjjnmGNu4cWOSzoknnmgXXXSRXXDBBfayl73M
Xv/619vPfvazijyqvariq/Iwxx57rP3+979P5nuddMWKFfa1r30t2afy+prX
vCb5plvedofK/7333pvk5fnPf36y7dlnn52Uh+rNgwcPtpNOOimpVyt/hx9+
uH3jG99IntWx/ajaPcvLvPzlL7f/+I//SK4dreP5VIzq/e9/f+LP/vEf/9HO
Pffcsj+RdHwLFy5Mfmu/Os5TTjnFlixZUpHf2O60L6ma333zm99sf/3rX5Nr
TVL5qI3rnXfemZxDXZeKE+qcvOAFL0jWnz17du79yhcrHbVzUNz4la98ZZL+
ggULkuVq93DOOefYZZddVrHNV7/6VbvpppuS6WXLliXXhmLRuobE+973vuQ9
yubNm5N11Lb/vPPOS9LSNfKSl7yk3L7Zvbnuqf/8z/9MrkHdR7/97W+T+fG9
jeLEui6/+c1vJuX1zne+M7mG/FpMv6vSul5O0o9+9CN76Utfaq9+9auTMr3+
+uuT+YqP3nDDDUl7h7POOivJo9+v3tbBPfNPfvKT5L5XeascPNbux6L3Op/4
xCeSY3zxi1+cxGiVvr93UtpHHHFEcq503tTuwT2sjkFlpbw985nPrChPrScN
Hz7cXve619mHP/xhO+qoo+zkk0+ueO+kNLSunlc6n+94xzvshz/8YcV517rn
n39+8q0M5ePPf/5z8hxbuXJlxbEihBDquvC7AD2HvuB309928Tqx9MEPftAG
DRqU/Fa9b926deW68gknnGA///nPK7Z94xvfmHgLj12qfn7VVVclHlS+QPVe
ten0uqL61ild1U+136uvvtr+4R/+IdmP6uGqk6rOPGDAgKT+qe1Vz5e/kXR+
7r777qRu/fa3v90uv/zypD6quFm6TXSWFKeRF5H/HDNmTOLDlU/V4ZV35VOe
XuMpqI6/adOmxDuojix/K8n7q96sGLbizyofeR/5DEnloDwqDfkF1feVjjy1
/kqK7+mZr2Wq18vH6P1CjE/pekyfp76kan5XXkdxU71LmDBhQjJP1+H48eOT
33PmzEneQejaaWxstHHjxiVtFhoaGmruU+Wv/aqNgs6JzpeuCflQ+TE/P/JT
em8Tpdij3hNJeveicyw/q1j0+vXrk+tr+fLl5fbz6r8rj6lrR9ehPLnauPt7
G51/3Qt//OMfk2tO+de9cN1115XvWW0j7ya0nu4f5V33YzommeXXlL+3ve1t
yW9dt3r/8rvf/a68XMet90G6X5UfxdTlTdVmWHnQNrp3PvnJTybHJ+l4/t//
+3/l/rfytc973vOS/Gl9eeXTTz89OU4tV3kInSu9O/N2/pJ7Xi3Tc1nPlZEj
Ryb3vPpsazvlS2WtMtQ7JsXM9Z4hSukcd9xxdsYZZyTbqDxPPfXUsudVGjqf
8rl6r6E8q52H2sN43B0hhND+C78L0HPo7X5X/iG2bZTcT8gvPvvZzy5/C0Yx
VsVhXeoz+Ytf/KJiO/nOoUOHVuxDflfeLT2Oj+q6ir8ozhn7wqkOP2PGjOS3
9qcYmM6D+7tRo0YlfkXnR5KfkZd0ryO5j8wj9Q/8+te/XvbHymeMnyrG86lP
faocw5K+/OUvJzEplZvq4v68jvVgxa5U59exfvGLX0zq1nFcrdg+WekoDV1r
Wu9d73pXcswqo9jPU1J9Oz0+V19QNb+r9xyKQcobKRYoH/eWt7zFpkyZkqyj
eT/96U8rrgnFPnVO8yq2ldU5lb/W+fLYu+4Fvb+IsXd5sdGjR5fzqWtc+VQb
fik9PtJnPvOZxG/6da5zLy+vdyTyW+rbqzbPft0rXbU50Psin9Z9I08mn53V
TtnHjfI8KS3lw+PH8rHa5+TJk8vbxDGu9J5J7TQ8D3ou6P5VTNnbP6uNhLyn
S/PkG9WGQtLxf/e73+1QrnF/3r7Yv0Gl9wOelr9jUH70vNH7taz2xb7ezTff
nLwncOne0TsPxeijlGd5eUn3scauj88U3f+eF/ffCCGE9k/4XYCeQ2/3u/6c
yeoHK9+ququ8g9rvqr2x2iNL8oZqOywv6FLdVG0KhwwZUp6neqPqlvIcSjs9
xsunP/3pJP6j+rSPNSP/opiynoWKm/3gBz8or69YjOI2yrfXi9U2UvE779vb
lbinewrPc/S5PjbyL3/5y7I38j7I3//+95P2rVqu+Jniw2oDqjarr33ta5N6
uHy72tRqfU0rdi3F+FAcc1bHpONVXFhtPD3G7n0503H4vqbO+u8qrqnliiPe
csstSQxVsUmVvWKmHuv1bRWz1LuWWtL16jF7tWXQtaL3I4r16p2LYsbar+bJ
93k+JcVJ5VVjOwPFYnWt+jmP8Xu1dfjNb35Tfv8ktD/FLyW1IdB7mdg/Vt5L
73o8RrxmzZqKuoP3T037Qe0/a7wleTrFanW963r+yle+ksQ33TPrXvV7wctS
7a+9LcPYsWOTNiO63hXfVlxVbcDdAyt9nRudo/TYW1njfemZoG3l99NjwesY
1M5i4sSJ5W1U1rEvrt7V6dzrXMT75+KLL7a///u/T7bXuzjdb2ofIF+u41K8
WHFlf8fl3zry8ar6WtsKhBDqbuF3AXoOfcXven3Wnz+qM6rPqmKYimGpH+/8
+fOT9dXWWFLd2/va+hgziv14/dzr9Krjq/4bx2b2/aTbRKseqXbB3hdSHkIe
O9bXVVeW1/D42D333NPhONK/q0lpqB+hjiPGUOMYsOq/q7pwHHda7S9PO+20
ZFp1Y+3fx56N4xZ5vVjHJF8Q68kqnxgPVlxOvkGxtu9973tJvuJxp98X5Gmv
3ZuU5XdV1vIy3m5Y/lPtVOVldc1Kel/jbXL9GlQs1uOseaT4pfqIu3TeFAv0
8cV0Lyg269KzQ22K5bXiuOWKx+qdUPq4hN79+Jhwfozyi3pfJD+ruH/6ezuK
M3t8V9eD8qNv86THAPdpH/vby8H9dhy7S8sUd9Vxqc2+/LSegZpWfFdlG9sc
qA2GPLDmaSx23Qu6bnWfp8cgl/Q+S22FPU/xnkjnW+koPX8X5ut4+eidkuL4
scxiuUp65/CKV7yiPF/xXb3L03UR1/P3SrEOpmef50X3nsd3Y798hBBCXRd+
F6Dn0Nv9rn+PyGMrXmdUDFXfg1W8SFJdVc8m1XUVG5HkEeUD3Xep76zSU/1c
Un1QvkDlJy/nbXslr1/LU6utqeT1SsW/PGajfnqKFymG6vVc9SnWeDiS6sMe
743H4cvySLFdtT297bbbyvV/ffdT42Rpn/Ioxx9/fJJ3HztZ7TG/9a1vlY9H
9X3FwNU32aXYrn9/V75H/ZLVptM9q3y7Yl6eZx2Dt/mUFHuKYyClY/B97Xso
WX5X3kzfVr311lvL50bX6D/90z8lXlBlpDGjFAP2NrGKVyrGqFhkLcVvHqkf
t+v//u//kpi+2tJrv/J8uhckXcfqMyqfqPPu7zSUb70z0hhLfl9J7j2Vb6Ur
+TWheKPaFuu6UhtaeVkdl9LSfafYpN8/OlYdm8Y9S7eBzyOlp7bBPmaat2HW
2Fi6NyT131W8XPlR+vK3Gg9K7bb1vJTUD1l9H/x6VXmon7L7el33aivs+5GX
V5tj3W/+zJD8d/wWWjwvWqbYsedNzyh/hsTj17NEbVOi91aZ67g0BpXvT88k
PW88LX3DSO84/BtpauutvPhYe/ThRQih/Rd+F6Dn0Nv9rj9nYqxCdVl5BO/f
5vVW1RHlv1THVrmorZ/qvmoXqJia2jZr3NRrr722ol+ePKTGepIHUf1d7X3l
BSXFMH0MWkl1bvXXVUxYdVzVt+Up5BUVF1JcVx5Z6XssSHV0ecNYv1be8tT3
vb2i2pEqBqT8aawjxakV21G5KBal9tjus/RX8V3/jqpiT8qP8qU6tGK5aoMp
T+6+Rcd15ZVXJu2d1U5UY8fKp3ndWXVteTkds/cNVBlrXB95uaj0d2T6iqq1
Z9Z581iu5H1r5S0ltYVV+2P5U5W/1k+PLVVN3jZWfkz7VixZ507vfBSndc+m
dzl6Z6L96vrW9SSvJI8U8yopdq/rRG2V1e5BflbLva1DjG3qmu/fv38yrWtE
bSe0nXye3gtp7OP4DTC9P5GXlPK+D4n9mjUunMZA1zHI76nfq/LkY5WrL77u
NfU1Vj50ncfx1HVuVBbqgyBvrhi3ng+KTWt7fyehuLHaEOu9g86JxrfSOy3J
v6OtY1LelBd/Bmssay8fPVc0ZpiPH+3lrP3EY9f7KrVzd+l+VfqLFy9O7nP1
s1ecWPejxp526Ti0b10vWq5zLm+ve5bvESGE0IEJvwvQc+grftfbH0bFsW1U
3/XYp8da/K/qpKoDpvuXalvfRsvk+bSu0o370zq+L6naNzkVe4l1+6g4hk1X
pHz5M1fHo+OQP3KlPbN/h1P5z1qmMWZ1zSgf8VtFXj+Wv1Z/UHla397j41rP
53mb07gP1fNjf9++piy/67/9u07R5+j+TX/vWR6mq+1QfR8qdx9DzKclxSd9
v1ru4ym7t9N14cv9nlHeFG/WdeLn2NNT+pqvad93PA5dFxpTPO37PW3Nr/aN
3lryb9yqrBRv9bS9nb7acOgdlX7rPvFyj/2R/VvUyo+P0Sy5T/XlOkbd07r+
s8Zf8/MUv9nlSn9XN5aD7yteCx7bz3o+qE2F8qP3CZ6PWH6KTcsj04ceIYS6
T/hdgJ5Db/e73p5Z8n61XveTVAaS1x29zur121j/8zq5x1hcqmO6p4sx0ixl
1Ud93VjHlZdQfqMn8PaXqid3pb6vY0rXn5Vu2helx9Px7XxsIVdMS+n4tJeP
yjarr3A83jhP+/WxuOL6fc33Vovv+jWoaX9XEq8jvWPwc5fVV7SWtJ6Xuaev
fca04thivk5s/x73Hdsh+LH4uwz99fXS4zdL8b7RPL+vlD9f39/J5FHMt8oo
nb4fh0t92TV2uOclXqfp6zHGqXUO/H1OvI/iufPj8eXxfUZsw+/p+LZKX+Wc
dT9kvYOT/DkR03b5MSnd+O7N9y1lvZNDCCGUX/hdgJ5Db/e7es7U8oaq4ynu
4XU91WNVL41j3ng9MsZps6Tl0bt5HT8tpR3rxVnxW9+PzlPW+LN55PGc9PpK
U1LesuLe6Xnaf6z7azqrL2HcTr7XY1c6Xt+nVG0sKo+NS13tn1l0ZfndWObp
6yh6TZe2jWMz1VL8BpXHOKM/ir4nHfPX+n59aZn37da8+B2qeP94W/x4XDG/
uv59LGZXtbGT8rR3z7qGfKwql1+z+vunP/0pGbPZ8yr5uvE7Stq3jj/erzom
X8ffVXmf3piPWI5xft7r3dtFeP7UlsLHevN3U+lrRWXq2/lzzcefi8+heL77
2v2HEELdKfwuQM+ht/tdfV/X/ZPqptHXepvcWG+uFTeKsU1vpyx5Hb1aHFRS
fdTbfsa6pNoTRqnO6XXStP+VV/D6bN4Yb8yH6rZZ3tTbiKa9kvuhGEeSV023
VXZVG0fIy9XbwkbF2F1UX2tbWS2+K8X2sFnvF3QvRw/U1b7P6fOe9oMxXZ3z
dPsGV3wv49dafC9SLf6cju/GazP9TWdvC90VKS9KJ5ZLjD+n74Ws9HUfVXvH
4IrtQtJeVvvT8hg7zzrHmhffmXn7Ee07/Y3vKP8GU/wecpZ0rCqPGIf344vb
4XcRQmj/hd8F6Dn0dr+r50yecW287u192LwumP4r6RkW42JSrMdnjfWS5eey
ton17thG+kC8X3pb98yetpSON8X6vrevjO8GsvLj9XWVt/yT9wOObWR9/1Js
Ox5/67rsi+PlZPldlYUvk7K8lSu2Zc17vcQ00m2iY4w2q1+1jxccr9nYBte3
dem3fwvIFX12Vp9VKbY7zrqPaint/dNx2Rg/9n6wnh8fVyr9HixuH8taZSg8
z/E6TsfOPV/Rz6f7FGTJfbPfl/LBsVzS59/bu2edJ78XdU6iz8/qb4wQQii/
8LsAPYe+4Hcl1TOjH4hj57iy+rj6+q44LrJ+x3plrEf7t4V83ax6bLr+G8eJ
zspH2uvkib+kvX6sfys9ryd3FhdMb5OeH8st1qmztot51rGn6+ku99d9SdXi
u/FdiJdv/I6rfxta2p9vOMVvv7o8nXjd+m8ty+rfme7zrvXiPRf733re/bj9
GNNtLfwayPoOV1fbM3v/95h+VLV2va50m4v0e5r0+wBfT/lN37u+LP1+wPMU
36d5+Xj6sd9vVn9kyePQWc8IjzGnjzXdZqAvvnNCCKHuEn4XoOfQ2/2uvvPj
9bn47dg4TrD3fZPS3/pwP5GuN/u6Uroemo6Rpv1rjL/492urkd425q1au8N0
u1GPzaXHd435caXr7LXyl/Zmvn06nRjvi/nzY4hjJrmUdjw3Pi89DlOMv3mM
Kh2TTPuR2Ha0nkTfomPQ96jieEa+zMc7iv7G5/fk6yd9nuK3Z7PkZRLT7yzN
WnFsvxZiGulryvMm+X5je2QfSzy+M3NFTx+V9stxf7Ec4zud9LmN8jEF/Hc6
bp4+jphuPCYv97g8jm0V5WUAAABdx8fRx+8C1J/e7nf1nHn605+e/NV3KPVX
6Bux/ls885nPLP9+1rOelfx92tOelvT/9e31fd24jbyJ/ur7m4rLxW1jmkpH
40T7fH0/VOn6ss7wdfRX31fV32c84xnJX0/jOc95TkW+lB/9jfvUOj4/phXX
0THE/OfJn94n+LpKy9Pzv553lYXnV8te+MIXVuxTZaL58Zg1rfS9bP18eLlq
uZ+bdLnoWLXMz42vq/34NaHzV+v4Djae91iOfp3Fc6H865wp/37utE1Pv358
uZ9D36fvJ5ZBOs++TTWUVtY6Khffj76v62nGazLe70Lf2fVrSduqjPxa0bp+
fuLxppel8xDX93KJ+dWy+OyIz4dY1l7eXubp55W2r3au0+v6b33bOJ7bdN70
Xew89z8AAGSj562+065naW8UfheKRG/3u6rDefxJ79skxTLiWMweI4rfwfT2
hJ21d45tDhUvVHlGpWM86bF8utJeV/GemJc4ZpHGtqk1fo/3K6wW19Jf5b/a
2FGdpRvTqha3S38vVN8plnQM3i+4WvwsfitK5zK2Gc8aP2jz5s3JXx9jO8bc
0+Nu1VtxPF8p6//FeN2qrPz4u9J2ud7XT9a82Dag2jhncbt0n4DYLyGdf7+X
1T/YxyFO90mP15rWi9/Hjvvy6ynrOOJ9HK+trHyl2xG70tewfwMsrfQ3xNL9
LZQXn5fuGxGvda2v73DHdNJtUfpaXwKEEOpueZ83/C5A/entflexEkl1ytie
2fvhCtXRR4wYYbfcckvZH0n6zofLv9/pit/1jB7gxhtvtLe//e3lcYhjvVH7
Stdt4/dDsvB1YhqudB1f09GD+3dPFi5cmMRzDj/88CSWo2ON9V/VfT/zmc8k
7yEVD/vqV79aHos2T/6k2MZbv6PX176Ut6uuuso+9alPdRjrK06rLh79nafb
2feYlNdYLq961ats7ty5Ffv3cky3Qa91fAebdFtg/b+Y7hftHmfNmjUdyqyn
Xz8uv1+0D782/JtWcdzi6IGr9c/Vfej7d9+a7gvu60X5vRo9Y/pajFK6/gxI
98XNGoc9eva4XPv0sar929kqm3SfXv/mdtxOSn8f7KSTTrKf/exn5XzF54+X
s48X/+1vf9ve8IY3VOTTped/en/pa6Xe9wcAQFFx4XcB6k9v97t6zqhOF+v5
8bsb+t6m2rV+5CMfsXe84x1JG8M77rijvK7q1bF+7HX4WJeP9dwJEyYkviAq
/a2XGBPLozg+c7qfoY81FMfQSecvHvM73/nOxHdKMV7n30D65S9/aV/84hcz
Y23V8pb1LVPPU4xn9evXz9785jfXTNM9QdyHp6dl7lF8TDDfxstZ7YjkwZSv
eBwxfu/H3BPk35uR0v8vyl/dd9999prXvCZ5j6Jj0zuDdB/mzlTP6yeOHezr
djWu7j61Vl9dPwZ5vTheU9rDu9wPqww87XR5+N/Y91iS54zjlXv5xHda8Zs/
kh9/1njM7oX9d/TX/tev1w996EN22WWXVRy7fLnSjzFgpTN06NBkfT8GpePl
H9u5xLL1byExXhVCCB2YFPt48YtfXO9sHBThd6FI9Ha/K/8qeVvQWIe7/vrr
k756t956a9kHLFq0qPy9Ua9zev0vjrUTPZhLdddZs2bZv/zLvyTT6bafWfX8
Wu8HY7vLtH9zH5H2Pl53zfI473nPe+zyyy+v2E5p+jo///nPE7/iy/O+v4zl
5DFzl383+NJLL7X3ve99ybz4DkDpZLXN1fH6WEFR6XGlo1eQ5Bljm+a4P5Vn
+hsx9UT3YDxv6u/jZejn+sQTT7Q777wzmdb6X/va1+z0009PfFNPv35cKvP4
fsLbeeme8XOn9L3teYzFxnPrHs2vKR+DyY8lPS5V/MZSPO/uTz3f8d7Murbj
Oy3tW9dYuh+Et8339ePftHfUttGHx1iv0pG3zWq7LH3gAx9IfKzvy/113If3
LUi/a5OyxoWL6cS06n1/AAAUFRfxXYD609v9rsad8bZ9ko/vqzqlvNdZZ51V
sX6MvWi9KVOm2Nve9rbEw37sYx+zSZMmlZer/FSflh/R+C7vf//7Ex+i9b1O
qXqjtnnLW95ir3zlK+1d73qX3XXXXZ22o4zyOnVDQ4N9+tOfTuJ82pfaKXrb
StWF58+fb5/97GeTcWqOOOKIpD4sxTqz8vvhD3848Ss+1m/Mh8rkhz/8oX3l
K19JpvP0D43fCJZ0bF/60peS8Xpe97rX2Te+8Y1yHv7whz/YN7/5TRs1alRS
RlrHvZGXt3TuuecmZXXMMcfY5z//+SQfWqb6vXzAqlWr7L3vfW8y5tgrXvGK
JM0YD9P/Leof7P7k4osvtm9961vJ/z9Z3zytt/ya1HEqfiu5T8vyomoz/8Y3
vjFX2vW+fmKb4nHjxpXzoPGh5I3lx2K9IPpx/+3fi9Z78h//+MfJdSEUa16y
ZEmFt9S1MG/evGRfKiO1sf7Vr35V7q+q6+fCCy+0o48+OrmnP/7xj9uKFSsq
ysp9n47RY6Yu7VPtQHSNvelNb0rua6V12223lT2i2nvr2aKy/OQnP2nXXXdd
eXs9b3XtnXnmmck1rnbiemZ4/nyfrqxxBr773e/a//zP/yTnUONaqSz07s7P
kfavfCmfej/x9a9/vXz/uPRb7010rvVMUptnHZvuPS8n4rsIIbT/0vNYwu8C
1J/e7nfjcybWzVUPV9/eGTNmVMQQY39ReQSNqyrPq23Hjx+f+Gf1Z/Q6qeqT
8mTyV0Je7/Wvf325znzzzTcndVq1SdV+FEtW/XjDhg3J8lrj2UvykBqz9y9/
+UtS51ed+Iwzzii3vVy9enVSdx45cmQyrX7Kxx57bFLnl2I9V+2Jhw8f3qG9
sn+3Re1Rv/zlL1fE7mrlT1J5rFy5MunfqbaWuq4UY/3FL35hjY2NSbn+/ve/
T7yW6us6fvVHffWrX50cl0u+9KMf/WhybDpOpaW6u65VaenSpUkdf+DAgck8
lbnyHMcL0zlfvHhx8vuSSy5JykLnM7bflDxmV0903UV/E69X93HpsZXOO+88
O+2003Llv97Xj0vHqXb+1157bdnf69wqPzEGG7+Zo/RiOhMnTkyuIeVX5/p3
v/tdcj3F8jvhhBOSdyjHHXecLV++PHnXdffdd5eXn3rqqUn/YqWhfMgbHnnk
keV9xu8aR2la5aDrdsGCBcl5kk9et25dUl4+NoDi8Hpm3H777cn6w4YNs5e9
7GVJf3J//uj6/sQnPpEcg3yuPPHJJ59c0U7f+876c8nzo2V67yafKo+tfeh8
KD+eB51X3XO6v/RuQudSiv3i9V5Czy391n2q9NQ2RfeJnw//BhUAAHQdF34X
oP70Jb+r508cI1XLVF/19oiqN3tMQ35V9Ur5Asm90ne+852knijNnj076Zfh
Y1NJkydPTsZL8m3kbQcMGJBMe51VXkV9WauNZZyW6sannHJKh/nu3eSxFev5
/+2dd6x0VdnFY/KKERW7YlcUe0FsgFgAxYoNFXsvqFiwUMRGtSuIoigidkXA
hh27WLBiwRpfUYoQiUb/NGa+/HayxjWP+9x7Lvlg5s5dK1m5d2bO2Wf3/bS9
D9DZPTwTud7ldspGLCT7L30+dj/O/vvvP9lrr71WzA9p+lwuHQW5fZ999pm5
xs+xOuqoo1qdep6oT92zefPm1ibI61432Avw4wF0KepCz+/t6ZQucvDBBzcf
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
UP7deedvo5M2YD2PvhuG8+dG0Hcve9nLtr/bbLNN++vfcR5uGM6L17zmNad9
UrziFa/Y/m655ZZzz1+43OR8NP5u2rSpzYn85fNlLnOZzI9huOBknPKXcaux
y5jm/y222GLu+dvoZA69+tWvHn03DBeAG0HfFfSeIODvCQnDeZEx6DGkl7vc
5aaf5523cPlZzxPlO/mMFFMfhuFi0t8pzl/2xnA+id6/Fs6XzKW8ZyH6bhjO
n8uu72L/ZN7RmsD6oPdR+jssg2BeQLcQtC7qzNwguLSQ/btBsL6AbONAtuH9
2v4O+mC+YC3nvZjLiOi74Xrisuu7blf717/+1far6f+f/exnk+9+97uTn//8
55Pf//73kx/96Eft8xlnnNGuqXsr/X1GDqUpPRrIf+xnQPv9use/+/73vz/5
xCc+Mfnxj388k75shf7Z/5e+5Ps+d9lll8kJJ5ww8yxkWdZAfR4LPc/fY+xl
VRmp07rG6lkXXnhhi7Eifvfyl7/85G1ve9tMnlmjd9hhh8l1rnOdyZWudKXJ
ox71qDXlzZ9FHujbNX/U01vf+tbJIx/5yGk+eW6V8fmugnZSPZOe36O0tCec
34kpo8wOz9Nf/vKXblmIgdJzeMZFF13Uxqf2Zgm//vWvJ3/+85+n/Uf1qOdL
X1aevC/ruzFQ3T360Y+evOENb2j/13d5eX9yGxJ5U93o+6rHqx/9/e9/n9aB
fwZeb4KX19NS2eiLyjv5U2xHzfuY/uP/e/mUVtUTyYe311e/+tXJTW960/Y/
7Vnv9/qo5VKetBcM1H4FvL4ou8PzRhrUC/kgzg4y3o4//viZuqAM97znPdv5
afz+pCc9qX3vY4N8ex0ov97X1L76Xf1V50CrHnQdc4zy4elw/z777DO5+c1v
PpOGrvE+qGepHu573/tO3vSmN3XrxvPnc7HaudpGfUzVuY5r1b9VL27LAj53
6P5eX/Z8Ko1jjz12cp/73GemzpRGfddA7ed+XqN8gPVa+fWB+6j0WX9Vvuc9
73mTm93sZtOyKw/e1rpPv/mY5H/PN9+RNuOFdfu6171ui7E/55xz2u8+DjWe
vS3qHKm8yg/q5b373e8+uda1rjXZaqutJk984hNn0vK8gMc+9rGT7bbbbnqN
3otO3r3t6jqg63SN9wWt2z4Oar593Lo8ob5OHehZ/P7617++lYm8Mq5/8pOf
TFaDnqFxPfReAOWxyiL6Xv2p9m3d4/mHXhf8v5JM4nOO5q8Kby+fH3xe1Pc8
T/9//vOfn9z+9refuUZjnnbTszTn9sal0LMV5ryqMFwcLru+i97BXMt8qHma
+eyd73zn5C53uUtb9254wxu2+YjPO+644+T5z3/+jD7y17/+dSZN0vE5tcJl
U8Cct+uuu06fXefJP/7xj5Nb3vKWbd5FnkHG1BqsdcL1S61xvlZJjuY3vqcc
n/rUp6ZrS10jWCvH+HKqbsTnKjN6PpU2UN3oOfQ36gX584Mf/OD/yEBav1/1
qldNnvzkJ6+aN7/X61ttI7kBSOZAZtxpp53a/z253Ndd0kZOrHKQ60WeNn/V
tvQn7Be1L4Da/kJP3928eXNL6/zzz2/fsX6TV/rH/vvv376TLE4fkIzlUP7d
XjHWj6d2fcQjHtHkKckektUA/cF1FqB26el3gDrkvmpD8nFaQf3W/qi+JrkG
GxZj6XrXu97kqle9autHF1xwwfR65Vl5Xa3/qK15tpdvKF+9vGN3Qi/wOq99
oMaa+Hj1+1y+5RqNqXqf4hn5HVQbjvRS2oA5kPlQkGxHeSnbQQcdNNl7772n
99V3nfA/97ju63GWDvLvbe42umr7qDjqqKOazqtn+9yLzfJxj3tc+9/tmqS5
5557Tt7+9rdP76Gu/f10Pk/87ne/mykX0DxR24jyqR+r7OjV2CurrsK93v9V
R94u6qfkV8/lOrX50Ucf3doK9OYQyuN1ouf5POdlqLqmgB3N4c9SfyId8vPU
pz51ZoyrDf2Zak+u6+kqPpfonB89i7kP255Q7RKed9kiXL/yduA+fS+Z52Uv
e9nk6U9/esuvt4XySXko5zOe8YzJn/70p//Ju6D+7uXzucrbpuqCdc5w+5nH
pXnfrKA87IVRXY21aboN5AlPeMLMb96uQOu+23WB2qO2rdrB58099thjxfzV
ucXTrHOY+mKvH/u19FXl3e0T9MvPfOYzkxvd6EYtjy7X9Gze+t37m+8FGSoP
iL4bhvPnsuu7Ps8MvW/3wx/+cNMzmbfdPum2WZ//NH/rr2KHJB/qO6C5m7jq
mgfpH/g10V8kZzKfsrb5+uz3DfkkBOZxfDNHHnnkjIyF3u42/LE6DzpFzwdB
/3E5qZZdnymnr3m3u93tmg6gvPm+avDKV75yxge7Gmgb5UNpnnfeedPysW7r
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
PIOfLzFG56VteD42Bvq2fHuqJ9oMOzUxVP4eG/5nbMvOJTs5YxF9S/YM+iT5
hsyL7JHyd+OsBtqNMw+oP8rJ3In+5bo/6SF3YKfVHFT3Rw1B/ZH84yMmj/Q5
yuYxEdQLdcR6R7/GDsG8TLvTZ5k/XC/ELkj/A5q/yRsyB2lT57QZ79R2u7uf
mQ70TmXlkXFMn6StdOYzspD6Db4A5m2eTR6ZqzWXki72TJ5NHignZWReExgL
zM3UN/EH1Ad9s57/pRgbnsVeAQf1Ef9uGC4eN7q+q/hBf3es7xkByEQ6I1TQ
9W7voz4FrWfMfZqvkenRgfhc1zvFYZKenlPXa+ZiyU61HAC9R+ud1ma38yKT
c7/WlLHv59PZNCqv1hc/T8nzwu/Uhd5PqPxwj+qWa5CXPT5K+6wAcgv15TKG
zs30OgM8S/s5VdfUA23kZ2oK9b3x9R3C2ufGfTrD1Z8nWUK/S270vFY/IlBZ
XU53DPl3vV/Vd6lWuYf8eD/3dycAfFN+/tFY9OKHKUONV6ONlSf3Y3gbqAz6
67Yh+bkYJ/SR3p47j4ntjTlAXfTeW8kza92v1H8YcyqH+xQZa5Dfeu/GJh3u
9XdSVZA//NHcr75Tz6vx8uoeQe1AnVMm1YW/b0ltQl5675f2tuSaoTlBdY3s
6O89VdwlMj5/vZ29vobg75L1M8d9L6fnW/1Y+5k9zlC6KfqU11k9F0rPc2i8
q71kt1pt/Kjvejwt1zIO8S+p/3q78j91U2NXfK6iPlkPuN/P19Hz1GdVF7We
+F/Xak0g/foegArFsTJ+kPF7fdt1Z9+v4ul627vOArDNovdQBmKiyCsxBOjo
uh6o3ei/WhP9fWNqL37XnO3lGAvKoDgklaWOFX/PsO8RVz4A/beeSak5HztU
3c80do+tQDn9Pcd17qnvMB4LLxvtRptor7Xv46JO6RNqC81PPpYUv6+4hN4c
QHqKA/N9H2P83YB6ZK5ijKkvVHkG+zb568WSMydC+rHvJah2aI1f1bFigPSZ
9pDsTB3W/Pu77qLvhuH8udH1XQffyZ+ie+q5Qr3zHoHWOZcFeuuv/Du+79N1
BKG+S8HXjboPUdDcrvdj+HkQjrWsi65jKo/IUb19lL1zarQPx1HXIc9jlZuA
9FZPs8ocSo+0fX+fy2Pk2/cV6poh2UjrF8+SXcP36CqdGv/mbVXlRb+36nJD
+q5sMIpHrHvVfN2uNmj/LB+q8jJmf7Su1Vmxgre7t43rQ8B12d77QcifdFNk
mJ4OLrm22lfq8/VXsZ6CzjyvaXuM6VD/qc/zdy5WeVB+sqrf82ydWw3cH1bR
Oz9a8qPHhbtOq3RV5p6NwKH3Fdf9jWor/ioNyuj+FX1Xx6jX91rmlzqHub7g
Z8HJxqSye9+tNgXfd+350r2ed9k6ezbLmr+h8eP938e+7xOnTnpxHW6PVL41
l+hvr749Lbcf+TxU3ynu0Lzle9+198XTlc3S+5SfOVZ1Uz/HUdDz1d/wiWGT
8DonHkXvBPT2UJ+ULUPP8jWj7uccsnX1oLaj3VT+us9az/AzCb1fqXze78mD
fNEqu8e2j4XPpW4T8727Xn7tN6m24SHUdwYAP29fqPNnnRt5nvqejyHVF99x
rX6rY6Hqmz4v8z3zgtdvT8/3WHOva56puvDx6b5k30uvNvP6q7JjrbM6zyjv
0XfDcHEYffe/vhiPQenJ3awNOtNFtvje3FffO6FnKx8esyX4bz6v13zWdVh6
kPZA9dZSyQwus/DdWP+enzdY/cV+DXB5S2cguvzp8HMOVVY/P7eWVXLI0FlP
9GdBZ9kMoeqMehew7Oeya9R3n+oendPo9wPyUPPtcrI/v1eGqu9W3drR05nc
5wT8vTN6xlpQz/xSvbisyTN6Oo7LC55Xyavuq/D6kP7Ss5X42UxKX3tpgfeB
IV+l+rPXxUr9x/UFPx9F+XH4tZS5nrPMmHA9SLYSrx99drm2vr/G9V//Dug+
P0PIfQ31euUVVDuUw+0nq927Fp2XOc/3hvpzhmRO4HOR+kpPt+v59PV+N4fr
CkpzzPipZaVuJFf7M3TWH+VTbL+uV/sM6R4qR82f66z+/KG+Lz29xlvW8gzF
27o9ovr1at3wLI+dEjgLjLhcYoSJSWW/AGc61PiMatcAGqOu7/mz/freOVU9
DNUFn3s6Y8+OrL6r8e5jQTFZfjaIv2dqDNy+XM+Bkq1iLT7tipoXpVVth+rr
Hj/W60Pe7kNpA4+lr2ty7+wO2ay8XXx8u97t9v+at2qnd3++rwMe0+X38T91
oXg5R93PDqLvhuH8udH13Xqug8v3sp2iP7gds+qUWhOUlmQuyfRAvj3fh+rn
7PT0H61h/Oa/S691+dbz5LE9PTv0Ws5nrvFIrvsC9/VqDerJGdVnVnW56vMT
3F5Q47vlr63+LfmBBL/Pz1sCPftAXb97sZGSxUivvoNe13vaWoMZb2vZv6tn
qs3kv/AzcgBj2ftBTUNwH/NadJKeTOnyicaK+zFBtdH0nqn20TkvKrPrP5Tf
/fWC+9hkR1LbKPbM60D+TLdbrNR/9NflupoH+R8cLvP4O6j8L23mqDFx7n8G
vTmiNx+5PNnzhdf+7PKo5ju/v+4hBn4NUAwCdTEmjlkY0mHr96or2bzc1gG8
TDqvpp6BQ1nre5rVNrVfKpZitfHj9duTc4HmiN649/OolIZiHtyPWv3Gfnas
4DqA9wu1SW17zyNlQubvzY2KH+nNqW4n8rgF1YW/h01ty//67Ptt3YfvefD1
yue9Xn3KntTz0Q5Buk5955e3i86CrnEWrrfWsaZ3A9W06lyxEnyfQh2D1BW/
1e99TlsNPqfqObLJOKr8oesc6qPuz/c4EV/H6lzW229c/fc8r8a59dZvt1P7
e9d4tseo1PwrhhtQJ14OoTcnKL1ezFT03TBcHG50fRcwB7p/oeotVd9UWlon
eufJANd7QY2lFap+5PvSHL3veYbvJ6vn5bteWWWzsft3BZcLkBvdT+XxlYLr
v/VMYtVTfT+K62kuF7ify+PEVG5HfdfG0FrU85frWV4/dX+vnzetOtC1qiPp
VC53ef8beld91XerH7Je79B9vm9a9gm3S3h+V0NPLvFzZtUONSYd6Dr5+XWd
ZEbd05ObPH89nch9l8D1Uu2NrBiSRVbrP713yOhZQ7GJ6j/Kn/YX9HRl7Vt3
+5ePLb+2t89McRI9m5jKWeN4gfdrzXGuf1Q/iORrh8uNY/Z9VLivyn0sPXud
yqL76rXeZzyfvTFe0/W6d3vSmPHjuqnSVp1X39ZQ3Dd1UOXrWv+6p/bX+h7z
ugY46ruK9ByH6wv1fAXZtWQ3dH22PtNtg9WmAjzWQffUOJCapu6t/VBj/uL4
OHv7LFRe1Y2nOzRvAOrBy+A2Mr++2otWg+LDeudXeF7qHLwa/PoaG60+zjkb
ng+3t9S1qurCvXxov7Suq/tu/Dyvnt2iZ0usMoHnAfgeawfPqnvWar7r3Olx
/0M2FV8jQfTdMJw/o+/+1/foMrng82PvbGCXT2XvrbKq2/DdZ+O2bH+O1p6q
SznqflbXOesZKa4Tu045dh9RjR3yPPhe3DrH6xm1HFVHcb+366i1PhxaX12m
6rVP9e3WMvj1LtO431J5reup1rqeDUJ59PM06jtUKob8uzV2tu6jdLmsdyap
+2Wr/3AMqixQ/WaqT7V1r85rmYfKX/1xVc7wsnjfqs/id9cN6h6FancZ6j9+
vb5zf5OXvffZ86MygKFzrHrx3bJz9WIoezq8x2Do3rrHotZ/ld29LnwPr5ex
Jyd6fMxK+wmG4Pvoql/e8+ljwOdZj/uusQ71rDdQ5VX58d3OtNL48blEscV1
ntA5aN6OSrdnl9F+GX+OzyPKS89mqbZ2uxLwOFqvE6/j2s5+b/W5Aj3b+4r0
FOlzdRwM6XmKzVZ6dS3unWXt9VL779jYld6eWvfz1rIKbruu7aW5aaU4H5V5
NfT6k79XSvNanZtWspP24P3B91v5XiSfA12O8HWtN4d6Hxsqf43R9u+B5hql
VfcZCa5H+28+n/ue6gr3B3Ov56meYeZjv9r3qgwWfTcM589l13c1z3i8MVjL
3pkguKRQ5TT6az0/OgiCIAiC9QWt7/hdlhHRd8P1xGXXd3kvnMfo6Zwpyg4U
nxOG86Cg95zwXkDg+wzDMAzDMFxfBOzL0ru2lg3Rd8P1xGXXd/GX8Z50/m7a
tKn9Ze65whWu0P4nfjQM50X1yatd7WrT/7fYYovJlltumf4ZhmEYhuuUrOH4
XBLPHIbz57Lru2DonTi+9zEM50Hvk/UsHj+bOwzDMAzD9cNlR/TdcD1xI+i7
QRAEQRAEQRD8/yD6brieGH03CIIgCIIgCIKxiL4bridG3w2CIAiCIAiCYCyi
74bridF3gyAIgiAIgiAYi+i74Xpi9N0gCIIgCIIgCMYi+m64nhh9NwiCIAiC
IAiCsYi+G64nRt8NgiAIgiAIgmAsou+G64nRd4MgCIIgCIIgGIvou+F6YvTd
IAiCIAiCIAjGIvpuuJ4YfTcIgiAIgiAIgrGIvhuuJ0bfDYIgCIIgCIJgLKLv
huuJ0XeDIAiCIAiCIBiL6LvheiJ99eyzz578+9//nvfQCYIgCIIgCIJggfGf
//xnsnnz5ui74bohffW8886b/OMf/5j38AmCIAiCIAiCYIGBznDuuedG3w3X
Df/2t79NLrzwwhaXEJ03CIIgCIIgCIIK/Lr//Oc/W1wougM6xLz1mDAcS+wz
9Fv8vOi9YRiGYRiGYRiGIjHM55xzzuSCCy5oesNFF100dx0mDMeS/orOe/75
5zedlxiFMAzDMAzDMAxDiI6ArhBdN1zPJC4BvTcMwzAMwzAMw9CJrhBdNwzD
MAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzD
MAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzD
MAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzD
MAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzD
MAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzD
MAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzD
MAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzD
MAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzD
MAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzD
MAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzD
MAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzD
MAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzD
MAxX5/8BLHF2DQ==
    "], {{0, 477}, {956, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{956, 477},
  PlotRange->{{0, 956}, {0, 477}}]], "TemplateEditableContent",
 CellFrameLabels->{{
    Cell["Image: ", "TemplateLabel"], None}, {None, None}},
 CellFrameLabelMargins->{{20, 0}, {0, 0}},
 CellChangeTimes->{
  3.7367046498340807`*^9, {3.736882273548814*^9, 3.736882273937325*^9}, {
   3.736882678983438*^9, 3.736882681164237*^9}, {3.7402312051713924`*^9, 
   3.740231209171055*^9}},ExpressionUUID->"32f16ef4-646e-45ed-a15a-\
a912cfc9ecd6"],

Cell["\<\
Identify the set of guidelines.
Match between submission and required guidelines.
Immediate warnings for author upload.\
\>", "TemplateEditableContent",
 CellFrameLabels->{{
    Cell["Summary \nof Results: ", "TemplateLabel"], None}, {None, None}},
 CellFrameLabelMargins->{{5, 0}, {0, 0}},
 CellChangeTimes->{3.7368810316239147`*^9, 
  3.740231231908703*^9},ExpressionUUID->"ba2205bf-d701-4ef5-aa12-\
c7a7f1002441"],

Cell["\<\
Implement future specifications required by author\[CloseCurlyQuote]s \
guidelines.
Automatic check of references, es http://www.ithenticate.com/ .
Automatic check of data repository, es. \
https://datarepository.wolframcloud.com/
Automatic check of software repository, es. GitHub.
Integration of keywords and reviewers database.\
\>", "TemplateEditableContent",
 CellFrameLabels->{{
    Cell["Future \nwork: ", "TemplateLabel"], None}, {None, None}},
 CellFrameLabelMargins->{{20, 0}, {0, 0}},
 CellChangeTimes->{
  3.736536768881929*^9, {3.7367072121682987`*^9, 3.736707214173369*^9}, 
   3.7402312424417486`*^9},ExpressionUUID->"e44105f6-e95a-4d28-9e4d-\
8a40b3d4e596"],

Cell[BoxData[""], "Input",
 CellOpen->False,ExpressionUUID->"4a721f19-623c-47ad-bb58-c6de867557f0"],

Cell[TextData[{
 StyleBox["Note",
  FontWeight->"Bold"],
 ": Everything above this bar is your poster.Make sure it fits on a single \
page. ",
 Cell[BoxData[
  ButtonBox["\<\"Preview Poster\"\>",
   Appearance->Automatic,
   ButtonFunction:>With[{$CellContext`authorInfo = NotebookImport[
        EvaluationNotebook[], "TemplateAuthorInfo"], $CellContext`content = 
      NotebookImport[
        EvaluationNotebook[], "TemplateEditableContent"]}, 
     CreateDocument[
      Notebook[{
        Cell[
         Part[$CellContext`content, 1], "Title", FontColor -> 
         RGBColor[
          0.25098039215686274`, 0.25098039215686274`, 0.25098039215686274`], 
         TextAlignment -> Center], 
        Cell[
         TextData[{
           Part[$CellContext`authorInfo, 1], " (", 
           StyleBox["Mentor", Bold], ": ", 
           Part[$CellContext`authorInfo, 2], ")"}], "Text", TextAlignment -> 
         Center], 
        Cell[
         Part[$CellContext`authorInfo, 3], "Text", TextAlignment -> Center], 
        Cell[
         Part[$CellContext`content, 3], TextAlignment -> Center], 
        Cell[
         TextData[
          StyleBox["Goal", FontWeight -> Bold]], "Text"], 
        Cell[
         Part[$CellContext`content, 2], "Text"], 
        Cell[
         TextData[
          StyleBox["Summary of Results", FontWeight -> Bold]], "Text"], 
        Cell[
         Part[$CellContext`content, 4], "Text"], 
        Cell[
         TextData[
          StyleBox["Future Work", FontWeight -> Bold]], "Text"], 
        Cell[
         Part[$CellContext`content, 5], "Text"]}, WindowSize -> {550, 650}, 
       ScreenStyleEnvironment -> "Printout", ShowPageBreaks -> True, 
       PrintingOptions -> {"PaperOrientation" -> "Portrait"}, 
       WindowFrameElements -> {"CloseBox"}]]],
   Evaluator->Automatic,
   Method->"Queued"]],ExpressionUUID->"2f09c4c1-886c-4a07-bdd0-f7e9c2bd843a"]
}], "TemplateDivider",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{
  3.7401549957986803`*^9},ExpressionUUID->"3dd6c29c-0c7c-4de9-8e57-\
c12593f67d71"]
}, Open  ]],

Cell[CellGroupData[{

Cell["End of School Presentation Content", "TemplateSectionHeaders",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{3.736188003855814*^9},
 CellTags->
  "PresentationContent",ExpressionUUID->"8e028c0c-7cb5-4cea-9aaf-\
57044e03e425"],

Cell[TextData[{
 Cell["\<\
In addition to the poster content, include other content to present at the 2 \
minute presentation for end of school. Use the buttons below to add more \
sections.\
\>", "Text",ExpressionUUID->"36bb9e60-8d73-47a8-8a18-581b097aa5c4"],
 Cell[BoxData[
  TemplateBox[{ButtonBox["\"Add Header\"", ButtonFunction :> NotebookWrite[
       InputNotebook[], 
       Cell["Section Header", "TemplateEditableHeader"]], Appearance -> 
     Automatic, Evaluator -> Automatic, Method -> "Preemptive"],ButtonBox[
    "\"Add Text\"", ButtonFunction :> NotebookWrite[
       InputNotebook[], {
        Cell[
        "Type text here", "TemplateEditableContent", 
         CellMargins -> {{65, 20}, {10, 10}}, ShowCellBracket -> True]}], 
     Appearance -> Automatic, Evaluator -> Automatic, Method -> "Preemptive"],
    ButtonBox["\"Add Code or Image\"", ButtonFunction :> NotebookWrite[
       InputNotebook[], 
       Cell[
        ExpressionCell[123], "TemplateEditableInput", 
        CellMargins -> {{65, 20}, {10, 10}}, ShowCellBracket -> True]], 
     Appearance -> Automatic, Evaluator -> Automatic, Method -> "Preemptive"]},
   "RowDefault"]],ExpressionUUID->"6fd17dbc-b056-4736-99ad-b691cb8932d7"]
}], "TemplateInstructions",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{
  3.738720159560079*^9},ExpressionUUID->"a415c0fc-f692-474a-a3a1-\
95fb4df9ef20"],

Cell[CellGroupData[{

Cell["Identify test functions", "TemplateEditableHeader",
 CellChangeTimes->{{3.7402519092477584`*^9, 
  3.740251918886642*^9}},ExpressionUUID->"11276918-0fe9-4de3-be36-\
04823542a16a"],

Cell["\<\
Three check are implemented: has author contact information, the length of \
code cells and text before code cells. \
\>", "TemplateEditableContent",
 ShowCellBracket->True,
 CellMargins->{{65, 20}, {10, 10}},
 CellChangeTimes->{{3.7402519246874075`*^9, 
  3.740251983419037*^9}},ExpressionUUID->"c214ec6c-0755-4b86-b2f8-\
5cbb795b706e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"AllTests", " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<Test\>\"", " ", "\[Rule]", " ", "testHasAuthor"}], ",", 
       " ", 
       RowBox[{
       "\"\<Title\>\"", " ", "\[Rule]", " ", "\"\<Author check\>\""}]}], 
      "|>"}], ",", "\[IndentingNewLine]", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<Test\>\"", " ", "\[Rule]", "  ", "codeCellTooBig"}], ",", 
       " ", 
       RowBox[{
       "\"\<Title\>\"", " ", "\[Rule]", " ", "\"\<Code cell check\>\""}]}], 
      "|>"}], ",", "\[IndentingNewLine]", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<Test\>\"", " ", "\[Rule]", "  ", "TextCodeNotFound"}], 
       ",", " ", 
       RowBox[{
       "\"\<Title\>\"", " ", "\[Rule]", " ", 
        "\"\<TextCode cell check\>\""}]}], "|>"}]}], "\[IndentingNewLine]", 
    "}"}]}], ";"}]], "TemplateEditableInput",
 ShowCellBracket->True,
 CellMargins->{{65, 20}, {10, 10}},
 CellChangeTimes->{{3.740253853854878*^9, 
  3.740253855102211*^9}},ExpressionUUID->"56794e5d-d3fc-4f7f-a7ed-\
b0cd7c23ea5e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Notebook Report Deploy to the web", "TemplateEditableHeader",
 CellChangeTimes->{{3.740252278197625*^9, 3.740252282835932*^9}, {
  3.7402537727391214`*^9, 
  3.740253777449708*^9}},ExpressionUUID->"9f8891b5-9644-48d1-a1f9-\
42abe738fa0d"],

Cell["The test report is showed after the notebook submission.", \
"TemplateEditableContent",
 ShowCellBracket->True,
 CellMargins->{{65, 20}, {10, 10}},
 CellChangeTimes->{
  3.7402538357585535`*^9},ExpressionUUID->"b8fc5df6-643a-424e-a5b5-\
22c8a40b1489"],

Cell[BoxData[
 RowBox[{"CloudDeploy", "[", 
  RowBox[{
   RowBox[{"FormPage", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<submission\>\"", "\[Rule]", 
       RowBox[{"Restricted", "[", 
        RowBox[{"\"\<CachedFile\>\"", ",", "\"\<NB\>\""}], "]"}]}], "}"}], 
     ",", 
     RowBox[{
      RowBox[{"Rasterize", "@", 
       RowBox[{"notebookReport", "@", "#submission"}]}], "&"}]}], "]"}], ",", 
   "\"\</publish\>\"", ",", 
   RowBox[{"Permissions", "\[Rule]", "\"\<Public\>\""}]}], 
  "]"}]], "TemplateEditableInput",
 ShowCellBracket->True,
 CellMargins->{{65, 20}, {10, 10}},
 CellChangeTimes->{{3.740253818841315*^9, 
  3.7402538202621117`*^9}},ExpressionUUID->"c9d95932-be13-422e-a455-\
8036921e884f"],

Cell[TextData[{
 StyleBox["Note",
  FontWeight->"Bold"],
 ": Everything above this bar is in your 2 minute presentation. Make sure it \
fits on 2 slides. ",
 Cell[BoxData[
  ButtonBox["\<\"Preview Presentation\"\>",
   Appearance->Automatic,
   ButtonFunction:>With[{$CellContext`authorInfo = NotebookImport[
        EvaluationNotebook[], "TemplateAuthorInfo"], $CellContext`content = 
      NotebookImport[
        EvaluationNotebook[], 
        Alternatives[
        "TemplateEditableHeader", "TemplateEditableInput", 
         "TemplateEditableContent"]]}, 
     CreateDocument[
      Notebook[{
        Cell[
        "Wolfram Summer School 2018", FontFamily -> "Source Sans Pro", 
         FontSize -> 42, FontVariations -> {"CapsType" -> "AllCaps"}, 
         RGBColor[
         0.25098039215686274`, 0.25098039215686274`, 0.25098039215686274`], 
         Background -> RGBColor[1., 0.807843137254902, 0.2549019607843137], 
         PageWidth -> WindowWidth, ShowCellBracket -> False, 
         CellMargins -> {{0, 0}, {0, 0}}, 
         CellBracketOptions -> {"OverlapContent" -> True}], 
        Cell[
        "Title", "Title", FontColor -> 
         RGBColor[
          0.25098039215686274`, 0.25098039215686274`, 0.25098039215686274`], 
         CellMargins -> {{Inherited, 10}, {10, 10}}], 
        Cell[
         TextData[{
           StyleBox["AUTHOR: ", "Bold", 
            RGBColor[1., 0.5058823529411764, 0.]], 
           Part[$CellContext`authorInfo, 1], " (Mentor: ", 
           Part[$CellContext`authorInfo, 2], ")"}], "Text"], 
        Cell[
         TextData[{
           StyleBox["AFFILIATION: ", "Bold", 
            RGBColor[1., 0.5058823529411764, 0.]], 
           Part[$CellContext`authorInfo, 3]}], "Text"], 
        Cell[
         Part[$CellContext`content, 3], TextAlignment -> Center], 
        Cell[
         TextData[{
           StyleBox["GOAL OF THE PROJECT: ", "Bold", 
            RGBColor[1., 0.5058823529411764, 0.]], 
           Part[$CellContext`content, 2]}], "Text"], 
        Cell["", "SlideShowNavigationBar", CellTags -> "SlideShowHeader"], 
        Cell[
         TextData[{
           StyleBox["SUMMARY OF RESULTS: ", "Bold", 
            RGBColor[1., 0.5058823529411764, 0.]], 
           Part[$CellContext`content, 4]}], "Text"], 
        Cell[
         TextData[{
           StyleBox["ADDITIONAL CONTENT: ", "Bold", 
            RGBColor[1., 0.5058823529411764, 0.]]}], "Text"], 
        Apply[Sequence, 
         Map[Cell[#, "Text"]& , 
          Part[$CellContext`content, 
           Span[6, All]]]], 
        Cell[
         TextData[{
           StyleBox["FUTURE WORK: ", "Bold", 
            RGBColor[1., 0.5058823529411764, 0.]], 
           Part[$CellContext`content, 5]}], "Text"]}, ScreenStyleEnvironment -> 
       "SlideShow", WindowSize -> {1024, 740}]]],
   Evaluator->Automatic,
   Method->"Queued"]],ExpressionUUID->"c20b8022-a781-4e4e-a5c0-6a405440c0ea"]
}], "TemplateDivider",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{
  3.7387185737842693`*^9},ExpressionUUID->"076ddf5c-307b-4320-9bc6-\
9a3254f2388c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Detailed Project Notes", "TemplateSectionHeaders",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{3.736188072178087*^9},
 CellTags->
  "ProjectNotes",ExpressionUUID->"d0702cda-4649-4987-a5e2-607be4aa4f6e"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Read in Notebook Template and Generate Feedback \
Report", "Section"]], "Subsubsection",
 CellChangeTimes->{
  3.7361820729365396`*^9, {3.7402328326132*^9, 3.740232848894502*^9}, 
   3.7402333132757235`*^9, {3.74023668152175*^9, 
   3.7402366837235637`*^9}},ExpressionUUID->"c1b785be-a60a-40fe-b1f1-\
2d83590b38cd"],

Cell["\<\
The screening of article is the first check in the editorial process. \
Typically this control verifies that all elements of the submission are well \
presented: author information, code length, sections composed of text,code \
text and code, references.  \
\>", "Text",
 CellChangeTimes->{{3.740238515440135*^9, 
  3.7402385428826003`*^9}},ExpressionUUID->"7ec29ad3-4bb6-4f4d-8fc5-\
9b651bff275f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Get file and divide by cells", "Subsubsection",
 CellChangeTimes->{
  3.736182092776252*^9, {3.740235413984852*^9, 
   3.740235444370085*^9}},ExpressionUUID->"6ebeefbd-4857-42fb-a308-\
27aaa279c47f"],

Cell["\<\
We want to implement a feedback report as the author upload the submission \
and a report for the editor on a set of notebooks.\
\>", "Text",
 CellChangeTimes->{{3.74023779884905*^9, 3.740237817722281*^9}, {
  3.7402379006848707`*^9, 3.7402379386077547`*^9}, {3.7402381932244015`*^9, 
  3.740238198603675*^9}},ExpressionUUID->"3a63da76-4fc5-4fde-bd88-\
b07bc80bc320"],

Cell["\<\
A preliminary test is made on a randomly selected notebook from a directory.\
\>", "CodeText",
 CellChangeTimes->{{3.7402354593516417`*^9, 3.7402355043126163`*^9}, {
  3.7402382077070074`*^9, 
  3.7402382115660677`*^9}},ExpressionUUID->"8899e6b6-fe79-4ad1-9aec-\
a4e8e13f2197"],

Cell[BoxData[
 RowBox[{"testFile", "=", 
  RowBox[{"RandomChoice", "@", 
   RowBox[{"FileNames", "[", 
    RowBox[{"___", ",", 
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", 
        "\"\<essay-submissions\>\"", ",", "\"\<ComputationalEssays\>\"", ",", 
        "\"\<ComputationalEssays\>\""}], "}"}], "]"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7402355054386272`*^9, 
  3.7402355213336706`*^9}},ExpressionUUID->"df573e23-9b69-4fc4-9511-\
4a0fbbcd1034"],

Cell["\<\
A second test is made on all the files of the directory, useful for the \
editor who has to check a list of notebook multiple submissions and generate \
a status report.\
\>", "CodeText",
 CellChangeTimes->{{3.7402355351201615`*^9, 3.7402355646944447`*^9}, {
  3.7402362039866266`*^9, 3.7402362384251413`*^9}, {3.7402377569004908`*^9, 
  3.740237772081914*^9}},ExpressionUUID->"981b107d-e086-4a1a-8fa5-\
7dec1c5ac48c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"allFiles", "=", 
   RowBox[{"FileNames", "[", 
    RowBox[{"___", ",", 
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", 
        "\"\<essay-submissions\>\"", ",", "\"\<ComputationalEssays\>\"", ",", 
        "\"\<ComputationalEssays\>\""}], "}"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cells", "=", 
   RowBox[{"NotebookImport", "[", 
    RowBox[{"testFile", ",", 
     RowBox[{"_", "\[Rule]", "\"\<Cell\>\""}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7402362402038145`*^9, 
  3.740236265009039*^9}},ExpressionUUID->"b10cde1d-188b-4430-9f64-\
8568501addd4"],

Cell["The notebook template has identifying cells, listed below:  ", \
"CodeText",
 CellChangeTimes->{
  3.740236252069023*^9, {3.7402362849083214`*^9, 3.7402362976447573`*^9}, {
   3.740238224149417*^9, 
   3.740238258339966*^9}},ExpressionUUID->"c1788770-8101-4f2d-a4c9-\
ed352de32ecb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cells", "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "2"}], "]"}], "]"}], "\[IndentingNewLine]"}]], "Input",\

 CellChangeTimes->{{3.740238259617338*^9, 
  3.74023826851383*^9}},ExpressionUUID->"f02a91bd-ca5a-4433-80ee-\
d496166be2d4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Test for Check Functions", "Subsection",
 CellChangeTimes->{{3.7400698536876*^9, 3.7400698655319223`*^9}, {
  3.740242452318903*^9, 
  3.740242459642192*^9}},ExpressionUUID->"2dbfbf1a-2945-4bdb-9fae-\
3b02771ac17a"],

Cell["\<\

We implement three functions corresponding to the tests: \
\>", "Text",
 CellChangeTimes->{{3.7402431022021723`*^9, 
  3.740243130958657*^9}},ExpressionUUID->"49b24db9-0c4e-4e16-b1d1-\
95c531720d08"],

Cell[CellGroupData[{

Cell["\<\
The author contact information, the corresponding author, is present at the \
bottom of the notebook submission. \
\>", "Item",
 CellChangeTimes->{{3.7402424344704323`*^9, 3.7402426220611486`*^9}, {
  3.7402430477586775`*^9, 3.740243097793437*^9}, {3.7402431330419655`*^9, 
  3.7402431464054527`*^9}},ExpressionUUID->"c92b713e-2cef-4b72-b531-\
0c0fd6728f74"],

Cell["\<\
The code cells shouldn't be too big and they should be divided in multiple \
code cells. \
\>", "Item",
 CellChangeTimes->{{3.7402424344704323`*^9, 3.7402426220611486`*^9}, {
  3.7402430477586775`*^9, 3.740243097793437*^9}, {3.7402431330419655`*^9, 
  3.7402431496259766`*^9}},ExpressionUUID->"da627b75-5e96-40e9-b2ce-\
43f073b02495"],

Cell["\<\
Each code cell should be  presenter with a single grey line of TextCode.
\
\>", "Item",
 CellChangeTimes->{{3.7402424344704323`*^9, 3.7402426220611486`*^9}, {
  3.7402430477586775`*^9, 3.740243097793437*^9}, {3.7402431330419655`*^9, 
  3.7402431492509737`*^9}, {3.740243434949833*^9, 
  3.7402434570058966`*^9}},ExpressionUUID->"db25ae6f-cf9f-4ffa-a9ee-\
00f5b65842ce"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Author Information", "Subsubsection"]], "Subsection",
 CellChangeTimes->{{3.739813089012456*^9, 3.7398130939837914`*^9}, {
  3.739913883277873*^9, 3.7399138899135504`*^9}, {3.7402402289443684`*^9, 
  3.7402402334322743`*^9}},ExpressionUUID->"2f432cc1-38d6-41ee-aa40-\
82e753543cf3"],

Cell["\<\
The first check of the report is about the Author Section. If the author \
doesn\[CloseCurlyQuote]t add his contact email or change the author contact \
information this will be reported as an error.\
\>", "Text",
 CellChangeTimes->{{3.740240312936452*^9, 3.7402403186637545`*^9}, 
   3.7402403751988273`*^9, {3.740240464368107*^9, 3.740240477079073*^9}, {
   3.7402405420457077`*^9, 
   3.7402405625885735`*^9}},ExpressionUUID->"a751770f-3b0d-4cf8-bb36-\
99f09ba117f2"],

Cell["\<\
The first check is if the cell of author contact information has been \
modified.\
\>", "CodeText",
 CellChangeTimes->{
  3.7399145840861096`*^9, {3.739915033012977*^9, 3.739915069675475*^9}, 
   3.7402405400703955`*^9, {3.7402406971920247`*^9, 3.7402407233867235`*^9}, {
   3.7402537148724923`*^9, 
   3.740253719022582*^9}},ExpressionUUID->"72fa3322-2723-4e21-9018-\
5ba4eea6d6f7"],

Cell[BoxData[
 RowBox[{"authorSection", "=", 
  RowBox[{"Position", "[", 
   RowBox[{"cells", ",", 
    RowBox[{"Cell", "[", 
     RowBox[{
     "\"\<Author contact information\>\"", ",", "\"\<Section\>\"", ",", 
      "___"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7398134402242384`*^9, 3.739813459146858*^9}, 
   3.7398137551353903`*^9, 3.7398137920268373`*^9},
 CellLabel->
  "In[112]:=",ExpressionUUID->"59307781-6e94-40f9-b9eb-06a39c0da99b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"hasOnlyOneAuthorSectionQ", "[", "authorSection_", "]"}], ":=", 
  RowBox[{
   RowBox[{"Length", "@", "authorSection"}], "===", "1"}]}]], "Input",
 CellChangeTimes->{{3.7398147127992935`*^9, 3.7398147428616*^9}},
 CellLabel->
  "In[113]:=",ExpressionUUID->"d19e9c04-a388-4bf5-8058-b3ef79f641e6"],

Cell[BoxData[
 RowBox[{"If", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"hasOnlyOneAuthorSectionQ", "[", "authorSection", "]"}], ",", 
   "\[IndentingNewLine]", "1", ",", "\[IndentingNewLine]", 
   RowBox[{
   "issueError", "[", "\"\<Cannot find just one AuthorInfo cell\>\"", "]"}]}],
   "\[IndentingNewLine]", "]"}]], "Input",
 CellLabel->
  "In[114]:=",ExpressionUUID->"92884c6f-e84f-49cc-81f9-50af6b2d25b4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Cases", "[", 
   RowBox[{
    RowBox[{"cells", "[", 
     RowBox[{"[", 
      RowBox[{"1", ";;", "4"}], "]"}], "]"}], ",", "_String", ",", 
    "Infinity"}], "]"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.74024066991047*^9, 
  3.7402406746831627`*^9}},ExpressionUUID->"a92414ca-de9c-4e5e-bbd1-\
f962d3e7a3ab"],

Cell[CellGroupData[{

Cell["Metric on Line Code", "Subsubsection",
 CellChangeTimes->{{3.7402436441388307`*^9, 
  3.740243654477072*^9}},ExpressionUUID->"5425b4f6-48f7-486a-bec5-\
d38eae4b8fcf"],

Cell["\<\
The second check is evaluating the length of the Code cells. Each code cell \
is of Input/Output type, once they are identified, they are converted as \
images. For each image of code it has been considered only the height and it \
has been compared to a reference height of 75 pixels. An error is given for \
each image of code cell has his size greater than the reference measure.\
\>", "Text",
 CellChangeTimes->{{3.740243658462592*^9, 3.740243835318431*^9}, {
  3.740243990715789*^9, 3.7402440443523026`*^9}, {3.7402441289186068`*^9, 
  3.7402441454412365`*^9}},ExpressionUUID->"ddbfbbbf-fc51-40d2-b25d-\
331dafe0e45e"],

Cell["Select the cell with the code: input/output type.", "CodeText",
 CellChangeTimes->{{3.740244363383751*^9, 
  3.740244384413282*^9}},ExpressionUUID->"189670a1-e5c2-4828-8a36-\
bd0a1bdd196b"],

Cell[BoxData[
 RowBox[{"NotebookImport", "[", 
  RowBox[{"testFile", ",", " ", 
   RowBox[{"\"\<Input\>\"", " ", "|", " ", "\"\<Output\>\""}], ",", 
   RowBox[{"\"\<FlattenCellGroups\>\"", " ", "\[Rule]", " ", "False"}]}], 
  "]"}]], "Input",ExpressionUUID->"07effa3d-f693-4598-a863-16d31741ae6c"],

Cell["Take all code cells and transform them as images.", "CodeText",
 CellChangeTimes->{{3.7402444005087757`*^9, 3.740244434687008*^9}, {
  3.7402447125547667`*^9, 
  3.740244713581441*^9}},ExpressionUUID->"ecb84b96-6317-4572-96e1-\
1eabf1ed7d56"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"cellObj", "=", 
   RowBox[{"SelectionMove", "[", 
    RowBox[{
     RowBox[{"EvaluationCell", "[", "]"}], ",", "Previous", ",", "Cell"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cellExpr", "=", 
   RowBox[{"NotebookRead", "@", 
    RowBox[{"EvaluationNotebook", "[", "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Rasterize", "@", "cellExpr"}], "\[IndentingNewLine]", 
 RowBox[{"ImageDimensions", "@", 
  RowBox[{"Rasterize", "@", "cellExpr"}]}]}], "Input",
 CellChangeTimes->{{3.740244436424591*^9, 3.740244447277249*^9}, 
   3.740244514125766*^9},ExpressionUUID->"0eb79990-56ef-4a97-9d76-\
45f9fae93f87"],

Cell["Then take their dimensions.", "CodeText",
 CellChangeTimes->{{3.740244468817126*^9, 3.7402444841125565`*^9}, 
   3.740244572760596*^9, {3.7402447159667807`*^9, 
   3.740244721662781*^9}},ExpressionUUID->"fa14d85e-b9c3-49c5-9766-\
275e18625cb1"],

Cell[BoxData[
 RowBox[{"cellHeights", "=", 
  RowBox[{
   RowBox[{"Last", "@*", "ImageDimensions", "@*", "Rasterize"}], "/@", 
   RowBox[{"Cases", "[", 
    RowBox[{"cells", ",", 
     RowBox[{"Cell", "[", 
      RowBox[{"___", ",", "\"\<Input\>\"", ",", "___"}], "]"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.740244485500179*^9, 3.740244494304429*^9}, 
   3.7402447291495495`*^9},ExpressionUUID->"04062dfb-5c74-4ba6-9c3c-\
fd8166dcc395"],

Cell["\<\
Count the number of cells of code for which the height of the image is bigger \
than 75.\
\>", "CodeText",
 CellChangeTimes->{{3.7402445574621987`*^9, 3.740244581028427*^9}, {
  3.7402447420165243`*^9, 
  3.7402448049266453`*^9}},ExpressionUUID->"924ea3d4-466d-4162-b436-\
767c197e82e8"],

Cell[BoxData[
 RowBox[{"numberOfBigPictures", "=", 
  RowBox[{"Count", "[", 
   RowBox[{
    RowBox[{"cellHeights", "/", "75."}], ",", " ", 
    RowBox[{"_", "?", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"#", " ", ">=", " ", "1"}], " ", "&"}], ")"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7402445264302845`*^9, 3.740244527666521*^9}, {
  3.740244887318203*^9, 
  3.740244896855386*^9}},ExpressionUUID->"a748b61d-b949-43b4-a7e2-\
cfc24de3d95a"],

Cell["\<\
Give a warning with the number of code cells exceeding the reference height. \
\
\>", "CodeText",
 CellChangeTimes->{{3.740244814406712*^9, 
  3.7402448835352163`*^9}},ExpressionUUID->"601f41f1-3177-4922-84bf-\
068787a1c6bb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"numberOfBigPictures", " ", ">=", "1"}], ",", 
    RowBox[{"issueError", "[", 
     RowBox[{
     "numberOfBigPictures", 
      "\"\< code cells are exceeding the suggested size\>\""}], "]"}]}], 
   "]"}], "\[IndentingNewLine]"}]], "Input",ExpressionUUID->"2d95a84e-5444-\
46c8-a225-5d777c9fe84f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Warning on Text Before Each Line of Code", "Subsubsection",
 CellChangeTimes->{{3.7402450647617793`*^9, 
  3.740245078281454*^9}},ExpressionUUID->"dca2f52a-9d91-4585-bc2f-\
b41c6130a227"],

Cell["\<\
Each code cell should be introduced with a single line of text code \
explaining each segment.\
\>", "Text",
 CellChangeTimes->{{3.740251813889037*^9, 3.7402518187228312`*^9}, {
  3.7402523260626583`*^9, 3.7402523564001594`*^9}, {3.740252854197508*^9, 
  3.740252858395131*^9}},ExpressionUUID->"a5937307-abb1-4d52-8166-\
5eb6dd19fa0d"],

Cell["\<\
Cell codes are identifies as triplets code text input and output.\
\>", "CodeText",
 CellChangeTimes->{{3.7402517946128883`*^9, 3.740251808218991*^9}, {
  3.740252861614027*^9, 
  3.740252912347574*^9}},ExpressionUUID->"842f632c-82ba-40bc-8806-\
aaad614f837b"],

Cell[BoxData[
 RowBox[{"n", "=", 
  RowBox[{"Length", "[", 
   RowBox[{"SequenceCases", "[", 
    RowBox[{
     RowBox[{"cells", "\[LeftDoubleBracket]", 
      RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Except", "[", 
        RowBox[{
        "\"\<CodeText\>\"", "|", "\"\<Input\>\"", "|", "\"\<Output\>\""}], 
        "]"}], ",", "\"\<Input\>\""}], "}"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.739991733913347*^9, 3.7399917790070972`*^9}, {
  3.7399918446175604`*^9, 3.7399918452740564`*^9}, {3.739991998173814*^9, 
  3.739992000318654*^9}, {3.7399920722423105`*^9, 3.7399921227482357`*^9}, {
  3.73999216449697*^9, 3.739992178567421*^9}, {3.7399922154300194`*^9, 
  3.739992225715559*^9}, {3.7402530319025383`*^9, 
  3.7402530348182554`*^9}},ExpressionUUID->"1ec994a2-dcbd-41dd-82e0-\
ccc609dfa1b3"],

Cell["\<\
Every time there is no code text before input a warning is given.\
\>", "CodeText",
 CellChangeTimes->{{3.740252915795991*^9, 3.740252959636577*^9}, 
   3.7402530405760455`*^9},ExpressionUUID->"b3a6252c-4a77-4cc7-9a11-\
66845c56212f"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"n", ">", "0"}], ",", 
     RowBox[{"ReportPrint", "[", 
      RowBox[{
       RowBox[{"\"\<You have \>\"", "<>", 
        RowBox[{"ToString", "[", "n", "]"}], "<>", 
        "\"\< cases of Input cell (your code) without descriptive grey \
text.\>\""}], ",", "\"\<WARNING\>\""}], "]"}]}], "]"}], ";"}]}]], "Input",
 CellChangeTimes->{{3.7399921860898376`*^9, 3.7399921871251345`*^9}, {
   3.7399922277992077`*^9, 3.739992228206465*^9}, 3.739992261405281*^9, {
   3.7402530460884314`*^9, 
   3.7402530474647284`*^9}},ExpressionUUID->"535a0982-49bd-446d-9568-\
09c0fa0d0eba"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Notebook Report ", "Subsubsection"]], "Subsubsection",
 CellChangeTimes->{{3.740244939700535*^9, 3.740244949296897*^9}, 
   3.740245013280815*^9, {3.740253674266985*^9, 
   3.740253677523686*^9}},ExpressionUUID->"f1bf30d5-e979-46ba-acc8-\
b47251ef2a53"],

Cell["\<\
A notebook is analysed and the checks are implemented, the resulting report \
is shown as a grid on the web submission page.\
\>", "Text",
 CellChangeTimes->{{3.740252963640257*^9, 3.7402529677516127`*^9}, {
  3.7402530692288923`*^9, 
  3.7402531584716916`*^9}},ExpressionUUID->"b52bc5af-0613-4fb1-ba08-\
dcb7ba8e6127"],

Cell["quickParse is the notebook reader .", "CodeText",
 CellChangeTimes->{{3.740253202334612*^9, 3.7402532353058853`*^9}, 
   3.7402532811241627`*^9},ExpressionUUID->"58538b1c-3496-4ccd-bb6f-\
d06748134a3b"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"quickParse", "[", "notebook_", "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "cells", ",", "testHasAuthor", ",", "codeCellTooBig", ",", " ", 
        "TextCodeNotFound"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"cells", " ", "=", " ", 
       RowBox[{"NotebookImport", "[", 
        RowBox[{"notebook", ",", 
         RowBox[{"_", "\[Rule]", "\"\<Cell\>\""}]}], "]"}]}]}], "]"}]}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.7402434809309464`*^9, 
  3.7402434831818476`*^9}},ExpressionUUID->"74ac967b-0e60-4178-a417-\
5ba306d4ab2c"],

Cell["\<\
testHasAuthor checks if the author contact information has been modified.\
\>", "CodeText",
 CellChangeTimes->{
  3.7402531720164557`*^9, {3.740253243621931*^9, 
   3.740253284667576*^9}},ExpressionUUID->"80652575-829f-43c9-9cfc-\
b317aa64eabe"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"testHasAuthor", "[", "notebook_", "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"cells", ",", " ", "section"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"cells", " ", "=", " ", 
        RowBox[{"NotebookImport", "[", 
         RowBox[{"notebook", ",", 
          RowBox[{"_", "\[Rule]", "\"\<Cell\>\""}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"section", " ", "=", " ", 
        RowBox[{"Position", "[", 
         RowBox[{"cells", ",", 
          RowBox[{"Cell", "[", 
           RowBox[{
           "\"\<Author contact information\>\"", ",", "\"\<Section\>\"", ",", 
            "___"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Which", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", " ", "@", " ", "section"}], "===", "0"}], ",", 
         "\[IndentingNewLine]", "\"\<No author specified\>\"", ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Length", " ", "@", " ", "section"}], ">", "1"}], ",", 
         "\[IndentingNewLine]", "\"\<Multiple authors specifieds\>\"", ",", 
         "\[IndentingNewLine]", "True", ",", "\[IndentingNewLine]", "None"}], 
        "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.740243491739417*^9, 
  3.7402434926056733`*^9}},ExpressionUUID->"d6c9e662-916c-44e2-93fa-\
1f10fa6d60c7"],

Cell["\<\

codeCellTooBig transforms each input cell in an image and it checks wether it \
exceeds a reference height. \
\>", "CodeText",
 CellChangeTimes->{{3.74025328836234*^9, 
  3.740253368935625*^9}},ExpressionUUID->"f1b49779-adac-4a75-b87c-\
9e84ee51ba99"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"codeCellTooBig", "[", "notebook_", "]"}], " ", ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"cells", ",", " ", "selection"}], "}"}], ",", " ", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"cells", " ", "=", " ", 
        RowBox[{"NotebookImport", "[", 
         RowBox[{"notebook", ",", " ", 
          RowBox[{
           RowBox[{"\"\<Code\>\"", "|", "\"\<Input\>\""}], " ", "\[Rule]", 
           " ", "\"\<Cell\>\""}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"selection", " ", "=", " ", 
        RowBox[{"Select", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"ImageDimensions", "@", 
              RowBox[{"Rasterize", "[", "#", "]"}]}], " ", "&"}], ",", " ", 
            "cells"}], "]"}], ",", " ", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"Last", "[", "#", "]"}], " ", ">", " ", "75"}], " ", 
           "&"}]}], "\[IndentingNewLine]", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "selection", "]"}], " ", ">", " ", "0"}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"TemplateApply", "[", 
          RowBox[{"\"\<`` cells are too big\>\"", ",", " ", 
           RowBox[{"Length", "[", "selection", "]"}]}], "]"}], ",", 
         "\[IndentingNewLine]", "None"}], "\[IndentingNewLine]", "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.740243501388805*^9, 
  3.7402435022100134`*^9}},ExpressionUUID->"d8dfad3e-5a40-4cce-852e-\
8454f5638eee"],

Cell["\<\

TextCodeNotFound checks if the text code is present before the input cell.\
\>", "CodeText",
 CellChangeTimes->{{3.740253373334237*^9, 
  3.7402534051434603`*^9}},ExpressionUUID->"d5fbbf99-14b8-4860-98b1-\
64cb71371507"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"TextCodeNotFound", "[", "notebook_", "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"Module", "[", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"n", ",", " ", "cells"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"cells", " ", "=", " ", 
        RowBox[{"NotebookImport", "[", 
         RowBox[{"notebook", ",", 
          RowBox[{"_", "\[Rule]", "\"\<Cell\>\""}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"n", "=", 
        RowBox[{"Length", "[", 
         RowBox[{"SequenceCases", "[", 
          RowBox[{
           RowBox[{"cells", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Except", "[", 
              RowBox[{
              "\"\<CodeText\>\"", "|", "\"\<Input\>\"", "|", 
               "\"\<Output\>\""}], "]"}], ",", "\"\<Input\>\""}], "}"}]}], 
          "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"n", ">", "0"}], ",", "\[IndentingNewLine]", 
         RowBox[{"TemplateApply", "[", 
          RowBox[{"\"\<You have \>\"", "<>", 
           RowBox[{"ToString", "[", "n", "]"}], "<>", 
           "\"\< code cells without the single line of text code.\>\""}], 
          "]"}], ",", "\[IndentingNewLine]", "None"}], "\[IndentingNewLine]", 
        "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.74024350968967*^9, 3.7402435104085646`*^9}, 
   3.740253462184451*^9},ExpressionUUID->"173d6676-905a-4d1c-af8c-\
b6b5c2d65a1a"],

Cell["AllTests implements the checks all together. ", "CodeText",
 CellChangeTimes->{{3.740253412123914*^9, 
  3.7402534678945365`*^9}},ExpressionUUID->"3fbfa40c-9877-487e-8c1b-\
8ca35c002a14"],

Cell[BoxData[
 RowBox[{
  RowBox[{"AllTests", " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<Test\>\"", " ", "\[Rule]", " ", "testHasAuthor"}], ",", 
       " ", 
       RowBox[{
       "\"\<Title\>\"", " ", "\[Rule]", " ", "\"\<Author check\>\""}]}], 
      "|>"}], ",", "\[IndentingNewLine]", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<Test\>\"", " ", "\[Rule]", "  ", "codeCellTooBig"}], ",", 
       " ", 
       RowBox[{
       "\"\<Title\>\"", " ", "\[Rule]", " ", "\"\<Code cell check\>\""}]}], 
      "|>"}], ",", "\[IndentingNewLine]", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<Test\>\"", " ", "\[Rule]", "  ", "TextCodeNotFound"}], 
       ",", " ", 
       RowBox[{
       "\"\<Title\>\"", " ", "\[Rule]", " ", 
        "\"\<TextCode cell check\>\""}]}], "|>"}]}], "\[IndentingNewLine]", 
    "}"}]}], ";"}]], "Input",ExpressionUUID->"d49e286f-fc02-48ce-8a0b-\
290cb535a697"],

Cell["\<\

notebookReport results in a table with the checks answers.\
\>", "CodeText",
 CellChangeTimes->{{3.7402534825804396`*^9, 
  3.7402535447862806`*^9}},ExpressionUUID->"3c7e0c83-bf08-4c0a-8601-\
70249475e0a8"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"notebookReport", "[", "notebook_List", "]"}], " ", ":=", " ", 
    "\[IndentingNewLine]", 
    RowBox[{"Column", "[", 
     RowBox[{"Map", "[", 
      RowBox[{"notebookReport", ",", " ", "notebook"}], "]"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"notebookReport", "[", "notebook_String", "]"}], " ", ":=", " ", 
    "\[IndentingNewLine]", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"tests", ",", "titles", ",", "results"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tests", " ", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"#Test", "[", "notebook", "]"}], " ", "&"}], ",", 
          "AllTests"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"titles", " ", "=", " ", 
        RowBox[{"AllTests", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", " ", "\"\<Title\>\""}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"results", " ", "=", " ", 
        RowBox[{"Join", " ", "@@", 
         RowBox[{"Replace", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{"titles", ",", " ", "tests"}], "}"}], "]"}], ",", " ", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{"title_", ",", " ", "result_String"}], "}"}], " ", 
              "\[RuleDelayed]", " ", 
              RowBox[{"{", 
               RowBox[{"{", 
                RowBox[{"title", ",", " ", "result"}], "}"}], "}"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"title_", ",", " ", 
                RowBox[{"{", "result_String", "}"}]}], "}"}], " ", 
              "\[RuleDelayed]", " ", 
              RowBox[{"{", 
               RowBox[{"{", 
                RowBox[{"title", ",", " ", "result"}], "}"}], "}"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"title_", ",", " ", 
                RowBox[{"{", 
                 RowBox[{"result_String", ",", " ", "results__String"}], 
                 "}"}]}], "}"}], " ", "\[RuleDelayed]", " ", 
              RowBox[{"Join", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"{", 
                  RowBox[{"title", ",", " ", "result"}], "}"}], "}"}], ",", 
                " ", 
                RowBox[{"Map", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"SpanFromAbove", ",", " ", "#"}], "}"}], " ", 
                   "&"}], ",", " ", 
                  RowBox[{"{", "results", "}"}]}], "]"}]}], "]"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"title_", ",", " ", "None"}], "}"}], " ", 
              "\[RuleDelayed]", " ", 
              RowBox[{"{", 
               RowBox[{"{", 
                RowBox[{"title", ",", " ", 
                 RowBox[{"Style", "[", 
                  RowBox[{"\"\<OK\>\"", ",", " ", "Green"}], "]"}]}], "}"}], 
               "}"}]}]}], "\[IndentingNewLine]", "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", "1", "}"}]}], "\[IndentingNewLine]", "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Labeled", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "results", "]"}], " ", ">", " ", "0"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"Grid", "[", 
            RowBox[{"results", ",", "\[IndentingNewLine]", 
             RowBox[{"Alignment", "\[Rule]", " ", "Left"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Frame", " ", "\[Rule]", " ", "All"}]}], 
            "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<No error found :)\>\"", ",", " ", "Blue"}], "]"}]}], 
          "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"FileBaseName", "[", "notebook", "]"}], ",", 
         "\[IndentingNewLine]", "Top"}], "\[IndentingNewLine]", "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.740243527749275*^9, 3.740243528493246*^9}, 
   3.740253473212613*^9},ExpressionUUID->"5ca88211-2bee-4be3-b849-\
a5890e53c507"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Deploy to the web", "Subsection",
 CellChangeTimes->{{3.7398131136729455`*^9, 3.73981311599906*^9}, {
  3.7401650423807125`*^9, 
  3.7401650428110647`*^9}},ExpressionUUID->"5d73dc09-602b-42ff-84c0-\
e463129c1d38"],

Cell["The test report is showed after the notebook submission.", "Text",
 CellChangeTimes->{{3.740241778775093*^9, 3.7402417937397194`*^9}, {
  3.7402535670279703`*^9, 
  3.740253586040265*^9}},ExpressionUUID->"f7622d51-15d4-40c4-a40f-\
00746145aa73"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CloudDeploy", "[", 
  RowBox[{
   RowBox[{"FormPage", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<submission\>\"", "\[Rule]", 
       RowBox[{"Restricted", "[", 
        RowBox[{"\"\<CachedFile\>\"", ",", "\"\<NB\>\""}], "]"}]}], "}"}], 
     ",", 
     RowBox[{
      RowBox[{"Rasterize", "@", 
       RowBox[{"notebookReport", "@", "#submission"}]}], "&"}]}], "]"}], ",", 
   "\"\</publish\>\"", ",", 
   RowBox[{"Permissions", "\[Rule]", "\"\<Public\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.739811947382141*^9, 3.7398119991724463`*^9}, {
   3.7398120810099597`*^9, 3.7398120986510324`*^9}, {3.739812201022867*^9, 
   3.7398122176417837`*^9}, {3.739812318238655*^9, 3.739812324430485*^9}, {
   3.739812395225031*^9, 3.73981239724977*^9}, 3.740164725550022*^9, {
   3.740165063774203*^9, 3.7401650643998947`*^9}},
 CellLabel->
  "In[412]:=",ExpressionUUID->"b98d235c-3123-41c2-81b2-4c11864ed698"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"CloudObject", "[", 
   TemplateBox[{
    "\"https://www.wolframcloud.com/objects/viviana.letizia/publish\"",
     "https://www.wolframcloud.com/objects/viviana.letizia/publish"},
    "HyperlinkURL"], "]"}],
  CloudObject["https://www.wolframcloud.com/objects/viviana.letizia/publish"],
  
  SelectWithContents->True]], "Output",
 CellChangeTimes->{
  3.7398121028542395`*^9, {3.7398122052159348`*^9, 3.7398122316686935`*^9}, 
   3.7398122790035944`*^9, 3.7398123254327326`*^9, {3.7398123736791563`*^9, 
   3.7398124165680447`*^9}, 3.7398124937879744`*^9, 3.7398125989420333`*^9, 
   3.739812671518466*^9, 3.7398127379316874`*^9, 3.7398127987731457`*^9, 
   3.7398128752759743`*^9, 3.7398129701767273`*^9, 3.7398141117828655`*^9, 
   3.739814829495*^9, 3.7398149915447845`*^9, 3.739909901561946*^9, 
   3.7399099333996143`*^9, 3.7399099682262344`*^9, 3.739914689755122*^9, 
   3.7399159549433413`*^9, 3.7399160242006807`*^9, 3.7399844404780207`*^9, 
   3.7399915943524756`*^9, 3.73999168321912*^9, 3.739992366411912*^9, 
   3.739995356748926*^9, 3.739996065094804*^9, 3.7400699786012115`*^9, 
   3.740144669637765*^9, 3.740157098197163*^9, 3.7401574124416113`*^9, 
   3.740157927986899*^9, 3.7401583512182226`*^9, 3.740163030975295*^9, 
   3.740163475912589*^9, 3.740163847445686*^9, 3.740164149496877*^9, 
   3.740164469704256*^9, 3.740164748060543*^9, 3.7401650880523415`*^9, 
   3.740165197606597*^9},
 CellLabel->
  "Out[412]=",ExpressionUUID->"12c0a019-a70d-4506-9abc-98f8b4623fd1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Code Repository", "Subsubsection",
 CellChangeTimes->{{3.70811356171093*^9, 3.7081135645971746`*^9}, {
  3.740253612203517*^9, 
  3.7402536333827353`*^9}},ExpressionUUID->"14e3781a-a52e-4548-bf74-\
c0aba980dad1"],

Cell["https://github.com/vivlet/Summer2018Starter", "Item",
 CellChangeTimes->{{3.7080963065367527`*^9, 3.708096309577277*^9}, 
   3.740231280420992*^9},ExpressionUUID->"d164cdc3-c8cc-4779-b201-\
e2e8541cd2b4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Conclusions in Detail", "Subsection",
 CellChangeTimes->{
  3.736182152929455*^9},ExpressionUUID->"405e0fe7-2022-4d50-b275-\
5f85c6659f37"],

Cell[CellGroupData[{

Cell["Submission Upload Report", "Subsubsection",
 CellChangeTimes->{{3.736182157207601*^9, 3.736182158846121*^9}, {
  3.740242208744359*^9, 3.740242211460504*^9}, {3.740242250089703*^9, 
  3.7402423060769*^9}, {3.740243586066861*^9, 
  3.7402435892271876`*^9}},ExpressionUUID->"aa59b7ca-7848-48f1-96cf-\
6286c1fabb09"],

Cell[TextData[{
 "The output of the submission upload report.\n\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzs3Q2cXXV9J362tbv/3Vbk325rH/7dAnW7WmqrVfug2+66rNutbrsqau12
X62obVe3Wgr4QClSn6pYa9Ui8pQEEhJIeEggkBpDTCQEAoQkBBIIIYSQhExI
QjI8Ex5+//meM7+bMyd3Zu4kkzl3Zt6f1+tN5tx77rnnnHvuZe5nfvfc4z74
l+/+sx846qijTvt/+v7z7pM/9dZTTz35jJOO6Zt478dP+8iff/xPP/y7Hz/9
T//8T0/9jQ/+YN+F9/XN+74fOuqol/X9vHLlyjSZPf7448Agmn5+AgAAANCd
mu6toJs1/fwEAAAAoDs13VtBN2v6+QkAAABAd2q6t4Ju1vTzEwAAAIDu1HRv
Bd2s6ecnAAAAAN2p6d4KulnTz08AAAAAulPTvRV0s6afnwAAAAB0p6Z7K+hm
TT8/AQAAAOhOw/VKm/7fow5L070YHI6mn58AAAAA49lRRx3VsabXdaSG65X0
qkxmTT8/AQAAAMazTvtSvapelYnlcJ9fr3nNaxp/jgMAAAA0pdvGq0ZX06nh
ljVcrzRYX9rzR+9Mz2/ZnHKeuXlJ2nzsMV3Rq5544olp6tSprenPfe5zxWPz
4Q9/uPGeLot1ifU6Ess+7rjj0tq1axvfxrF26qmnplWrVg16fVwX84xkmaPx
XG369QsAAAA4NN3QA450fWfMmDHo9XHdWK93t41X7bSrGe1eNbrU59auTi/u
21uoJ7rVQ+lVowetd4wxHf1g9bKFCxcedNlgy8u9avSL8bg01fVFf1p9vuX1
0quOvuhN3/GOd7TtVoe6bihj9VwFAAAAus9QXV839qq5N23XrQ513Vjtw6bG
ri5durT1cxPjVaNTrSbGqj67ZmV6+uYl6dk7b2tdvu/b/5i2/vbrRtSrRtcY
XWj1spiOfVjtB6OH7GTMabVX7bSLPRLifuvrm6f1qkdGu/70UDvVcLjP27Hq
Vf/iL/4iXXPNNR3NG/PF/GP5GgoAAADjSSedXzf2qqFdf9pUp1rfT02MXY1O
9e1vf3uaNWtWMd3EeNUnb5jb6k5f2LM7PT57RtGh9k45L+354t8Ul1U715H0
qu3GlObP7Vc/zx99YfSk8XNc3m4caMi9art5cjebe9uYP58nIMvLyX1vdcxp
Xn593rrhOuB6rzrU9tT75fptq+sf103mXrXeox5OpzqeetV4jXjf+943bLca
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
9XCeT3GbuG1Tf3/Rqw7sVY9kr9mJydCrdtJlDdefHa5Y/kh72ehMx6IPHS2d
9qqxTUdyX2exLofbhY+kV+2EXhUAYPLp5l41+oF4f3rVVVcV4ufR7u30qiMz
HsaqtutVc/cXhutLdaudm6idatZUtxr7szpWdaTitk09JnrVgb1qvC42+fyY
6L1qp31mt/WqY9U9jqZu61Wjlz7cDlOvCgDA4Wq6V433ZPG+s514zxbdVp43
n8tzsPkP5f2dXnVk4rvJ82PTjWNVQ7teNcapRv/XyTrm81p2Ov9kNdE71ayJ
bjXOe3I4403jtrGMJvbXSF9T77333rRmzZo0ZcqU4hyq8XM7cV3MEz/HbY7E
ukf/WP3/SP3vRbFPc19a/a6++uf+83S7efJ95POP5PupnpMkLyf//y7ut3pd
u3lDXm71OwTrvWr+m1hW3b769g9121inoXrV6jZVXyPytuRl1I/Z/D2C7fZh
u3OsR+9VHfMZvVZW7ctyfxa9YL6+2hHW+7PqfPXeLfrF6nXVeUNeTvR+9cuq
y4jL2o25jNtVr8uf9a/OE9fFfdevq6/LUNs/2PbW76u6ztV91m4fxTKry4l5
4vHJ5zOo7rvqelTnqc/X7lwI1e52uMe2Pi64us9HclzUt7+6DXn5+efBjh0A
ACaepnvV6Gby+6bosuK9WFX1PV/+3paquE1+33YoHdh4/N6qurFe/zxmtRvH
qoZ6r5q7gPrY0zhe8j7M1zXZqQ71WMa+Hup728b6OJgsnWp1/45lt3q451HO
x3wT+2qkr6kxDvXkk08ekaHGtR6O6AjzMZ1f53KvGNO5B6x/h1juM6uP32Dj
VXPfmKdjvnp3m7vK/P/GvKzcSbabt74O1cur29CuA87zDtWr1m+bj7F2vWrc
prrN1eVXtzV//2F1efn63K8O9b1t9XGRuY/M09Vzpua+r96L5T6s2p/Fv9Uu
L/du8XP9HJvV21T70aHGdsbvS3n59V60el21/6v3vrlPrt++vg6DbX99Gwe7
XVV1m4baR/XHpd6ZVvddvp92vWq7Zde3v5PHdrhetdPjorr9g41jrffA7Tp1
AAAmlqZ71SzGQY6kH632sXHbQ73f8fi9VXVjvf7dPFY1799qJ5XP0Rs/x/kk
8jjo+vdWNdmp5mO5XU+Z+4zBxmsNddsjpf69X91+/MbzfDSM1ffaTLZedSSf
7x/ufAGHo9qd5s9SVMd95s6vOm41i9eQ/JgN16sO9XeoPEa1/vNw0/VONKt2
o/mzHfXr8/oN1au2O59Bu/Gq+fVqqH1bleetj7EebjrkMZ/xc7vPnlc7ynoP
GKIja9eT1cfAVpc92Oe82/Wqg71eVO+3ft/V69qNq6xvV7uxrNV1qo/prF4/
1La0G2dZ7xUH20ed9Kr19R6se63vh/r2d/LYDterdnpc1Le/XW9e36eH+l1f
AACMH93Sq4boteJ9U/RaQ43Ni+tinpj3cM9/6TwAI9PtY1VDvZOK6TjfZB7r
FZ1gdAH52Mmfs23ys//jrVc1XvXImkznAeimXjXv+/z589iPuS/N0zFPu96w
2kkO16vWu8jqZ9+rYzZH0qu263pDtRtt14NWrx+qV21323aX5X3W7phsd3ne
V4fSq9Y/517vMavdXbuucLDxoNXP71c/z13v86ra3X/cJm7b7nP+1e6tetvq
dfU+MW9Ltfdr10+2OxfCcL3qYLerqnaEg+2jvKzhetV2vWy9K60uu7of6r30
cI9tJ+cB6OS4qHekeR/Ux7rqVQEAJpdu6lVD9DX58/0xtrB+fVyWzxcwGv2X
XnVkun2saqj2qtXzAcZ6t+sdcqfR9PlUx9N5AMJk6VabOL/qZPreqm7rVfO5
uutjPKud3uGOV612kdXX1Dx9qONV270OjGS8ar0nHe627TriwcaljvZ41XqP
2cl41XbnSe1kvGrVUGNDBxufOtRn5KvLjfWtXlfvVfP43Nzx5m2sdsf1brKT
XnWo2w21vwbbR8P1qu3OKVudJ587drD52/XSwz22I+lVBzsuButIq+ef0KsC
AEw+3darZtHXDfaZxup3WR0uvWrnxsNY1VDvVeN4Gap3jG1oulMdryZ6t9pE
pxry348O5ZiM2wz2d6mxMN571Tyusnqe1ejzqmMt251ftdr5jbRXrb6OHup4
1fo6VC8f7vyq+fWxvl3V7c5/oxrs/KrV/x+0Ozd6u8vrf6cbSa/artdrd37V
6vlAq+fNzH1k7sDqn8Uf7PuG6p/vry5/sNtUx1dWz11QFbdt991Z1fvK91G9
n6HG5FbnHa5XHex21X1R7QiH2kf1HrU6PdiY33qvWu9Rq+dhrd/vcI9t/TGr
jn8dyXExWEdafUz1qgAAk0839qrx+ex4v5Y7hXgfl3+Of9t9B9GhGg/fWzXU
OMWxNB7GqoZqTxDHyXDHSvRPsR3duC3jwUTtVpvqVLPooA5lzGrcpt3nrcfK
eO9VQ/37mPL31FfnqX5Pff28ACPpVavn+cjj6g+lV833lZdTPU9s9XiojuFv
971T+Xwpud+t98nVc1JXx7fWO9P6ctpdXl+vTnvVwcZ8hsE+O17tJOvf4R7q
nWb9e+vrfW27+6jOW51nuE4xr199LGy7cZ31damfB6D6+fzqd2wNdx6AwW43
WK863D6qfka+2pm2O39AfZ52j2P1c/n1Pn24x7a+vHbjVTs5LgY7D0J1v+pV
AQAmn27sVaMXiJ4mfs79XXXMYVx3OJ+RrRoP31vVLWNCq31l/T10dAPRT8b1
TfeTh/KdP7kbbHofj1cTrVttulMN+XvU2o3bH0wezz9af3c6FBOhV6W7DTbm
83AM9bn20VI/LygjM1gvPdRYYQAAONLqvWr8W/XYY4+1etX4uXrdgw8+eER6
1RiT8vWvf72Qv3MoxM/58tH6ThbnARjZ45LHL1XHqubHJi6Pbm2wLmisup5D
6VWb/P70iWKidKvd0KlmuVuN59hQf6+I62KepjvVoFflSKqPz+zWZbZTH8vI
yAw29lOvCgBAk+q9al3+HHVod/1o96r5M5Ht+rk8FiuuG+y70UdKr9q52O+5
W80dT3RocXn1scjnhoz58rkMTjrppFE9L+5Q8vETPW+n8jHV9D4e78Z7t9pN
nWoWr735bxnRndbPE5L71Jin6U41HEqvOmXKlLRmzZqOxLx6VUZLu8+wM77o
VQEAaFLuVQe7fsuWLa1eNX4ebL7R6lXzGNXoZtp1BHFZ7sBi3sO9P71qZ6I3
rZ9PNfrTwb7vKR6n6FKr5wwcq/PE5u+tPhRN7+eJIHero/H8HEt33HFH13Wq
VfF8i+dR9fyU8XNc1tR3VLVzKL3qySefPCJ6VQAAALpBdKErVqxofda/nbi+
k3lGo1fNY92G+8xrHid5uPenV4XR1/Q5dg9Vt3aq44nXVAAAACaLGIMaY01H
w1DjWTsR4xlHMsYt5j3cMZA6AIDR4zUVAAAAJgcdAMDo8ZoKAAAAk4MOAGD0
eE0FAACAyUEHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAA0L0ee+wxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC6yL59+1JPT0/aunVr
2rRpEwAAQGHLli1px44dac+ePY2/bwEA6Dbxu1J0q88991wSERERERHJef75
54v3Cps3b278fQsAQDeJvz3HvyIiIiIiIoMlutX83gEAYLLbvXt3MVY1/gYt
IiIiIiIyWF588cVizGq8h2j6fQwAQNN27dpVnDNJRERERERkuMR7h3gP0fT7
GACApulVRURERESk0+hVAQBKelUREREREek0elUAgJJeVUREREREOo1eFQCg
pFcVEREREZFOo1cFACjpVUVEREREpNPoVQEASnpVERERERHpNHpVAICSXlVE
RERERDqNXhUAoKRXFRERERGRTqNXBQAo6VVFRERERKTT6FUBAEp6VRERERER
6TR6VQCAkl5VREREREQ6jV4VAKCkVxURERERkU6jVwUAKOlVRURERESk0+hV
AQBKelUREREREek0elUAgJJeVUREREREOo1eFQCgpFcVEREREZFOo1cFACjp
VUVEREREpNPoVQEASnpVERERERHpNHpVAICSXlVERERERDqNXhUAoKRXFRER
ERGRTqNXBQAo6VVFRERERKTT6FUBAEp6VRERERER6TR6VQCAkl5VREREREQ6
jV4VAKCkVxURERERkU6jVwUAKOlVRURERESk0+hVAQBKelUREREREek0elUA
gJJeVcYyL774YnruuefS008/nZ566ql0zz33pD179hQ/t5tev359cYzm6Xvv
vTc9+uijren77rsv7dy5szW9YcOG1NPT05q+//77044dO1rTGzduTI888khr
+oEHHkjbt29vTcdzYdu2ba3pBx98MG3durU1vXnz5vTwww+3ph966KG0ZcuW
1nT8HJfl6Zg3bpOnY1mxzDwd9xX3madjXWKd8nSsa6xzno5tiW3K07Gtsc15
OvZF7JM8Hfsq9lmejn0Z+zRP7969O61bt641Hfs+HoM8Ha8Rd999d2t67969
ae3ata3pffv2pbvuuqs13dvbm9asWdOafvzxx9Pq1atb00888URatWpVa/rJ
J59Md955Z2s6rFy5csB0XB/z5em4fSwnT8fy437ydNx/rEeejvWL9czTsf6x
HXk6ti+2c7BjMPZP7KcjdUzWj8HhjknHoGNwor8u1o/B4Y5Jx6BjcDK9Lsbv
T88++2x66aWXGv19Tq8KAFDSq8pYJd4DxPuI6nsdvWr3vncL8RqhT9CrOgYn
9jHYba+LelXHYNPHYLe/Lsb2xO3jb9VNRa8KAFDSq8pYJcapxnuB6nsvAAA6
F79Hxe9T8XtVU9GrAgCU9KoyVsmf/QcA4PDE71VNRa8KAFDSq8pYpen3HwAA
E4VeFQCgeXpVGavE+caq51cDAGDk4vepOG9rU9GrAgCU9KoyVonvcKh+jwMA
ACOXf6dqKnpVAICSXlXGKk2/BwEAmCicBwAAoHl6VRmrNP3+AwBgotCrAgA0
T68qY5WRvl+449rz0rfPa+fadEcXvJ8BAGiKXhUAoHl6VRmrrFu3rtDp+4Xh
etUHNm5s/D0NAMBYy79TNRW9KgBASa8qY5Xdu3cXOn3PMFyvGtfPXKxbBQAm
l/h9as+ePY39TqdXBQAo6VUPPzuWX5mmTr0yLX9k9Ja5/6Glac7U2WnpQ/sP
eRm7V81Pl82Yn1bvHr31OpyM9D1DJ71qTE+KbnVvT9q6fVfqHWa+3l3b09ae
vc2vb6zL9vVp5YoVac2mgetzqOu4Ze3qtGnvkVjXvaln6/a0q7fz2zzWszVt
39V7ZPZbFz2GB+tJd9+5Lu1qfD0AcB4AAIDm6VUPPxvnfiF9/GNfSHM3jt4y
V112Rt8yP5a+PO/BQ1zCo+k7X/9Y3zJOSVOXj956HU5G+n6h0151RN3q+pvS
9fPnF/558fK0cv32YbvKrnD7tenbMxenB4aZ74HFM9O3r729+fXddXu67uIp
6Zq+fXzLmvXp5jnnp6kL1h76OvauSQsuX5jWjaD77Fzfup43My3eGD9vG7Cu
Qx2bR6rP75rHsK3etPqGWWnR+qbXAwC9KgBA8/Sqh58j0aump7elNbffnXoO
fbhq2t+7Id1++wOpud+6B+bRRx8tdPp+YSTfWxVd1HW3d7Dc6CenzUtLV6xI
K5YvTtfOuCBNvebWtKUL3h8Nu97jqVddtzBdUlnfxzatSWs39x7yOu669Zo0
Z+mWI7S+1V514LoOpqNe9cElaVYHj1nXPoaDWb8oXda3fuPi7xEAE1T8PhW/
wzcVvSoAQEmveiBPP3B7+u7cGWnq7OvT7Rt6U1lpPpxWL1mSlty6Ie3rn2/f
hlvTkr7LVj9cTrd61Xt70t1L5qbLZsxNS+7uSQcq0XIZMX/cx/Wzp6Y519+Z
io/47++7zcLZ5X0+UGlAH1494D76Zkw9dy8vbnvZ3CVpzbYD8+7vuTstv75v
GXG/a7a1etRyPW9NG/YdWGxxf7GOU2en62/fkHqrvW1xn6vT1uK+FqY5U2ek
uUvWpdE6jcC9995b6PQ9w+C96nmH3jvV+8neDenGmeenK5dtK6Z33X9nuvP+
XUW3tmLF3f1969708D0r+6ZXpBVrNqXHKsvLn3Vf0XL3wR1t7660cU15/YDx
sVvuTivu3pKe2rsprYnbrlyftlfHY+59ON2zMm63Jm1aeUOaMkhH17trY+v2
9y6dfWDf7Lo/3Xnn/WlX//Lv3lJb55X3pIcrn6vfcnfM05u2ry+3dc3Gwc47
MPj+yNv70NIr+/vrO9P9u8plx36N6w/uDfemTf37p37OgNKudMvVB3rPg25T
Xc9BtvmA3rRr45raug/sVavrOvBxWJnWb+9tHZsHetWedN/K29K6bQP3wfY7
F6RL+jv8A8sbZL0r8v4pj8H2x0z5GJb7dtDHNOa9a3PrtnFsr7yvp/Z4l/sk
P+Yr73m48nhWLh8wrntdWnjptemOIzJ2GIBO5N+pmopeFQCgpFcts//2y9Lf
nPKx9FefPDOddeYn01997LR04U1P9l2zLF30sY+lj39hbsrDUcse9WPpomXV
6VPS6aed0nf7T6dPnRKfvz+j7/rcSJbL+NuvfLW4j7ht+NQ/XZ5mfOmU1vTH
T/laWpB71GUXDbiPh//56+n0vunTP31WOuvTp5U97v3FFekbp/Xd9rRPp7PO
+nQxzxevub+yXpVxtLuXpalnxv2dls4otrFve780J921r3qfZ6evfPXM4rq8
Xl8cpYG4I33PMGSv2kbH41Vr/eSuW65O3776luKckdFpXTbv2nTV7AVp8bJV
actTe9LK66b1XbY4LV+xNM2ffkGataS/T9u4JM2aNictWr4iLV80J0298LJ0
zfyb0voB97kxfe/yS9LsBUvTiuWL0pVTpqT5K3dV1uXydOXl89Li5bHs89P0
RevL63atTNdPuyBNn1/e7qpLLkgXtOtVNy5NV1wwJV25aHlasfT6NOui8w90
lhsXp5kz5qXrrpqd/nnxsrR6S9+2rrw+TbtoRrp+6Yr0/QWXp2nT5qc7eg7s
76nTZpbrunRBuqK6ri1D7I9s28q0aM6l6dsXz0xz5y9KK7cN7CEH9qob081z
ppXbGcubcUn65zX1saIr0/wpN6Q1lX269PKL0rSrFqXlyxenedMvSlcs2VD2
fm22+cByetM9352eLpw+t29/L0+L585OC1Y9luq96oDOdMut6Zq+/XBF/z6Z
ffXS9OCAeXrThsWz0rS+7ekZdB/MT4tWbht6vSuK/XPBRWnW3MX981X2cRwz
V16b5s/u24bFK9I9vUM8pttuSnMuzvstuum+58nsm9K2YnpDunHG7HRT32Oz
5abZ6cJZC/oez77bz8/7ZFdas2B6mjanb11XLO/blkvSlcsOjBe+49ppaeG6
5nsFgMnMeQAAAJqnVy1zx/RPpo9/7BtpYX8V+vS2bf3jNDvtVT+Zzl3Q/5n7
3UvTBZ/su81Zl6e7qss441tpYYxJ3X9Xuvzssnv9xvx7+m6zP22+9ivFMs9d
1F9yDuhVH0kLvtY3/1/PTKuLK/ennm3leNgdN3ytb76/TrNWlTfb37Otde6A
gb3qvvS9b51STF95T/l7+O6++zgj+t459wy4zzO+tTAVQ2d3L0rnRg/8pXlp
NI6Qkb5fGKtetXpZ0WnNvDFtGGwsXuXz7UUHe+OG/uuip5qVljw49P0XHW7u
FON+ZyxK9/bfV++Kea3eK5Y9pW++XUOt91O9ffvo/AGfRx/QWUbHeN7MdOOG
3FOuT4suvTjdsKq3dfvVN1zc6nJjfx/Ynv51bfVww++PofbzYL1qb998F159
y4FOcs0NaWr9M+a7bklXV5YV5wS44IqlB8YFb1marjj/mnTrrnbbXBHXXXxt
umNXfTsG61UP3r9P1banp2/9p81a3P54qe2DIde7crti/8xbcWAfxD7O/Wgs
8+J56baePP9Qj+nGtHhmf//Z27eNl1+frp91dbol7i8612kL07q+26ycf366
alnPwfvq0sr5bGP+yrZsuHFGZ883AI4YvSoAQPP0qmX2fe9bxRjN0z9/YZq7
rPr5+E571er5VfenpedHb/qldO2DlWXkG8QlF8X1F6VlBy4YODa0Nl71njln
F2Ni/+arl6WFlc/6912R/jbGnZ751TRz4Zq0tfIr9sD1Wp6mHtSR3pUuP6vS
/9bus28Jae4XBm774WSk7xfGtFedtaQYh9j23JZ7N6WVi+elK2bMSJdNu6g1
bjR6slYn2Lsq3TDl4I4sxGe0b14wJ83qu/30KRcM7FWr61KZjm2/+pZdQ693
tTfrv+zgXrV6LtroD+el23rbb/tB5wwtesjqONGh98dQ+3mwXrXoj2fObX2X
2PVzZx58voNYj8plA/vsvB/OT/NXttvm2jpV+8oB+6VdrxrLnZFu3ND+2Ixx
zbPOPy9dMdh5X2v7YMj1rtzu4GMw1q8cW3rwcTD0Y7pu4bQ056ZtRTc7e+G6
vulL+54nvUVnPuWGNeXxufmWdO0lF6WLZ85Li+/oPzdCLOPSOQcel/lz0vTK
fu34fMYAHDF6VQCA5ulVc/anh5Zelr72mdOKbvGvzvxmWnBvlKuH0qvm3jRf
dvi9akq70+r5F6YvfbI8b8Dpn78sregfW7t71fx04d+Vn+v/+GmfTzP7rxi4
Xv3rcP7Synlf+3vTvB5HuFcd1fOrjlqvWo7vu2ThumL64E5rfbpxxrR03Yr+
805WO77ejWlxfK77kkvStGnT07W3bD64s9u1Is27aFa6cV3/uTTj/jvsVYs+
bND1DtHLXZwWrDlw2fC9an8/139ZMUa2/xwIB/WqbceiDrE/htjPQ/WqA7vG
Nnr79mGtn8ydYGlDsU5Fvzxcr9p2/O1QverA/Tvg2Dx/Vlp817J09QVXp1t6
Brm/Tte7cruDjsEYr5u3qW2vOvhjGuN/p/T9vG7xrLK/XTk/Te871tfcMKXo
Vw/cb5x3dsWB8zoM2kGXoq/VqwI0x/lVAQC6g161nv2pZ+XM9MXoVqcsT+16
1fuu/vwwvWp/H3nKlLS8mB6NXjXn6fTAgn9Kn+q77svzHhx4zQML0rmfPDAm
deB63Z6mDzg3QWxq33pVx7Ae4V41vrs2dPqe4cj3qnvTpmXXpKnnz0439Z+H
86BOa8+t6ZrKeMCeO+cf6BpXzk+XLRqmJ17/3TR9xo1pQzHdmzYvuaKjXnXL
0ivSBbNv6v/MeG/aftOVbc8DEJ3w1BvW9Pdfe9NdC6YN0avuSrdec36aeWP/
OT17H0zfn31BmnPTltb+vuQ7a/uX1ZNum9e37AVrB27PUPtj0P08xPlV1y9K
06dc2zrHa2xT70GfqY/vSZqfVrb2ad9tKp+Ff2zVDWlqnH+1t902V+zqW/fz
K+cI6N2ethfLGPz8qvcuujRNmbeidZ6Cnu3l9zdVz5kQ5yedWpmnpTjXa37s
h1nvyu2K/XPlsv7l9aYNN85MF1xza9mTHtSrDv2YFp//n3J1umZ2/+f/i3Mq
XJuum9k/Hdv08IHvqio62XhsYl9dMCst3tDb5nHp7Ts22o/jBWBsxO9T8Tt8
U9GrAgCU9KqR/em+ud9M35yzLK3fvj1tXz2n6FU/Nf32dKAj/VKasXBJWnL9
lPTZ/u+eqn9v1WenLExrNq1Py6Z/qRg7ekbf7cuxoYfbq+5OS6d8NU1buCZt
6lu/TYvOL3rVr93wSNq9dEr66rS437713rSoPK/r125IO9LBfe/GebFep6Qv
T4/tXJ8WfuuMYr3PXbS7zX2mNGHPA3B+jDGdki7s+3f6nAXpts0Hxu0dPF61
p289+uadckm69JIZ6ZpFN6TZudfasixddXE5XvXSMGNO+ucVtTGrvRvS4lkX
pIunxTyXp+sXzkuXdNCrxu2WXH5Beb/TpqU5116TprfrL3tuT/On9S9/2vQ0
b+7sdMGgvWrMvyr984yLyvmnTEmXLVjV6gNjf0+ZPiNNL67ru+/Ll7Q5b+gQ
+6O+nwfpVZ9auyBNveCytHh9XNebNtx0VZp20ZRyH/Ztw3W37ajdZ5zn9NLK
uM7qbaalqZdclW7K/d9QvWqfnlUL0mUX9Y8x7tuGa5Zv6rt8W7p5Tt8+vHbF
weN2+x6Hm66ali4utndKmjpjYVq7pz62N8a1xvjP2jlKK4/9Zd9dO/R6V8Qx
eMnsq9Ksvsf90mkXpQsr3y3WdtzyEI/pwd9XtS3dNHvg9MobZqSpUy5P18yb
03f7y9OS/nWq7qs4Bq/43n39y1yTFlza5vwQAIwp5wEAAGieXjWyO62ee246
+7SyLz3oc/b93+9Unh/g/HTjkpnprHqvetb5acb5Z5afxY/zoH7zhnRf/Ryt
h9qr7n8oLZ32d+lTp+T1y8uPcxdMa50bYOD5C9qNo92dVlz2+XR6/7wfP+XM
9M25q/q/nytNjl71ED3WszX17B142QNLLk/X3NKTendtT1u3bk1b7/temt22
0+tNu7ZvT7sG+y6sEd7vwUa+/Fju9l0DO71WV7i3J23t2TsK6zXU7Wvr27sr
bd86+Db0rrohzer/fq2Bt+lpjbXs3N7UU7+vWNYQ21w8xsPskxHdVyfrHfNt
3zXoZ/E7eUw7Nug6xfoPfKzbPhYAjDm9KgBA8/Sq1Tyd9sR41T0H/566v3dn
2r59TxruN9in97S//ahkf2/a2bd+Ow98qVa+IvXu7Lvfnb2pfk3bPL2nb1t2
poMWc4Sze/fuQqfvF7qpVz1YfP56Spq34sAYxZ7VN6Tply5K93bBe61DcdD5
VbvKxrR49rXpjjbfC8ZY6km3XDOndd4MAJoRv0/t2bNnbH+Rq0SvCgBQ0qvK
WGXdunWFTt8zdHev+lTq3b4yfXfOjHTZjJlp5swZ6Yp5S9Pd7b6/aJxYf9P8
tGjltsbXY9D9vavnkMb8Mroe29X5GFoAjoz8O1VT0asCAJT0qjJWafo9CADA
ROE8AAAAzdOrylil6fcfAAAThV4VAKB5elUZqzT9/gMAYKLQqwIANE+vKmOV
DRs2FJp+HwIAMJ7l36mail4VAKCkV5WxSk9PT6Hp9yIAAONZ/D61c+fOxn6n
06sCAJT0qjJWafo9CADAROE8AAAAzdOrylglfv9v+j0IAMBEoFcFAGieXlXG
Ks8991zasmVLevTRRxt/LwIAMB7F71Hx+9Szzz7b2O90elUAgJJeVcYqL730
Urr33nuL9wL5vcE999yT9uzZ05pet25d2r17d2t6/fr1xTGap+P21V72vvvu
K84vlqfjOxyq53C9//77044dO1rTGzduTI888khr+oEHHkjbt29vTcdzYdu2
ba3pBx98MG3durU1vXnz5vTwww+3ph966KEB2xM/x2V5OuaN2+TpWFYsM0/H
fcV95ulYl1inPB3rGuucp2NbYpvydGxr9bvAYl/EPqm+94p9lqdjX8Y+zdOx
r2Of5+l4LOIxydPxGnH33Xe3pvfu3ZvWrl3bmt63b1+66667WtO9vb1pzZo1
renHH388rV69ujX9xBNPpFWrVrWmn3zyyXTnnXcOeL+4cuXKAdNxfcyXp+P2
sZw8HcuP+8nTcf+xHnk61i/WM0/H+sd25OnYvtjOsTomhzsG69OOQcfgRH9d
HO4YrE87Bh2DE/11sX4M1qdje+L2L7zwQmO/0+lVAQBKelUZy7z44ovFuFXv
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
BQAo6VVFRERERKTT6FUBAEp6VRERERER6TR6VQCAkl5VREREREQ6jV4VAKCk
VxURERERkU6jVwUAKOlVRURERESk0+hVAQBKelUREREREek0elUAgJJeVURE
REREOo1eFQCgpFcVEREREZFOo1cFACjpVUVEREREpNPoVQEASnpVERERERHp
NHpVAICSXlVERERERDqNXhUAoKRXFRERERGRTqNXBQAo6VVFRERERKTT6FUB
AEp6VRERERER6TR6VQCAkl5VREREREQ6jV4VAKCkVxURERERkU6jVwUAKOlV
RURERESk0+hVAQBKelUREREREek0elUAgJJeVUREREREOo1eFQCgpFcVEZmY
ef7554t/X3rppdZlL7744oB5nn322eL65557ru1tn3766WKeyAsvvNC6vJ79
+/cXy6jel4iITMzoVQEASnpVEZGJn3379rU60Z07dxb/PvHEE8W/8f+CSHSo
0Y3GfNG/hnY9ab4+etaenp7W5XneuO6ZZ545otsjIiLNRa8KAFDSq4qITNw8
+eSTA6ajN/3Qhz6UzjzzzNYY1RiPGh1pNTGdb/v4448X/8b/L9plx44dacWK
Fen4449vjW0dbFyriIiM/+hVAQBKelURkYmb3JdWx56+//3vT+ecc07xc+5W
n3rqqdZt6ucEiOTxpzHGNTrTGNu6d+/e4rJY7pVXXple+9rXFtNxTgAREZm4
0asCAJT0qiIiEzPVrjQSfWh0oe985zvT5z//+dbluTOtzh99bB57Gv/mz/5H
qr1rLC961RtvvDH91E/9VKtrzbcVEZGJF70qAEBJryoiMrETr/PVMaT/5//8
n3TWWWel97znPellL3tZevWrX52++93vFtflbvXv//7v0y/+4i+mn/mZnynG
oV544YWtXjXO1RrnCPjf//t/p2OOOSb90i/9UvrsZz+bjj322LHfOBERGfPo
VQEASnpVEZGJmXbjS+Pz+2984xvTz/7sz6abbrqpuO6SSy5JRx11VFq/fn0x
z0MPPVR0r/GdVOHmm29OL3/5y9OSJUtay3nLW96S/uAP/qA4t2qMUX3ve99b
LDOWF/ebvxNLREQmXvSqAAAlvaqIyMRMfD4/n1M1Ppefv5/qIx/5SPrMZz5T
/JzHp77tbW9Lf/d3f9fqYiO9vb3Fv9/5zneKLnb69OnF9dHHHn300a3r4/8l
cdkJJ5xw0PdkiYjIxIteFQCgpFcVEZmYyZ1q7kpzhxrnV/3c5z7XGlMa51eN
z/R/4hOfKM6jGp/z/4d/+If0a7/2a+n3f//305/92Z+lN73pTemLX/xiMf/U
qVOLz/5H8vdixXkE8vdWxWX5vkVEZOJFrwoAUNKriohMzFQ//x+J8aXRm777
3e9OZ599dnHZo48+WnSgb33rW9OXvvSl4rIrr7wy/fqv/3rauXNn67Zvf/vb
0znnnFOcR+DWW29NP/7jP15cnnvV+fPnp1e+8pWtMawiIjJxo1cFACjpVUVE
JmbymNHqd1ZF3ve+96U//uM/bo1fXbRoUXFu1DvuuKO4zf/9v/83/c//+T+L
cazxuf7Vq1enX/iFXyh61Uj0rT/6oz+avvWtbxXTcQ7WD37wg+n1r399MR3d
qvGqIiITN3pVAICSXlVEZGInzqsaPWeMNY3X/ehU3//+96fjjz8+/ft//+/T
Mccck6666qrW/NGbvupVr0qve93r0oknnpje8573pJNOOimde+65RdcaWbBg
Qfrpn/7p9GM/9mPpzW9+c/rHf/zH9JM/+ZMD7lNERCZm9KoAACW9qojIxEz0
qPlz+tXs2LGj9fODDz7YOs9qzB/J41g3btxYdKz5fAIxdjVfl8/ZGucEyNdF
8thYvaqIyMSNXhUAoKRXFRGZ+Im+8/HHHy/GreYOtHr+1dyDVnvTOBdrzJvn
i9vmz/fHv3F9Tsyfr8s9rYiITMzoVQEASnpVEZGJm+g+253rNI9Nrc4XY1sH
60Tj8jgHQLVjjcRl1bGp0cPWly0iIhMrelUAgJJeVURkYibGqFbHpMaY0mov
mj/Lv2fPngG3i+tivvg3llEdpxrJY1qrl8Wy8uWRffv2jf4GiYhIV0SvCgBQ
mui9av6cavX7sOvfjS3SDcnfBxTxOWqpJjrLGEua+808LSIi3Zk8br96vpSJ
FL0qAEBpoveq1cRYqnxewUj0WNFNQFPiOVhNdVxg/lw2k9dwaXr9AGgvEuP+
888TLXpVAIDSZOhV9+7d2/o5j/MyZlW6JdGjVj8zXf3ctkzutDsvaryGVb8j
SkREui/xGj2RP3uiVwUAKE30XvUHfuAH0o/92I+lo446qvAv/sW/KC7L09C0
f/kv/2V6xSteUfz8Iz/yI63L41htet3oDvGa5XULYHw5+uiji38nYvSqAACl
id6rxu+z1fGqMVY1n/Mqf2eLSJOJsdN5vOpEff8lIiIymZI/i/LDP/zDTa/K
EYleFQCgNNF71Rjzl9Pb2zvgutyvijSV6vl+o1/NvapzAUgk3pfn85bE+Xbz
34Lyd1eJiEh3Jp+rZaL+vVSvCgBQmui9avw+G51EtaeK8109++yzxc/5e4Kg
CZE4NqPzj3/z+6/HH3/c8UnrNSt/h1k9Ta8fAO3l/4/rVQEAJraJ3qvGuSur
31H1zDPPNLg2IgNT//60eP9VHZMoEsdIvD+PvwdFv5pT/VlERLov8dr9Qz/0
Q02vxhGJXhUAoDTRe9V24wTy2NUYsxpjwB599NG0du3a4rLosp566qnWvLmH
zeNb83TuvPKyYro6nizmj97jf/2v/5X+9m//dsB95/ni+ury833E9Xn5uXfb
vXv3gG2Iz4932rtVz3eQv5s2zjmbb3/eeeel3/3d322tV3W5sX6558v7q77d
ef6enp7W7fI4jXzfMf+//bf/Nq1bt6617fn21f0Wl+fr2o3Pm8iJ/fyDP/iD
A/ZNPP4bN24sxrPm4zL+veeee4rHMl9WPZ9APE5xu072X/3vDNXPmudjJT++
eXnV21SPlbzesS755+o48ZNOOin9wz/8w4BlVzvkuE1+DuTtiLQ7fvP25edH
fTnV2+R5Yv68XjF/yOtfPUdI9fub6+cKiW1v97yLxyEvO9a7Pk9eZr0LnTlz
ZvG9evH6kx/v6jrv3Lkz/eIv/mL68R//8fQbv/Eb6T3vec9B9/0Hf/AHxXWR
2N/VdY5tzsdI9XiovsbFbfL6vuxlL0sPPfTQQfchIiIjS35dNV4VAGBim+i9
anyHdk6904ieIXzkIx8pfu/N3WVcVu2O4ufoHnJ3U+1PItEVnnbaacXluUfK
vcW73vWudM4557R6ktx5Vb9LKxKXVfvL/D1G1XMoRlcZ81V7n+GSb1/dnuiR
q9fH+v33//7fi+l4H5A7urwO9a652rvUx1vGvLnXqfY4se7xWERPlLu7vE7x
c7Vvnqxp16tGXve61xXHUezX/Ngfd9xxacWKFcXPuRPcs2fPoL3fcInXgmoH
Xj0+4/J4bKrdbXX94vJ8HDzyyCPpox/9aGt78jzx7+/93u+lL3zhCwfdd/V4
zsdrtY/Nz7+8LpHc8ee/TVSPpeq65VSX9/DDD7fdB9VONxL7M6d6/FfvP/Z9
tceM+8n3VT+e69sQ233DDTekP/zDP0x33HHHQesR2xY96ic+8YnWbXfs2FH8
m/9uEds7Y8aM4u8iebvyPqh2xbHMuLy6HbGPqn/Xiel4HYzHM9a9vj9ERKTz
6FUBACaHid6rxvirnHp/E7/zxhjLGC8WvehnP/vZ1vWD9XzRZ+RuInqH6Ehu
vvnm9Ja3vGVAv5Pv73d+53eKMXq5l632pNFb5u4m9ybVMZ9xfb0vqqaTHrI6
Vi93MZHq+Rq/+tWvpt/6rd8adLm5c6n2W/nyvE/afSY57js6mthfcbv4DrE1
a9YM6Huq2xXz5fchcV+T7XvFButVf+7nfi79u3/379LSpUtb87785S9P3//+
9wfcvvrYxM/VXnCwxGtA9f5z4hiIZVSP53xc1PvVnJh38eLF6dWvfnVrPGnu
Z+Mxf/vb356++c1vtu4rnh8xX36cq+NxB1t+vF5FqsdG9biubkt1XHj9Nnl5
eVuq+yH2ez62q51xu7HB1cT1+bp8m3brVh2TXV2/2N/553y7X/3VX02XXnrp
QcvK61f/G0v9uRvTsd3VfRrT1cc6/90kLovnaPzdxPlSREQOL3pVAIDJYaL3
qtETtPtMcu4/Fi1aVIwJu+6669Jv/uZvtq6PniE+vz9lypSiu4j5Q4zFiz4r
9t3999+f/vN//s/pta99bfF785vf/Ob0X//rf02vec1r0tatW4vlvPe9701f
/OIX0+c///n00z/90+k//If/kD796U8PWMf4nHeMF42u7IQTTkh///d/X1ye
u4/77rsv/cmf/Elxn7Gur3rVq9LRRx/d8ed1Y/3vuuuuYl2OOeaY4rZnnHFG
sT+in5k2bVp63/veV/Q3sX6vfOUr08knn1y8J6h+7jrOFxCd2c/8zM+k//Jf
/ktx7MQ8eT1jzN1/+k//qegB/82/+TfprLPOavVgkdi+1atXFz/H/cZ2fuhD
H0p33333gPWtfl57MmWwXvWXf/mX0z/90z8Vx1ok9k98NvyWW24pHsM4LmPc
YzwmP/qjP1rMv2zZso7vN/rXWE6M245xsD/7sz9bLH/VqlXF9TGO+8wzz0zn
nnvugNv88R//cbr++uuL6fXr1xfHRoytjWMo/PZv/3bR12/fvr2YJ86JcfbZ
ZxfLimPkJ3/yJ1vnBcgdcDyn/tt/+2/FMRjPoy9/+cvF5dW/D8S41zgu//RP
/7TYX7/2a79WHEP5WKz/TSTmzfsp8ld/9Vfpp37qp9LP//zPF/v0yiuvLC6P
8Z5XX311MX779NNPL9YxP1/z2O3czX7yk58snvexv2M/5LHDeVvi7wfveMc7
im38iZ/4iWLMaSw//30jln3ssccWj1U8bjGOO3elsQ2xr2Ld/tW/+lcD9mfM
F7nsssvSL/zCL6S3ve1t6fjjj08f/OAHB/x9I5YR88brVTyeb3rTm9Jf/uVf
DnjcY97Pfe5z6Yd/+IeL9fjGN75RvI5t2LBhwLaKiMjIo1cFAJgcJkOvWu1T
I7l7ibz1rW9NU6dOLX6OfuHBBx9sdTLvfve701//9V8PuO0v/dIvFR1WHosZ
PdCFF15YdJ3RP0W/Ep+Fzp1EnPswlhs9SNzvxRdfnP71v/7Xxf1E3xPdR3Qz
F110UdFzxO2jT4oeLRKPz2233VZ0OG94wxvSt771raL3iHGA9XMJtEuMO4vO
K3rOq666quh7Yz2jK4p1j/WM7ji+VyG6pG3bthUdVXQx0aNGomOOfibG5MZ4
2tg/0bFFnxWJ/RDrGMuIXip6pVhOdLfxbyTGK8Z7i7gu+qPoy6LHro63i+Ox
/jhNpgzWq0anFuNAo7O+9tpri8viOJw3b17x8/Lly4uuO46dLVu2pLlz5xZj
sFeuXDnsfcb+j/uNMdfxmMTjFcdE9J3R++XHJ3q7+PtANTGWMv4eEYmOPx7j
6E1jbO3mzZuL4+vee+9tnXcizq8aXWYcO3EcRvcb54bIfx+Ixz+eC1/72teK
Yy7WP54LV1xxRes5G7eJjjDEfPH8iXWP52N9jGW7XjDW7/Wvf33xcxy30fN/
5StfaV0f2x1/d4jna6xPjBGODjQ+ax/rELeJ587/+B//o9i+SGzPf/yP/7F1
ftToT1/xilcU6xfzRyd7yimnFNsZ18f+CPFYxd9o8vkxIrlbjevidTleV2bN
mlU85+OcunG7WK/Y17EP428ZMQY4+uxqYjlvfOMb06mnnlrcJvbnhz/84Va3
GsuIxzP61OjPY51j3HqM78/jiEVE5NCjVwUAmBwmeq8aPVX1M8GR3FtFL/kj
P/IjRUcRnU2MGY1xpTlxTsu/+Zu/GXC76DenT58+4D6iV42OsP59PtGpxHiy
GLdZPVdhdEVLliwpfo77izF98TjkHnH27NlFLxaPTyR6s+gsc6cWyX1lJ4nz
N37gAx9o9bCxntXxoDFm7fd///dbY/Iif/RHf1SMsYv9Fp1Pfl9Q7VtiLF50
S7Gt73//+4sOp/r9WtXP9cdyYhlxrMV8v/7rv15sc+yj6nk4I9Hr1L+nazJk
sF41+vQYUxkdXIxtjL7wV37lV9LChQuLeeKyT33qUwOOiRjLGY9pp6l+xjwe
0+hx4/HKY4njuRA9eXUscXR+c+bMaa1nHOOxnnHui0j9e5Le+c53Fr1mPs7j
sY/OOLr46PXi3KtxroB83MdyYwx1/F0iT8fzJrq/6HPbfb4/f39UXqdYVqxH
Hg8bfWnc54IFC1q3qX7XVfw9I8ad53WI14V4/sYY2XzegBjzHR1nTlwW/WSM
CY/E9v//7N1nsCxXee7xwhYCJKIkcs45ipxB5CCRgxE555xzkiyCyTkYk3MS
ICFjMDmKnFGBCQJDmWsX/uAPLtfc++9Tz9xnL/WcPQcD+2jv/1v1q51muld3
r+49/fbbqx/84AefZL32/HJfPtNnPZOHzrSSy6Y9HG+4jjN3X35ed8wxx0z5
6AT7Drl1ao47aDM5Y4L9eN99991wTGH/T1uS5zUMwzD+uDCvKkmStDNs97xq
Ps/OjVNKfpQcCTkq7nvnPn3u4yfIQXLPPTnHBDkQ7sV905vetPwd+QlyGOS2
mPb4rJfDDjtsqmcjb5NnzpAno0aWz9zUAT7sYQ9bvp7aMurQaHfyL9xTTD1i
xl7dkzrO5K7S5s6nMn1yTk972tOWObiMEfvQhz50ui+cv1MPSL0r905zr/eF
L3zhKd9Dfph70Xk9P1OLS3S9Wz/jnGViealz5d7o1AxnrM2xrninxe7GV6VO
k79TF3nsscdONaHUWrLuqQFN7WreSw0mOf3Ngv6aGmRqs+kr5OGpXSW3Tw0s
8+V35BfTToK6T3KiXTdNbSl9Ndu865Gp3T7iiCOW1znA/KjHJKiJJv/f45eS
4+OaQmpeTzjhhA3nqBk/dMw7Mv+55y6RO6T2lP5Ofz788MOnes3kZtlXsy9k
XTJuQWqz3//+90818PR36nWpE2XshORamT7bhm00PoNr7rlfHBN4L3nlfoZU
loG68aOPPnr5HtZ1j5XKNSG2Pdui958jjzxycepTn3p6P9d82N+odyb/y3JR
/0qdbK6lsJ34fZ5btdNqxQ3DMP7UYV5VkiRpZ9gpedXkTfI5l9wEY4pSk0lN
HuOsHn/88dPruUefIMeTsVDzrBlq2ZIHSu6IXBJ5luQ1uk5zHEuAfAX302es
SnJV5HI7L0ROhpxW6v2+8pWvnGQ5xu9XBdNgnEeWo2tC+5njjK9KziV5JP7G
fcv3u9/9pp/JwTD/POu8n1+U/AvLRP6p8zGsn65vpc6Q/BS1gw95yEOmdvVy
j3npdcY52E4xl1dlXZMzy/325Dm5v5ucKX2W4LpA7mVPH6S2NHWj6wT1mIzh
m2C7UduY54yxL1BrmuDYwb345PSyzWk39aVcexiXC1xjyLPhsozkJbkuQd6U
OmauZXRQN5t6VfoD7Tnzmc+87Pvpi/mZ6fY4H8nr9jO8+Bt1pCwXY12Qt+UY
yM/Uq7Juu4aamnJyrfzue9/73rQv0G/Zz7smN7WpXDfhHvu0qfeJsd1Mh+nl
mktek/XDtQvqknud9XolyG2f61znWv6eelWuGdEv+nW5ftHn+hz70hb2vdSr
9rjJhmEYxp6HeVVJkqSdYbvnVanJIlIrltwENaEHHXTQVP9GkBPhMzA5FWq9
CHKR5BuT32NsU6ZHHogg70D+ifVHzjD3xBPJ45C75R5tIvkL6vlSg8Y4itS/
UROafApjvvJcHIK8S+pXeznyt3WCWlXu2f7kJz+5zDO97W1vm56XxTzJhR1y
yCFT28ktEdzHfP/733+5POSVqOll7NgEtar8HeTXGDeWe6GTGyU/TA1f2swy
5F5pglq6fhbSWFM8V2+4nWMur0oO8KpXveriuOOOW24b+uiZznSmKefIOuLZ
UdS05l5y6i+pmaS2crPI9iW/yTi7iRe/+MVTjTJjUDBfcovsCwT9mDE9yUey
3ZM7p91cm+BZS9mviOQ4aTfTJdInqJ/knnz6FfeekzNluZgW+x21ltl/WFaW
jeefjWNHrBNMj3vq8+y03PvPM7LYNwjGV6X+l/YwffKoPBeK8Q44XhKME8uY
IemvrA/GkU3+mH7PPfaZDzlj7tVnf8sxg8j37BfjuBep86YWNm3jGJVjSC8/
xxJq7TvHyzpnuXgWVebHMYnjTaZ105vedMqls155DWMk0JY8c88xVg3DMP74
MK8qSZK0M2z3vGo+z3btFTkTclEZfzD5EXIR5PnI5bBeuEeWHAv301IjyJgA
PKf7He94x4ZxE8lV8swncl3kibhPnpwjQU1mnnlOkNthPFVqXMmlkNchd0VO
kjo36lTJxTL91LaRCyIH2Xkc2rZOXin3+XL/NTVttI9nHlF3S60a64XaOsYx
SD6Pr9Srcl82QS0d7aFd5GqoTeXeZXK/yY+xXK961aumcQK4v5pnlZMPTI6G
nA45Q5Y5Yzeyjnm+DznDjuSHxvq87R6rxgFgu6U2lcjYp+QwCe4h57598qCs
f14/PmNqVeSecvJ+zJvaWLYd1xaoO01ukGsG5OaZL/2b/kROjlxct5WgFpl+
wj3+1HGTN+Xvqd3uWk36/Gte85rpZ/oIteC8j3wi1x/udre7TX0v7SRPT86S
WDfv3uPO8ny4S17yktMykFdkXFLaxL7P9BgrmX2NsWBpB/08NesE24Z1wdgd
5ICp2eX4QK0t70/umzpY7r0nv8024TlXXDshWB5yliwTbaMtOQafeOKJy/XD
cYVnhzFmbYL1yHx62bkuwvgQCfZXpv/tb3972s8ZB5m6V/bHo446avk6loN5
01/4O9ucHDL77LrXbAzDMIz5MK8qSZK0M+yUvGru2+3oZ9yQV0ktZ2rH8pXc
B7mGcfxP3pv38Ddyi7yW6fb8eE3mRcw9y4a/UUvWOaSOfpbNngTtymd7lofl
IA+XGHOzzJv8Hu2f+xvPNKfP0I60qZ/FTh6X8TrJneb9qffldfld7tXueZBP
6vFYd1rM5VXzPeuc6Hwa+2/nv9ge5Mr29P7tzIP1nmeJ5WeCesvMl7/TB4jk
EOkX+Xv2GdpG/Sz9JNs402P6/J6fM+9eDvrF97///ZPklzNtfj+3j6wTTDv7
LfWjmXbGt6AmnWshfM9+kvXe48XyHtpLe1jfieRD83eWkX2a/j/3HLZsp8yj
o8elTYz7SveF1CrPHR+oEac95K3Tjl5/1NqSi3WMY8MwjD9dmFeVJEnaGbZ7
XjXjABAZ9zQ5BoJ1QCRHkdxI8iidZ0juJzVjCXIZyR12zedczOU98trOpZCz
or2de8p9y+Rj9iSvxDKNeRqmO+bfxufq5H15xlCip8V08nPWD+t2bizXXt7+
HfPNM7n69Tstv7qqXjV9kJ+Tk+9+RC47225uLM/NgtdlnWf6zLOn1c8Yy2t6
3Iied9dVZ1mSM+drXtd9Kv259xt+l/2K9uX1yf2vE91u1tE4/SxHgrGGr3KV
qyzb0v107I9dd8s2yHWD3o9622V58vfOm/fYF5lO3sv0Wc9z+8PctR4ix4me
diLLxHT7Gk/mTcxd+zEMwzDWD/OqkiRJO8N2z6vyeXazHCS5BOq4klMgX0L+
o599k3xF153OBX/vHGFySWMw7c6/zNWjZj5sp7nnna8TqU8bX880Cdo2V8c7
/o75d46Jn+fGeuz3kV9NLR7Lm3kSq55JlVpfYk/Hzzy5x1xetdf52I86p5ng
vf2Mps0i40QQqdnsPFzn18YaZl6f/sXfMvYuv8vrkpvv/Crz7OXq9tL/qY/t
WPUMpXXGiZjrQ3lmVSJ9lq8vetGLFocffviyrURemzYkP8vy9/7KMuU1uSaS
MVe7Hb0e+/fr9vfUead91IbnmW+5BjL2FdZp3pfjWp5D18eh3t47bf8zDMP4
U4Z5VUmSpJ1hu+dVT3va0y7zdORAOn+ae9k7P7NZHVzXaub+fiK5oFV1nQR5
j9wz3TkL7sPtILeR3MeYZyUnlbzJujWr3Q5yKHM50NxbPebkknfrujhyouM9
/olVzxPKes095B1di9ix0+5JXlWvSvR95HN5bPblzrXt6di043Yf8449Xbb5
WK+d6Px/+lrn31fV0471qt03e9n5fcYQ2JOgLUyn10vX0477wtz02Y9W5bIT
Xec+5kyZH3/vWuC5bczv+tpM6uGZd6/fcT9j2n1sWTX+LMvK+ui64ixfv8+8
qmEYxh8f5lUlSZJ2hu2eV+Xz7DrPt0mOJ2MMJucwfiX4rNx1fkTni+ae+TKX
N5x7T+d3emyB/02OcXxvcrOZNjHWz3VeKfcldw56rj3JC7G+ydNlnNa+tzzz
J3rMhf6efrkTn5szl1dlXeRvxFwOL9H3gK/bX3oa41gCXXM6N+5tnk/ffbbv
Xc97E3zP37smsvO5c2OKEn2//tx+tFmMOeaxzrTrYTNOadqT50uN11v6/b2u
WYdIm7sfj7XAaVfnjcexOOYi+dnsl+Rbe72M2z/jRMxtp+yLbJPOJ8+NB2sY
hmGsH+ZVJUmSdoadkFclyGd03qmfoZOYG4M0r0+Qh8hnZb7v/EXna/iaZ2KN
80mMeZbkYMacWNox5tTWqScbc8qd52F6ycfsrs5xfM/4+15vnbuZe1+3mWUf
80GJ5HF3UqyqV+2ce9Zv1lVqLvOeda4hjMEzi8bIdLrf5nv+Njf+5jgmMa/r
fa7HR03bs9xZxrF2PH2g2zH32lXR/S3jE/f0O1bdD58Ya8jH6wFj3jmvo73j
vpu/jXnotKmv22T9ZPo9LuvceLFE6mrnjhGpmR2XdayB3onXNgzDMP5UYV5V
kiRpZ9juedXTnOY0y7xBxn8k+rn0GZuQ4Os4pmXnR4kxhzXmO8aazzFP2vVk
vHZ3xvd221bdrzveb51aw/F54t2exJgb2qx9Yw4w7x+n0/WL3b4sQz87KcG0
e9vkd+PzmLqeMDV3Y43lmPfqe663UufHWIYDDzxww3ON8rc896jzaPn93tx/
xu2Uv68abyPrpKe/u2luVpebvtDTGPtU2kZkvn0fP6/PvftjLrdzxx1jXrbn
1+uxrx2M27YjYz7n+7EOeFyOnm4vU9Z7/72fcdWRdSBJ2nMcezn2m1eVJEna
3rZ7XpXPs/vss8/09WxnO9v0FWc/+9mX3+NUpzrV8vv9999/+nqKU5xiGp81
7z/Tmc604T3kwPh66lOfeqoz7Pf2NJnOX/3VXy1/v++++07Tzd92J6/h6377
7Td9PeUpTzl9zTROd7rTbWgX7eFrz5PX5Pc9rX4Ny9DtX6d95K3zWqaV6eVr
2s66SHv520EHHbRhnqwTft/LzM9MP+s22yPrlb9n24zrhWXlb9k2eS3zSZ9g
+222fH9uaXuvx/Sz3ha0n21G+7PteM/e3n/y92zDzDPz6XUwtjnvWYVpzb2G
9ZL5HHDAActpdp/s/R1nPOMZl32J97KO0ld4bbZPL+/4t7EN/fqsl24vf+tj
Rx8fel1nfWedj8cr3r9qW4+vzffnPOc5N2zbsW1nOMMZ1tr/JUnzON6e+cxn
no6l2zHMq0qSJO2y3fOq5ApST0f9AEFtVurXMuYjkWfXE7kPd3fjBPS9utQ/
sj47xpq18Zk+e3KfO/Vr3ZZ+dhHPuNnsOT4Z93FVnR5faf+qZ0jtbro9rVV1
iKnbSPzqV7+avrIMGbd1VT1g3sc02JY91sLcc4ROPPHE6Sv1fWzbriEen7+1
1dHPjyfmzr+637Kusvx7cs//Vvefud91rfOq5531+8axNHo8j7H92ZcZvzXP
vR/HDO6+xuvyM/ttzyv9aW45ej/uvjXXrvH++8TYh5ne3Pri/b1/jeOU0Jb8
bhxTpPs6r//lL3+5YTpjbf1OG4PDMAzjTx0ZK8q8qiRJ0va23fOq1H4R5C56
HICMkwpyQW9729sWxx577DIPR/z2t79dvp58Rudakn8Y7yn+8Ic/vDj44IOX
z73v/ATzGnMouad3lbymp5EYc0n83Lleciu8/hvf+MZUn3bWs551qk1jWTvP
Qo7lVre61VRXQX3f3e52t+Wzz9dpH9FjI/B955SZF2177Wtfuzj00ENP8syv
/pmcT+cRM91xrMdedtra6+W85z3v4ktf+tKG+Wc9jmM3bLZ8f27jPfScf43j
1iaXdsIJJ5xkne3t/SeR/YV5pG8w/bQzOcfOta4aP5X9MPNPfnQcqzev68i+
2rnJsS92MN0cA8axUntevZ2yfvvvzJO2JH9MDpp1M465yu96jNT01R5Xl7jD
He6weMITnrBsVx9/sp5/97vfTV8f+MAHLi5xiUtsaGeC4/84v7GvbPX+IUkn
VwnzqpIkSdvbds+r8nmW3EHnk5JfII/wohe9aLof/MY3vvHiSle60nRv7uc+
97nla8nfdB4muaLOGXU+5UMf+tCUf+roZ54TXeO3TpB/Sb5kHAcyzxzqZ+mM
7etlvvKVrzzlN4muPyTXxTye9rSnLe50pzvN1g6ualvPq5dpfC75q1/96sVl
LnOZTaeZ3FPPI9Pjb8mF5dlgeU/WM/ffkeujXb0cXY+cZd4bguVInnA8/yKP
993vfndxoQtdaMrXs2zkpscxZncXW9l/+ln1ee2e1gknH7rZWKpZBnKK/dym
MVecSN6VdZBpj+sjX3tsWILcZuqsiayfvnbC9Ht+Wf6M7dttSM4133ceN1/T
X29wgxssXv7yl29YdvK/TL9rWpnOm9/85un1WQamk/Xfdfu9bqlfHteVYRiG
sefBNfaznOUsW92MP0uYV5UkSdplu+dVyZMSuYe6cwXvec97prEUjzvuuGW+
6Zvf/Ob0Pbmg5DaSZ+hn7nSuL0GO5DOf+cziPOc5z/TzeM/0XD5ps3qHvl95
zBMmXzXm2JIjmculXeMa11i84hWv2PA+ppnXPOlJT5ryYvn7uvUYvZ5SA5yg
/eS2XvCCFyyufe1rT7/rXDPTmbunneXNM4M6ul6Qr52TIshN9lgAPT/WZ/eB
ra5nYR/s7cZ4bFmH2da3v/3tF1/4whemn3n93e9+98UjHvGIKT+3t/efBOu8
8+C5P5J9JtuO6WfMhq4t7W2bXGD6VJ7FlGUZn0+VvCXf93ZPHjTt7n1zrm/3
tRPmTR8bxw/JmBZ5fX8dc5S8t/O9XbvKdMihzt3zT1z3uted8qWZV/K4PY+M
yTFe0yHmng/X0+lpbfX+IUknVwnrVSVJkra37Z5X5fkzuSeWyPPkyV2Q43vM
Yx6z4fVdS8brPv7xjy8uf/nLT7nSm970pouPfvSjy7+z/sjbkPfiOS/Xuc51
pnwXr0/ugvwE77nsZS+7OPe5z724ylWusvjiF7+42/uPO5K7+drXvrY47LDD
prpF5sX9vbknmZzL8ccfv7j1rW89Pa/mfOc735R3ITo3Q3tveMMbTnmxPFu+
28E6efjDH744/PDDp5/XGb8z+ajkZli2O9/5ztNzey5ykYss7nnPey7b8MIX
vnBx3/ved/Gud71rWke8Jjm4rG/iqU996rSuLn7xiy9ud7vbTe3gb+SRyDf9
+Mc/XlzrWteanj12rnOda5pm1/dxDsP4rcmDHXnkkYv73//+03lO2tnbeasj
fZLlpB6VSD5wLufJWBOXutSl1pr2Vvefvhf/Ax/4wLINPCeKHCx5vz7/7Lxv
vmcevIa6n8c+9rFTvwC1s9/5znc25DDpC1/96lenebGOGJvgGc94xnI8UfrP
c57znMXFLnaxaZ++2c1utvjhD3+4YV0lv8gypgY0wTypa6ePXfrSl572a6b1
yU9+cpmLZJwEji2sy1vc4haLd77zncv3c7yl7z360Y+e+jjjK3DMSPsyz8Tc
ONAPfvCDF3e9612nbcjzrVgXXCPKNmL+tIt2kge/xz3usdx/EnxPfp5tzTGJ
sQJYNva9rCfrVQ3DMP744HhMmFeVJEna3rZ7XrU/z3YOiHwPY69+6lOf2lAT
2eN5koviOd7kVnnvBz/4wSlPy3iTyX2QtyD3Rx4P5BQvetGLLnMzxxxzzJQ7
4V5u5kNtLHmYX/ziF9PfU5e4CkGukmfEv/SlL51yS+ReHvWoRy3vWf7JT34y
5Wje/va3Tz8zjuwlL3nJKbdEdD6F+/Df+ta3nuQ+f/I35G64j/sud7nLhlrE
zdpHsD5+9KMfTeNvco8y/Yqa0ac85SmLn//859N6ff7znz/l9MgLsfyMF3rB
C15wWq4E+c+b3OQm07KxnEyLHBF9lfje97435ZLe8IY3TL9jndPmfm4Y2/zb
3/729P1RRx01rQu2Z9/3TKQGcSvR7zqP1v01+cLxGUtPf/rTF/e73/3Wav9W
958Ey8n4GO94xzuWeWS2Le3pmtLUnxJMr6dz9NFHT32I9rKtn/e85039qdff
bW5zmylXf8UrXnHxgx/8YLqm8uUvf3n59/vc5z7T+K9Mg3aQgzz/+c+/nGfm
17ne/Mx6oN9+/etfn7YT+dif/vSn0/rK2M3UFXPM+PSnPz29/i1vecviHOc4
xzTeb44/9O+b3/zm0zKQTyX3eq973WvD+BYZ2zTHpbSHv3F9h3wouVzmwfag
PWkD25V9jv2LHDjbkuhxi8l/c9zie/ZTpketPftJtgfbdKv3D0k6uUqYV5Uk
SdredlJelc+5/Uxu/kZeJPfxkp9JjRZ5UfIX5J+I5OQe9KAHTfkI4rOf/ew0
blaeUUV87GMfm56blPeQQ33d6143/ZzcCDkxxhrtWsDdBTmYe9/73if5fXKE
5HKpXSPyDB/mSf6o80MsG/cQMz5mf+7vurTHP/7xizve8Y67bQ/T7HOG5MLI
Dz3kIQ/Z8Jp+ntVLXvKSaZ12m1ifec/PfvazaZuQF+p1Q16aukSCnB3rIvOf
G3MzOa9nPvOZU03hWHPI/PfGWjyW+a//+q83PLuJ6HprajHJ07E+Vj3XaYyt
7D9pI18vcIELTDnh5NkTuVe9t2Vye+Ozp/IzOXz2P9YXufa0g/pTrnVkvIee
Jv2LvD85+O4P7MPkILvPJZfcz6fL76jRpo9x/CSyjuhn1Kw/+clPXk6Hus9n
PetZU76XaXAdhzrrHsOU7Uu7uI6TvO44fnMvx/Wvf/0pv5z1z7Jc73rXm9Zt
fk5QK5u8ao5hzPOa17zmNBZ0lpk65Be/+MXL9+3J+L2GYRjGSSPHaPOqkiRJ
29t2z6tmfFVyH5034WfqHnP/bPIWnYuhvu4jH/nIhr9Tf0aegrzQ61//+uke
XIJpsz6pac092vyO+XN/Lfe9U+tHXRg6h7G7II/EPe+0s3MdzIug9pD6vIMO
OmjK517talebcom0kXwZ0eNacm8+dYi5f7+fV0S+6YlPfOLicY973HLszuTZ
VkXqbglqT1/5ylduaF8/Q4fxVck7ZTxMfkeOmXu3ia985SvTNrnc5S433cNM
W8lLX+EKV5jqAAmWkXXczwxKXo51xfJwDsOyMx1qh8nT5vyGMQT21liVV83P
5CNZF9yjv9kznBJb3X+IPG+J/CH1okyDe89f9rKXLWssWdZMi/xkP7csOUim
w3UOcru3vOUtp7w5dbhcy0gbyOmSx+xIPSs1pPQN8prkXmkHtarUQ1NXnuei
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
D6VvZh0T47WDtLfzt8x/3fEkmF7aSI61t1u2ddZRljHv4ZldtL/zxWk77101
nkiPx9rLwLQ43jPmao5jWXbqiI866qjl+t8brz0YhmGcXMK8qiRJ0s6w3fOq
+TzbdaR8P9bBJUfRNWdE5yYyZmTyDsndjDWbyTP1vb95dlNizHPtLvrZTV37
ljEte3zEROfNxnEr+3W8d/w7/aLny3KMtbWdV+vauETnztK+rKeurUtup/Pe
nRPL69LOXqaO/pl2ZBt1PSUxjlW5N8VcXjXfd26P3NiejIO5lf0n887z6Yks
U+dTU6fa7c3PvaxdK8rv8zPrZ6yNHeuTc41jXL6e/pjDTxvHutWOjL/MMmTZ
k5vtsWPH/T/R6zPXXcZrEGPNdb8nfxv307x23HfJo/IsLcYHYDwIxkVgHOmM
SzteczIMwzD2PMyrSpIk7QzbPa/K8+W7LrGf39JjR0pbIZG8HeNWJFeYe/Wl
PxeuAY3jHyS2um2SNre72Oq27XQE/895luZ2DPOqkiRJu2z3vGrXCXS9mOMH
GntDjHWB27Wuxdg7g3wqx8Iez4OvXdtrGIZh7HnketV2/b9uXlWSJGmXnZJX
5V7ffMbNmJ2OH2hsddAvk8+idjD9dXyOl2H8uSO51Ixh4FgAhnHyjFwbMbY2
MqaNeVVJkqTtbbvnVffff/8pT8C9rtZfGXtj9DijBxxwwPR9j0dqGH+JWOe+
YsMwDGO9yPHUvKokSdL2tt3zqv15ltxqclX9TG1pq4x1qfTXPFMpz1qT/lyo
lyaHD37uWlX7n7R3Y3/t7/McwtSrbnX7djq2Af/PzatKkiRtbzshr3rKU55y
+nqBC1xg+tq/4/nr0lY585nPvOyTcdrTnnb6ut9++215+7S98Zw0vu6zzz7T
MZGv/HyKU5zC46O0l2M/5Sv7bfZd9mm+33fffbe8fTsdx9ADDzzQvKokSdI2
txPyqgnGr0zkuVVdmyX9pbEP9r3XpzrVqZY/b3XbtP2Nz6/md6mBy1gUkvZO
7KP9vDnGlGH8eL5uddu061j6X//1X+ZVJUmStrntnlelnoPPtzn34DyEz7kE
4wIYxlYHOaxEzr/yjHbD+EuF46saxskr+GzTwWebP/zhD9M4R/7/2DuC/+Wn
PvWpt7oZf5YwrypJkrTLds+rdp3Af/7nf07jCeb7b37zm4svfOELi29/+9uL
n/zkJ4uvfe1r089f+cpXpteMY19SBzIXmWbytUTqYfNMovH9eU//7ktf+tLi
Pe95z+L444/fMP3UPvTP/X3ycj0u5/Wud73Fm970pg3zImfCuVZ+XjcyP/pK
opc1y8g6Hc/lMq/f/e53072J3Pd+mtOcZvHSl750Q5s5F7zqVa+6OPvZz744
3elOt7j97W+/R23redEG+vbYPtbTi170osXtbne7ZTuZ75hL4ndjsJ2ynple
vyfTypi9/J17MVnmjm7TL3/5y9ll4d7BzId5/P73v5/2z4ydl/jBD36w+MUv
frHsP1mPmX/ysmlT9+X8bp3IurvDHe6weN7znjd9n76d6P7U1ypoW9ZNfj/m
i9OP/v3f/325Dvpnotdbope3p5Vloy+m7bQvtepj29fpP/19L1+mNeYjaUdv
r3/6p39aXPCCF5y+Z3uO7+/1MS5X2pSx+oixXxG9vlj2jm4b02C90A7uTwX7
2xvf+MYN64JluPa1rz09R42/3+1ud5t+3/sG7e51kPZ2X8v2zd/TX3lvlruv
dXGMSTt6Orz/IQ95yOIiF7nIhmnkNd0HM6+shxve8IaLF7zgBbPrptvXx+Js
5/EaXO9T47GO16Z/Z730NROijx15/1xf7nZmGq95zWsWN7jBDTass0yj/8/k
7x393MbUNI6vTZ0y0TV3+Tlfs3wPfvCDFxe60IWWy5429LbO+/K33if5vtvN
75g2+wv/t89xjnNMY1P86le/mv7e+2H2594W4zEybU1dZy/vNa5xjcVZznKW
xelPf/rFXe961w3T6rYQd77znReXu9zllq9hWVMb2ttu/D+Q1+U13Rfyf7v3
g7Hdvd/254n0ddZB5sXfjzrqqGmZaCv79de//vXFZpF5ZL8eP/OMyzZ+Fsnv
05/Gvp33dPvR64Lvd/eZpI85OX6N0durjw99XMzvmV++/9jHPra4zGUus+E1
2efZbplXjrlz+2Vi7pqUz62SJEnaGbZ7XpX8Fp/p+dyd8wE+N7/qVa9aXOlK
V5rOr85znvNMn3v5+WpXu9rioQ996Ia817/+679umCbT6c/uY3QOhOCz9fWv
f/3lvMfP4z/96U8XF7vYxabP95w3k8vIuV7ORzqPmXOpPidKvoa/8XuW44Mf
/ODyHGY8F+GcbJ3atDEHx89jbqLbmWkTWTeZD/2N9UKe4y1vectJzrVznvi0
pz1tcfe7333TtvV7e31n2+T8lMi5LbmJq1/96tP3c/mfPr9j2uQjxvPtzr/1
tPmabUt/Ik8+9gVi3P6Jubzqz372s2lav/nNb6bfcZ5IW+kfj3/846ffJedD
H8i5fEfa33nxdesSs11vc5vbTOftOcdNToCgP3RujMh2mcsjEqxD3jdeq+j9
dAzW79gf09dy/sy1Evalc57znIsznelMUz/67W9/u3x92py2btZ/sq2Zdy/f
qnbNtZ3rG+Sfep2PfWCsne/9td/XeRRek31qfF/uA+bvxHitIPlPtgHHQI6H
ieQQWF6W7clPfvLiAQ94wPJ9GS8gwfe8p3OsfX9yB+3vbd7XgsYc+xgveclL
ptxq5t3HXq6N/c3f/M30fV8/Y5q3ve1tFy9/+cuX72FdJ6+XeWdaP/7xjzcs
F5HjxLiNWL704yw7+Vuui405Md7b/T/rqLdL+intzXx5Xbb5y172smlbEXPH
EJan10nm18e5XoYxp5ngek1Hzyv9ienQnnve854b9vFsw55ntievm8uJ9bEk
z/vJvDj2cQ0pMea/u+3JeXcer7cD78vv85nnsY997OLe97731N7eFmkny8Ny
3uc+91n8y7/8y0nankh/7+XrY1VvmzHnOB4z+jpN32fTfXMMlocxZLKu1r12
1rn2ww8/fMPfersS+b/f1w+JbI9x22Y79HHzlre85W7bNx5beprjMSx9ca4f
92vpq2l758Hplx/+8IcX5z3veac29ueauWur+Xv3tx5DZdXyEOZVJUmStrft
nlftz7Nz53TE2972timfyflB11t0rUl/zs55Qr7mnrvkIfI7IucIjEcwtiF5
Luo0yZMln8Hnds6h+jyw37eqxirB+QK1Zi9+8Ys3nMuTH+6apHVza+Su5mqq
6D99Pj4ue35mOfvc6tKXvvSUa0rbetxb4qlPfeqGmtLNgm2TdmSav/71r5fL
x/lhnnn+d3/3d4ub3exmy7Z17d/YjjFY13lf5jPmvbNNqBsiXz63rnP+PZ5b
zuVViUc84hGLu9zlLst5fetb35rq9ph+R28Lvme55/J8tHVVjnAuaOu1rnWt
qT+N59QdtHesC+2cTOc38/5s43Hdp40Z53PMz/a6621xj3vcY6o5z+9ucYtb
LO5///svX8v2G2v5Nus/J5544vS1833kYWhbn4vz+uS/szy87hvf+Mbi3Oc+
9zLXlP2+c/R9zj5XuzXWr42v4W9z1zuIHCOyzcd6V7bt+9///mUt3hjknpKz
TIzHwG4nkfwY7eo64s49ZV115Djbx+Kuyc41Ln6XdcB6Ja9KjT7HpLQj2+tW
t7rVtAxzdb4E75lb7rmcO9OlHckvJ7LdbnKTm0z3HIw5qJ5OcuLjeuP9LBfX
AlOjmaAPPuMZz5iub2SayZHSnq4nTPD3rE+WvWv0O7KPjsejXifZ/5LnzX6S
5UyNfE+v/z7ur11rOdemn//858v7p7/73e9uaE/We+c+u82Zf/+vI/qaTdbF
Ax/4wMXDHvawDeui/+9mfp2P5vscv3N9ov9XJdfe0T/ThhwL1hl7Y+7/YHKs
TIvt/+Uvf3m6npRprdqX5yKv434Srif3srOsYw3rXN6z612zrsbcP32Ia13M
I8dH/ieMtcSrrkPmf2/nt+eOE0T2p+6naVf/r/nqV786/a/u6OulHEPG/sY0
uwZ51XVAwryqJEnSzrCT8qoEn4Nzz2I+P3MPLOckub+x69S+853vLG5605tO
NQ3nP//5F6997Ws3nC9Q4/GBD3xg+fOHPvSh6b7BfJ7mXP/KV77y1A5yK9RK
kkellpQ4+uijp+e/sy2InBv0eTXnI495zGMWZz3rWaf76MmzdZ6Jbch8qYnb
f//9p79f/vKXX7aLabM8TIPzmvOd73yLJz3pSWuPL5vzCXIXhxxyyLQeuJf/
UY961PI8lq/cd8i64u/c9/zmN795wzkH53qcf1Fz9da3vnV2XrzmcY973LJe
d522jedVnCvRjote9KLT+qDOkqAt1B4xxsDrX//6xQUucIHFJS95ycUd73jH
Za4r55BPecpTpmWgdph7oKk9TbDuqYu8+c1vPm0T6p2f+MQnTrmAPo/qOudX
vOIV0zJlfczVm83lVZNDJNfywx/+cPr9oYceunj6058+fc925Rzvox/96FQT
TXupe/7sZz87/Z0+Tc0r67zzWCwP9/ZvFtlXqOEmJ/3oRz96ea/p85///A01
WK985SsXV7nKVaZ1ftnLXnZ6PcG56T/+4z9O+c3sV9lurNu0lXnRZy9+8YtP
fZQcFTnSbktH+m/fG9s5Jtbdscceu+E+z6yzXrbd9R/2N3Iv6R+8/pOf/OS0
f5Hbpg9w33LnBsh7k99lX6NunPpr9okO+t8lLnGJ6bjCuuI9nWvOtk/0Pc7J
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
8qoJ6hHJz/cz4pkObU0Ndd5LPpPtTJAPZj/o54iR9xj761xkXtwjTQ1nljV5
UPKDBNuNbco6Y18ij8XfyRVynOE91DKRh+G95CCoX+V8POen9Bv6Mq/h/Jz+
yrqm5i7Rz53u3Nn4zG+mz/vJFxL9zPNsgx4vYFX/6WdH83raQz6OII/E+mdd
8z6CfY78TreVfZj1kvnRN/iZfZR9G+P+leNEP0+9z9dZttwfnuB9yWOwP1IL
zDYm/809yKxbruEQfRwiH0luaxxnIME97nmOXMa77ec8cXxh2mxv8pHZnnN1
xT1eNNuIbc402d7sm4zTQZ6zn1uXeXFPL8esHDN6G/FelrGfR5bvGWOX2vp+
BhDrPDl8jlF9TYi/U+9K23gP+w/Hz65VpOaYmssxV0z/6PEM5qLztxlzOH2S
/YH+MR4b6EvUDbNPZ/3zGo4JGY+FukiONeT7+D/F9uB+Zr5y/YPt0veez42Z
zTajD5OjYpuSv891iUTazn7SueW0iWNUxoLo5/ixjPxMnpKcI/8P+ZnaU44X
/X+FoOaW91EvmWs3TJ9cJvk5lpNjDcc2+g/XM8iBc8yij3T/6HEOOsi7ZZ8Y
8985pnCtpPP5BOubPkE/yTi2TJ/2Jv9Lu1j/9Evez/8S/i/mGmjmkei8asYH
5lpa8oB5LeMFs83TDoLjP/9v2a9XPVtyLvJMp76nocegZp4ZXybtJ/fI9uP/
W+esmQ77BPvA+HvWLduT9ZD/lf3Mp+Qjx/FK+38W+yx9ro/lRPYd/m/wP6jH
G+F/R571xrP5aHuWm9dRU8tnvEwj43iwDHxlealdz1hCGYMkrx+vl2Sdjc8d
M68qSZK0vW33vOo6n2fJZ5BbGD8LU8eS85cen43o5/dQR8S5Dp/7qXVIvivB
eSH5sh7fLsE5a5733mNPZp7UunEOmUidLb/74he/OL2WcQE4f+gcJfkUzjF4
LWM5dg5ts/uoO3KOQ76U+yE7z9TLQU0YdW2J1Hr0vXy5j557pPu+YyJt53U8
t4p79dZ5rtb4HBLOLcmhJOc53lfJvb7cl92/p26ScQsJ7jVke/SYbImcS7Eu
WRd5XlnfG5j3kZvlfJrlYvrUe3Y+aG7Z5vKqqS0jyAORI+uxNgnyJqkLTR8i
F0ZdLdOgXpplSn0f7yU3uE5ePeeobH9qfTsfzTk0fYwgr0VNb5aR9/F8sNxD
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
l9mHWFb2I2oZqX9PkA8if0sdMTlAakFTD9zjzLLt6K/UbXH9h+1Nn0luhnwK
13lYHtYvy8P7yWEy3mHumeW4Rt6PHCfbe53gnn/y2Mmjsh9y/Wa8d4Dl5vhD
vrO3X/ZH9hNqtNke9EHWP7lA1h99qO+95j2MBZIxblnfubbGdmcfpPae36+7
/2R5Oc6Sb8lxh+XJ9S6OXb1exhpegr5Ifojtmb5Bf+T4QZ6O43rnRjkukVvN
eAL0G+6zYD3QDv5f0YbeZ3KNIvPtcZnZtsyXdcF9BbQj98l35H8j+c2Mb0nw
/4B+kLwq65C/s+5oI8tMnpf8I/sWfZP/JaxTcpRZDoJ9muMsr2U+9OGMtct6
5P8c2wD0Xeqze/zvdXKrbBvmTy6bvp1axawnthnXQ7knJP+vCb5n3871lFyP
ZV8kr5e8OX2SdoPjImML8bqxVn1VsN0Yk5r1x3Jy7CTP1zlmpsfnDq4H5hg0
jiu0KtIfaT81r7SRPseydY0364V1xP87+jX5bo7LbHf6LMePzj9y/Yn+R+T4
Tdv4zMG0Wedss5e85CUbru8yvd5u7Nf9TDT2Y/ok24p8KP8P+SyUfsM1Z47b
zJs2cqzOsZTpct2MedMGlpNl5LiWYF/g2Mz6pp6a9UHfHJ8DlnsGmBdjbHSw
PqxXlSRJ2ll2el41990mX9f3fPXz2PNM6kRe3/ULrM9Ezpv4jJ3zAnJH5Nr4
eTyvyv3LTC/zGc8L+cyfc/RxOQjyazmvyjlg162Q++H9OXdZ57wr6yivpX05
j+nnKnVb+Dvrgvnkb6lxybrlNeRl+r7CjINHcH7M+upz2TynudcZwbwy3mbW
NeuBbdTPcE5kGl2zl8jYoblnN88M7/nlnDV/T36i2zrWRRJZ1s4HdayqV+1+
le2ZaY/n17Sn+3mmlbwKtXb9HKR1Y+6+e5ZhvM+TbZw2dV1Wb4MsQ772NYjU
7bGf0EfmxkTse8nn9jmCdTFeJ8k8x3W/u/7DPpfl6BpJ9jXwt95Ps+xMh/fm
vtq5oH3U1/L+9J3xuTW9vHlPItuBdc4yZV3k97Ql24S2dP8cp8H7ec2qY0LW
NTmKLC+vzf3K5JL42tu519eqyOuZP8vb9zFnWbvd6ccZb7bvz00OlLxdr7Px
+VCZX0f292yvXB/ZbP9J3+370Hkt+yH1cum/vV35nnUz1uL3sYr1yf8D3t/P
2cn80mezLsb1xPd5bf4nMH3mO7dfJHL/N/sPuaS5vt052h7npafb275zYwTX
AMmvsQzc40FbqYkmF5zXE9lu9N/8T2R99PgT+V+UY3Yvx7rBMuS+iizLuK/k
f0Yf1/v5YAT9d3w2ZY75XO8YxwFadwzUBMuZ8TPSzt4+/b90T6KXje3GNslY
uD3+EeuUPpFtkeNT70sZ9yJ11nPHAKaX+1p6vJR16ncJ1iPHKvax9IXx8wzX
UWnf3BgMHBNBP+4xOMbrndl/s45zT0N+ZnvkszPrcGw/rzOvKkmStDPs9Lxq
B79LfVjeMz5faO75wkTOp/qcc+48L/VqPS5n56ISOd/I1z4/GceJTOQcgq+8
vp8L0bEn51+dy0wbOV+fG+dy7nk1GSetYzzf6TaO5+dE8qM9zfHcNtNj2j3+
Yp/30+4e9zGvWXUOnvMk5pX8eY+hmumM9432thrzEv3eMWe4Kq+aXH/u4x3H
Euzzw7Gmpn9OTWjass74tXltnk2e6O3e26bzbkTnTMc+nfYmB8q58lyuN/mT
MY8/zj9fc490gu3BsW6cdt+bvar/jPNjXff4DJ13SN3fmEdm3ixn971VOYSu
I00kT9HjKXTuNNPNMs/lojtY5kyvx5/MtuJrpsEydr1Yfjfuo72+9+T4Mh7D
Oi/Vz4TLtYwse/fdMXfd4+J2u/Lebnuuqc1dGxvbt2r/6f7f+36P48s6matT
7+teaXeOJfk6t757Wn2doo9DyafO1XfnuNVjE2fMmJ5uro11n+pnj4050H6e
YyLzT3+jxo/cd69z6uup5SR6e6RPJmeeefX/jHG8zVXXVOYi247tluUfx8HN
PPrZhN2vsnzd72lDamuz7D0mxLrRx9K+9tJjq/byZ5yW8RrkqsixvSN9uLfh
ePwcj43ML32v96GsL37Ha/O3cV8Y85p9XOb3HBd6/c7lk3uMhl7XzDProvfP
ro3tsY6zzXr9jZ8dx3U2HmfSdvOqkiRJO4N51f9fW9b3bs3ldzgHybNdUls0
9xm73zs+U4foex0T/bc+fxjbOZ7vJd+WMermztlybtrnxvxu3XrFfr7tWP/a
ryH6vD7P3O08R0c/VzfL2s9rH5c157urnvlEf07kmTarYsxNsp1SY5PnAI01
NH3ul+cC9/sJ2jC2u/MxPf+5ZRjzqmMOt2MuN9c1dETen3W6agyCVTE++yvr
pXMazGMul9bnpd3W5EW69qrXR/Jkczn5fkZTpp+xTonuA6tqL9Ofe13srv90
Xqqfk5L2dPRrWebktnr/6HxbcvK9fvJz50/yDKlE51n7d0Te188S6tqp8fVp
KzFe7+joPP1m792T3CrHvB67s+ezKrdB9LEofWUuhzhXo0zfGPtH56QyzXX2
n3FZWTfJ3/Q88sw/li9jYuT12T6rclxZjrF9nRvt+a/q+8kHj/cpj8uz6j71
znuPdYrjumFefS9IgmeCcT8799ZzLzfjbDDm9lhvPubPieyjnVfseffr555X
NRer1gU/z+Um565Xpu9mf+99IfeY9NjtvH7dsQC6bTn+9TpNTnxPanTHGNuS
aY3XqNLX+36YuT7U233VtIkeg2L8nzw3tnqujfR26f2787t9nXls23g9uOuT
+/9A36PS7+N71kXu/+kYxxsmzKtKkiRtbzs9rzo+36HzSKkFIU/VdRlj7jLn
HplWzu2TOyJSq9jjhPbzdubybDlX4m/99+RPO4/Sbep74ubqauZyD6tivI+v
c6xE167mXGfufHasARxzhmMNY6Lz0uO4CKk/Hev1UteW6Pf1c5eIuTz0eJ44
d09xzvmZXpa76xjHaedcj/1tT8ZXzTyzzVKP1c/KIdiXux+M00h0zeye5L7m
chd9Hpx9pesyifFawNw8s33yvJcsc+fZWP6uP050zWCuV2Tb5J7NXgepz+z8
+O76T752/mBsQ+qpOvrcOss81tWyzTrGe0m7npaYO0bMHY86bzFX2zv25857
5HjX7x/HeCX6NURqqlkX69z/n1iVKx1/n3WVayudUyd6mfLcmvFZOCxr2p3p
Z9uM/TK14ZvtP71+5/IpRI4Rc/t9P5cq00gNd9eFjnWw/azyROeaul9km4zb
vtvIMpFbmjs2ph5+7pja1yO6DjvrIuunx+vl+/zc46F2TXK3of9f9XFvbn3m
usVczemqSE6t6297GbN+UrvbNaudHx33NY71/SysxHis2F30+B7jPsi64m/j
7/uYtln0MTXzSe6/Y/z8kdd1pI92fXLXvff/sfFYNjce7FiPzPzG+3bm/n/3
9dDkudOurrkf25+xDwjWSS9HYu6YkOnN3QNiXlWSJGln2Ol5VYLP2l0vNebH
xrxmppXzkbnnyhCdXyXGe9ATYx6uxw3smPs98+jx/vrvqXnr8dESc/Vam0Wf
f5Kf6Lq7vi850XnWtGG8b7RzOl3bSrv7/LPr9vr+yix3R+abr6vOeebqfzOv
Xj/j+KsY8z95bdZRcnd9ft/9b64Oai6vOtZVjq/vyPt6XNvkwTv/3e3dLObO
f/u55tkO41gORF6XuuW8LrmJvGfu/LzbN5d761pMovOfGbtyjFXnvJv1n+4j
4/3Xq+7pTf9J+zIux1xONuMK93WW3rf6tXPjAKbue+7aS5ZzvP+d6H6dY1zn
uca6ruRxOjo/sc54KWN07V3XjM1dF8qy5H3ja7vPdDvn9vFxur3u+7rFOvtP
50Az7azzsVZv1XgJrIMxjzOu/7xn7K+0pecz/g/oyN/Gbd/Realx/OtcP8n1
qc6bjvPsa1Bj7p7o2u28Z6xrH6eZ9479MPv8H1OzOTc+SZY366anu+q4QbAe
ehn6Wky/frwusVnkfpe58cW7LeMxeLPo149jCqSPMw56t6Pz+uP/qjHnOteO
jGeb143j1fRzveby43PXrMbPBN0GosfA7WBe41hPY7vHY2ePl7Eqd9//Iwnz
qpIkSdubedX/X0vZuZ9Efw6fexZ950FSvzLmRLomqWvQujan55NznDFn1zGO
N9q5zfFZKZ177dzluuO8jffcdRt6rNTxXCLzGJdjzIV1HW/nQsf10ZHzuD53
n9s+Y63quAz9+j537jrMtHU8b8s51VyuO23s52p0rc3cNl1Vrzrecz6Oc9nn
/3PPwO4607Eecp0YzznHOsCsz2zruXU+LvOq5R/rC8fz2V6W7lvjvPh756DG
sT3G/P6q/tOvz++6fq6Xfe7nbk+WgVj1PKu5cRFyPWXu3uO5XHHXlOe949gk
4/ofc0S9LnqM1V7GuXxE1/vvbhyOVdHjHI51xt3O3gf6ONvjJYy12+Mz34gx
L5K65L6esbv9p48luSd/PE7keWi9HTPdufx/xpnp+fRxJG2ZuzaWbd3XL4i+
/7zXSa/jcTv3e8caUiLz7r6SfFjyhuN+sCqfmDENMr3xf/H4/3ZcL2P/XbcW
f27M065bHZc10ddIx+2VY9Pu7lvIMm8Wc/0ptdSZV+e3+3/Pnoz50v2hxynq
MXz6GNifI/r/2twxtPvYquUfxzbo3xM51mRa4/g8ic7X9t/6eN5j3o7R9a28
t9s0Psus9/3xOtL4Gcy8qiRJ0va23fOq+Tzb9+kTezK2mWH8uWLMB9BfkwP5
34yXZxiGYRjG1kX+v3N9fzuGeVVJkqRdtnte9cADD9xwb2ueN8WyE7mvTdoK
ie9+97vTz+c85zmnn3scSEmSdPJCMJ7R6U9/+r/UR96/aJhXlSRJ2mW751Wp
/zvd6U43fd1nn32mr3zG3X///afvue9a2irpkwcccMDy+3333Xex33772T8l
STqZ4n841/YdB0CSJGl72+55VaLHAhvH9MrYlNJW6D45PpMnz2KXJEknL9s9
zKtKkiTtshPyqoZhGIZhGIZh/GnCvKokSdIu5lUNwzAMwzAMw1g3zKtKkiTt
Yl7VMAzDMAzDMIx1w7yqJEnSLuZVDcMwDMMwDMNYN8yrSpIk7WJe1TAMwzAM
wzCMdcO8qiRJ0i7mVQ3DMAzDMAzDWDfMq0qSJO1iXtUwDMMwDMMwjHXDvKok
SdIu5lUNwzAMwzAMw1g3zKtKkiTtYl7VMAzDMAzDMIx1w7yqJEnSLuZVDcMw
DMMwDMNYN8yrSpIk7WJe1TAMwzAMwzCMdcO8qiRJ0i7mVQ3DMAzDMAzDWDfM
q0qSJO3CZ6Kf//zni//+7//e6o9ohmEYhmEYhmHsxfE///M/i5/97GfmVSVJ
kv7Prrzqr3/968V//Md/bPXHNMMwDMMwDMMw9uLgnOHEE080rypJkvT//Nu/
/dvid7/73XQ/j7lVwzAMwzAMwzDGoE71D3/4w3SfG+cOnENs9XmMJEnS3oDr
zXw+om6V/KokSZIkBff+/+pXv1r89re/nc4bfv/732/5OYwkSdLegM9F5FZ/
85vfTLlV7u2RJEmSJHCOwLmCOVVJkqR53M9DflWSJEmSGucK5lQlSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIk/d/27jxaq+q8A3AdkrisMSKKUdHgUDUqgsV5wImK
OGIdUXFWHBFHnHGeMKI4gKIgKuiqidamalurrbE20cToMl1NogKChhoFZVYw
q299T7LvOnzee7k0yDXm+eNZ33f2d84+e+8L//zWe/YBAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAgKWlX79+AAAAAAAshh49egAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtEnPLbtH
/003ih+u9c147tsrxusdl4tHOq8Sw7t0ij7durb7+AAAAAAAvkwyU3248yrx
Voe/iAkN3vqD4eut0e7jBAAAAAD4MshMdXwLmWpjvjq+c4d2Hy8AAAAAwNI0
YJMN4u/XWjleXW35eGPVZeI/On0jXvzMojLVerZ6zkZd2n0eAAAAAABftJ23
7B73fGe1Kkt9q5ln/OvZ6Ts7do3f9N6hxWz1tdWWb/f5AAAAAAB80R5fe+V4
s8Myzeakk7p8a6HjWQ/fH3Mee6TVc87+M6pZPfTQQxerfWk6/fTTK/W2/fff
Py666KIvxfjSiSeeGGefffZS+7sAAAAAwJJwyYbrtPqc/4y7b4uZY0bE/xzc
O947pE/MGHlbzBp/f7x3zMExde+eMWvc6Jg5dtRC1/x61WXiR51WiGH/j3dZ
7bXXXnHaaadVWVtmbnnc3mvUmnPOOWex2tsi559zL8dHHXXU547znEX1c8MN
N8SVV1650No++OCDcd5558Vhhx22VNdphx12aMpQc/yl/eKLL45bb711id8v
59ne/zYAAAAA+OrKPVRb2zN1xvCh8bup78bMUXfGp+9OiSk9Nox3d+sRn06e
VOWr/ztzRnx4/ZBm91rNfQV+uvrXFms8BxxwQBx++OGxzTbbxE477VTVHV54
4YXtvk4tOffccxerva193nfffU3Hd95550LHV1xxRVxyySWL7OfGG2+Mq666
quk4c83x48dXa7v11lsvtTXKGtlRo0ZV88icNzPPkgvnPG677bYlfs+cZ3v/
2wAAAADgqyn3VV3UO6l+O6B/TB8yOOa//mrM/sHDMe/fn4nZ3x8XH//kxZj/
2isxa8zI+GDQgFbfZXXxhuu2eUyZq9ZrKTP/q2eDvXv3jhNOOCEOOeSQprbM
7bbffvum43o9ZKqfW66vn5NteX225fdsy+O8Ls/dbbfdFuov71faW8tV632U
8eVnfaypsf/MlTMXLOeOGzcuxowZU903f7/rrrvizDPPbDo/z8l7ZFZZ76ue
q+a8rr/++rj//vur80rf5Zrsu6xJtpc5lvUo65rt9fmX9aivcV32dcstt8TV
V18dPXv2jG233Tb23HPPKjPP35vLVUv/qd6eYy3jyXvX51vmcvnll1fX5zzb
+/8XAAAAAF9NB3bdtNks9Dd7bh8fDb06Zj0wqspSZz88NuY++0/x/qnHxNxn
noz5P3spfntK//j4Zz+JWePGxLwfvxCzH3s4pl99SUzefJ3P9Te+c4c2j6kx
V00lG8y8LGsuM5Pr27dvDB48uGrP8+uZ4HXXXdeUv+Vn2WM0s7+8vlevXtU1
p556atWebYMGDYq99947dtxxx6otj0866aTqXvnsesnvjjzyyKYx5Gc+a9/c
PDJXzTrbPn36VPWhmfdlez4Pn33Xz23cX3SPPfaoctWSVw4fPjxuuumm6n4l
Z83stczvnnvuqWpB09ixY5syznqumnsA5PP22W8+e5/zSVk7eu2118btt98e
Z5xxRnVu5pNZX5o5bPZXxpvrmuelBx54oPot51WOyxzr8r453oEDBza1bbXV
Vk3fG3PVzFLLvbPPu+++uxpnzjvH2r9//6Z/C3lc9onIMd57773VfHM86lUB
AAAA+KL87ebfbf5dVet3jLnPPBUfnHNKTFxrxZjzxKMx74XnYmKnr8W0c0+P
aeefUX2f//OfxszRI2NS55Viat9eMe/f/iUmb/Gdz/V3R5dObR5T5qqZg9Zr
Fo844ojqt3zfUqlzzDrW3Cc0M7dsK/uZZqa47777Nj1nnjncPvvsU30fMmRI
lXFmrpfXlxzx5JNPjgMPPLAp78s+sh40z83jnXfeuSlbzPuU9vw8//zzm51H
5qpZm1n6zDmUbLZea5q5aL9+/Ra6NrPXzAUzR821uPTSS6v75PP/uS75W2av
ZU6ZS+6yyy5V9jhy5Mgql8zf6rlqjuOss86q6jjLuHbfffeqrzwnr6/Pd9dd
d63qSq+55pqmPQiyv3Kv/D2vzbHlca5PntdYi5vrn+eVv0Gjxlw1s9G853bb
bdd0j8yny5ocffTRTf9O8jhz1bxn3vuCCy6orstjuSoAAAAAX4QjNts4nlpz
peaf3191mZiy3XdrNapPxYJf/iLmPP1EzP6H71f7qs5+4tHP2v4r5jz5eEy/
9LzfZ6qbrR0TOi77uf5+vtry0bfrpm0aV+ZlmXPmZ9aP1vcCbdxTNPPIUqda
nsfPOtTMDLMmM48zlyzZZuaHWW9aZK6aWWfeLzPG0m/WqWZb/dzsP88dMGDA
QmNo6/6qWbdanmvP3DL7zO+l9rXx+qxRzfHlfqTHHntsNdfMDjOnzOy0zCn3
BLjsssuarstssewh0Li/avaX+wmU45Krlty6yFx56NChlVLjmu3ZXz7Pn99L
zlnWo+xd0LinQf49Skbc3DrVc9WSh9bXONdh2LBhreaqmU3n93o+LVcFAAAA
YEnLjPPl1b8eb3ZYpuW9VTsuG7MeeSA++t518fF//ije2WHzmLTuN+OTl1+M
Bb/+ZUzerHNM7rpu9duHN10Vc374gyqPbWmP1Zc+u19bstXy3qrMUuvPi6fG
Z+4z/yx7BhxzzDFVplee+c+a0MzpMh8t52dtZea0RanbbMxV8/4l0y2yDjKz
vawZrY+hrblq5orl2f2Udab5WWpmG5X61MxNc9+CzF4zK8ya3ZJtptwfoP5O
q8xhM4vM723NVRv3Xcjn6PP+Od/cK6Geq5b+Ss5Z1rfkp/V1TGXcuYdAaavv
MdtYr5r1tCUTT6NHj65y43K//Jtne77PrOSquXdDfi9/+yRXBQAAAGBJe3Tt
by3yfVXTLhwUn7z+anzyykvVHgDvn3Zs1fbRsOurvVenXXBGVcv68Y9fiE9e
ejE+fvH5mHb+6a2+v+rJNVda5Nia21+1OO644xZ6r1Tmb6XWM2tAc7/VUrOY
70jK597rWWbu8Vl/D1M+Z56fjblq9ln2bi33ys/MYDObrb+DKnPM5saauep+
++3X7FjLXI4//vjP7QFQZM1m7h+aOWjeN+Veo/mcfH3vgYMPPrhp/9KUGWvZ
NzbPqz+b39ZcdcSIEdX+pqecckq1p8Afk6vmuLNO96GHHqpqabPPzIJLNpx7
OWR2WtYq1z3nnXPJtc7xHnTQQVU/mRdn5pu/3XzzzU25av6We8Tmfq/5W45T
rgoAAADAkpQ1o2+0UFdavLPdplVOuuCNX8Xsv3soZo4eEZ9OeDN+997UmLLN
JjFl641jwVtvxKeT3oqZo+6ImSNujQW/+u+Y9/yz1bUt9Zv37d2ta6vjy+fl
W8pVs740M7rM5lLu/1lqWvMzM86y72geZy1kOU5Zc5rXZ6aZ15dn8TN7reeB
eW3uGZrnlPyzZLD19rw+P5sba+alWVPZ3FhT5sBZw1n2NG2U+5Fmjlh/F1Tu
GZtt9Sw263rzHV4518xC85xcp/wt95nNZ/nLe6yypjePy7WZjWZ/jeud2Xbm
npnDZt+l/jVz2pLplmvLc/nlvMZctfzdyhizBjfz1bKeuS45x/I+qvwbZd1p
ziUz3FzDsg9E7i2b5+bfOb/n/cp7q7K/3Ic1f8tcudQDAwAAAMCSMGij9VrN
VNPE1ZePSeuvGm9v0DFmjrk7pg0eGFP+eoOY9/y/xtx//seYNW50lbm+veHq
MWP40Jg+5IJ4Z+fuMWm9VatrW+v7yM02bnV8maG1lDWmzN2Kxn0CMuurt2Wd
ZuM59etL/ljeZVU/L4+bu1e9Pa8vfTSq7x/Q0lhLXWlL65DPt9ffA5X9ZFvj
+uS5eV7+luc09lHOz7HmcX2OLfWX48u+Sh9lPeu1u9leX8M8bpxn4xiz3/rf
JT/zuL6OZZ55bn1s9T7KuErmWvop4258fxYAAAAA/DFO3WSDReaqC+0HMHhg
fDDwpJh64N/E/NdeiRl33BIf3XJdlau+22ubeP/k/vHhtZfFhNWWa1N/+2yx
ebuvQXvLzC9rWHOvgvYeCwAAAACwaLt377ZYuer0Ky6Muc88GTPu+F7MeeyR
ytxnn465Tz4es8beU+2vOv3Ki9rU1y86Lhe7bNmt3degPWWmmnsH5DP6LdV2
AgAAAABfLlt95rG1V25zrvrekQfE5C3Xj0ldVonJ3brEgrcnxPxXXo53dtoi
Jq3XId7+q04xte8ebeprWJc1qvu39xq06/r/YR+B8vw6AAAAAPCnoU+3zePl
1b/epix04porxISOy/7++LPPDwYNqPYFqD/3P3GNbyyyn6fX/MvYcxHvrAIA
AAAA+LLKmtFe3beIcet0qJ7NX5x9ASautWKlrec/v8YKceN6a8a+W2z+Z1+r
CgAAAAD86btv3Y7x+mLmqovruW+vGJdvuE703LJ7u88XAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAACAHvF/nvGKfw==
     "], {{0, 728}, {1366, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{349., Automatic},
   ImageSizeRaw->{1366, 728},
   PlotRange->{{0, 1366}, {0, 728}}]],
  ShowCellBracket->True,
  CellMargins->{{65, 20}, {10, 10}},
  CellChangeTimes->{{3.7387205132977057`*^9, 3.7387205369163227`*^9}, {
   3.738720567351904*^9, 3.738720567939702*^9}, {3.738720735157468*^9, 
   3.738720735688446*^9}, {3.740240963818084*^9, 3.740241115490599*^9}},
  ExpressionUUID->"7921ddd8-66fc-4bf6-b1df-f560ff1ea21e"]
}], "Text",
 CellChangeTimes->{{3.7402423071928844`*^9, 
  3.7402423473121395`*^9}},ExpressionUUID->"f5f89bf7-8146-477f-a6ba-\
44edf452363d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Future Directions", "Subsubsection",
 CellChangeTimes->{{3.7361822218287*^9, 
  3.7361822234759083`*^9}},ExpressionUUID->"9afe7952-52cb-49e5-812a-\
edf95df8c363"],

Cell[CellGroupData[{

Cell["\<\
Implement future specifications required by the author\[CloseCurlyQuote]s \
guidelines.\
\>", "Item",
 CellChangeTimes->{{3.7402313400148563`*^9, 3.7402313603440495`*^9}, {
  3.7402314107541428`*^9, 3.7402314144333*^9}, {3.7402314511562414`*^9, 
  3.74023145154592*^9}},ExpressionUUID->"9cb80bec-f85f-4351-9098-\
551d504bc820"],

Cell["\<\
Automatic check of references as Crossed Check References \
http://www.ithenticate.com/.\
\>", "Item",
 CellChangeTimes->{{3.7402313400148563`*^9, 3.7402313603440495`*^9}, {
  3.7402314107541428`*^9, 3.7402314144333*^9}, {3.7402314511562414`*^9, 
  3.7402314531482444`*^9}},ExpressionUUID->"c06084de-802c-4ad3-935f-\
51dce32b3b0b"],

Cell["\<\
Automatic check of data repository, https://datarepository.wolframcloud.com/\
\>", "Item",
 CellChangeTimes->{{3.7402313400148563`*^9, 3.7402313603440495`*^9}, {
  3.7402314107541428`*^9, 3.7402314144333*^9}, {3.7402314511562414`*^9, 
  3.740231454663168*^9}},ExpressionUUID->"6630d8dc-e2a9-43f4-b81b-\
29a242a14a06"],

Cell["Automatic check of software repository, es. GitHub.", "Item",
 CellChangeTimes->{{3.7402313400148563`*^9, 3.7402313603440495`*^9}, {
  3.7402314107541428`*^9, 3.7402314144333*^9}, {3.7402314511562414`*^9, 
  3.7402314563609285`*^9}},ExpressionUUID->"a253cb2d-dba8-432a-9f88-\
9bcc31a6abbe"],

Cell["Integration of keywords and reviewers database.", "Item",
 CellChangeTimes->{{3.7402313400148563`*^9, 3.7402313603440495`*^9}, {
  3.7402314107541428`*^9, 3.7402314144333*^9}, {3.7402314511562414`*^9, 
  3.7402314560002823`*^9}, {3.7402352778724403`*^9, 3.740235279371395*^9}, {
  3.7402353656051016`*^9, 
  3.740235388334118*^9}},ExpressionUUID->"cf7e82f5-dc3b-4b36-b03c-\
20237d2d4d6a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["References", "Subsubsection",
 CellChangeTimes->{3.736182238022826*^9, 
  3.740242190392725*^9},ExpressionUUID->"19b709dc-5a9b-4a0e-8d93-\
1058844be4dd"],

Cell["\<\
http : // blog.stephenwolfram.com/2017/11/what - is - a - computational - \
essay/\
\>", "Item",
 CellChangeTimes->{{3.7402316334232607`*^9, 3.7402316482450104`*^9}, {
  3.7402352878548393`*^9, 
  3.7402352888454423`*^9}},ExpressionUUID->"31a318cb-8fe1-4c87-9025-\
00c004d1cd32"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Keywords", "Subsubsection",
 CellChangeTimes->{
  3.73618224410275*^9},ExpressionUUID->"6668b03b-4180-4966-b673-b20f85cb5927"],

Cell[CellGroupData[{

Cell["Notebook Feedback Report", "Item",
 CellChangeTimes->{{3.708096350583043*^9, 3.7080963544862823`*^9}, {
  3.708113540381196*^9, 3.708113546129714*^9}, {3.740235064697647*^9, 
  3.740235086021355*^9}},ExpressionUUID->"a0f68604-8bfc-4c6d-afb6-\
b6a38b6de7d0"],

Cell["Notebook Testing framework", "Item",
 CellChangeTimes->{{3.708096350583043*^9, 3.7080963563232718`*^9}, {
  3.7402350901996765`*^9, 3.740235101932708*^9}, {3.740242392811899*^9, 
  3.7402423943960705`*^9}},ExpressionUUID->"d4791c55-e7db-46a0-8162-\
0eebcfa1df4d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Other information", "Subsubsection",
 CellChangeTimes->{{3.7361822750600033`*^9, 
  3.7361822822022877`*^9}},ExpressionUUID->"5f589531-3a9b-47cd-a487-\
fcf2f80aa83f"],

Cell[CellGroupData[{

Cell["Publishing notebook ", "Item",
 CellChangeTimes->{{3.740235105280573*^9, 3.7402351394765463`*^9}, {
  3.7402352641050825`*^9, 
  3.740235264106085*^9}},ExpressionUUID->"4cd46233-c6f4-4c87-9a52-\
2c25b8daafac"],

Cell["Authoring notebook", "Item",
 CellChangeTimes->{{3.740235105280573*^9, 3.7402351394765463`*^9}, {
  3.7402352651297894`*^9, 
  3.7402352695645466`*^9}},ExpressionUUID->"12997aaf-8cd2-454d-ae9b-\
80f79ec8b80f"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
NotebookEventActions:>{
 "WindowClose" :> 
  Module[{$CellContext`dy, $CellContext`hr, $CellContext`mn}, \
{$CellContext`dy, $CellContext`hr, $CellContext`mn} = Map[(LinkWrite[
         First[$FrontEnd], 
         FrontEnd`Value[#]]; LinkRead[
         First[$FrontEnd]])& , {"DateLong", "Hour", "Minute"}]; 
    NotebookLocate["LastModified"]; NotebookWrite[
      InputNotebook[], 
      Cell[
       TextData[{
        "Last modified on: ", $CellContext`dy, " at ", $CellContext`hr, 
         ":", $CellContext`mn}], "TemplateInstructions", CellTags -> 
       "LastModified", Deployed -> True, Background -> 
       Lighter[Gray, 0.5]]]]},
WindowSize->{812, 709},
WindowMargins->{{59, Automatic}, {Automatic, 0}},
WindowFrameElements->{"CloseBox"},
DockedCells->Cell[
 "Wolfram Summer School 2018", FontFamily -> "Source Sans Pro", FontSize -> 
  42, FontVariations -> {"CapsType" -> "AllCaps"}, 
  RGBColor[0.25098039215686274`, 0.25098039215686274`, 0.25098039215686274`], 
  Background -> RGBColor[1., 0.807843137254902, 0.2549019607843137]],
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 7, 2018)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData["TemplateProjectTitle", StyleDefinitions -> StyleData["Title"]],
     CellFrame -> True, CellMargins -> {{25, 20}, {5, 5}}, ShowCellLabel -> 
    True, CellFrameColor -> GrayLevel[0.85]], 
   Cell[
    StyleData["TemplateLabel", StyleDefinitions -> StyleData["Text"]], 
    FontSize -> 14, FontWeight -> Bold, FontColor -> 
    RGBColor[0.25098039215686274`, 0.25098039215686274`, 
      0.25098039215686274`], Background -> None], 
   Cell[
    StyleData["TemplateInstructions", StyleDefinitions -> StyleData["Text"]], 
    Editable -> False, ShowCellBracket -> False, FontSize -> 16], 
   Cell[
    StyleData["TemplateAuthorInfo", StyleDefinitions -> StyleData["Text"]], 
    CellFrame -> True, CellMargins -> {{25, 20}, {5, 5}}, ShowCellLabel -> 
    True, CellFrameColor -> GrayLevel[0.85]], 
   Cell[
    StyleData[
    "TemplateSectionHeaders", StyleDefinitions -> StyleData["Section"]], 
    Editable -> False, Selectable -> False, Deletable -> False, 
    ShowCellBracket -> False, Deployed -> True], 
   Cell[
    StyleData[
    "TemplateSectionSubHeaders", StyleDefinitions -> StyleData["Subsection"]],
     Editable -> False, ShowCellBracket -> False], 
   Cell[
    StyleData[
    "TemplateSectionSubSubHeaders", StyleDefinitions -> 
     StyleData["Subsubsection"]], Editable -> False, ShowCellBracket -> 
    False], 
   Cell[
    StyleData[
    "TemplateEditableHeader", StyleDefinitions -> StyleData["Subsubsection"]],
     FontColor -> RGBColor[1., 0.5058823529411764, 0.]], 
   Cell[
    StyleData[
    "TemplateEditableContent", StyleDefinitions -> StyleData["Text"]], 
    CellFrame -> True, ShowCellBracket -> False, 
    CellMargins -> {{25, 20}, {5, 5}}, Evaluatable -> False, ShowCellLabel -> 
    True, CellFrameColor -> GrayLevel[0.85]], 
   Cell[
    StyleData[
    "TemplateEditableInput", StyleDefinitions -> StyleData["Input"]], 
    Editable -> True, CellFrame -> True, CellMargins -> {{25, 20}, {5, 5}}, 
    Evaluatable -> True, ShowCellLabel -> True, CellFrameColor -> 
    GrayLevel[0.85]], 
   Cell[
    StyleData["TemplateDivider", StyleDefinitions -> StyleData["Text"]], 
    Editable -> False, Selectable -> False, Deletable -> False, PageWidth -> 
    WindowWidth, CellFrame -> {{False, False}, {8, False}}, ShowCellBracket -> 
    False, CellMargins -> {{0, -10}, {0, 0}}, 
    CellBracketOptions -> {"OverlapContent" -> True}, Deployed -> True, 
    CellFrameMargins -> {{10, 10}, {1, 1}}, CellFrameColor -> 
    RGBColor[1, 0.5, 0], Background -> 
    RGBColor[1., 0.807843137254902, 0.2549019607843137]]}, Visible -> False, 
  FrontEndVersion -> "11.3 for Microsoft Windows (64-bit) (March 7, 2018)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "AuthorInfo"->{
  Cell[651, 22, 218, 5, 67, "TemplateSectionHeaders",ExpressionUUID->"47541fce-e5a1-4793-b8e1-e1340b437ca6",
   CellTags->"AuthorInfo"]},
 "LastModified"->{
  Cell[400, 13, 226, 5, 51, "TemplateInstructions",ExpressionUUID->"16a93950-ad73-4ed1-ba61-5139c9a9dd32",
   CellTags->"LastModified"]},
 "PosterContent"->{
  Cell[1997, 62, 234, 5, 67, "TemplateSectionHeaders",ExpressionUUID->"e3c11918-b62c-4e4f-bc19-a4aa32cba637",
   CellTags->"PosterContent"]},
 "PresentationContent"->{
  Cell[59624, 1065, 252, 6, 67, "TemplateSectionHeaders",ExpressionUUID->"8e028c0c-7cb5-4cea-9aaf-57044e03e425",
   CellTags->"PresentationContent"]},
 "ProjectNotes"->{
  Cell[67389, 1275, 231, 5, 67, "TemplateSectionHeaders",ExpressionUUID->"d0702cda-4649-4987-a5e2-607be4aa4f6e",
   CellTags->"ProjectNotes"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"AuthorInfo", 172605, 3422},
 {"LastModified", 172762, 3425},
 {"PosterContent", 172920, 3428},
 {"PresentationContent", 173088, 3431},
 {"ProjectNotes", 173258, 3434}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[400, 13, 226, 5, 51, "TemplateInstructions",ExpressionUUID->"16a93950-ad73-4ed1-ba61-5139c9a9dd32",
 CellTags->"LastModified"],
Cell[CellGroupData[{
Cell[651, 22, 218, 5, 67, "TemplateSectionHeaders",ExpressionUUID->"47541fce-e5a1-4793-b8e1-e1340b437ca6",
 CellTags->"AuthorInfo"],
Cell[872, 29, 369, 8, 47, "TemplateAuthorInfo",ExpressionUUID->"2214bf82-cb91-41b2-a79f-ecd872282532"],
Cell[1244, 39, 356, 8, 47, "TemplateAuthorInfo",ExpressionUUID->"1d803eb4-64f6-4601-a1a0-49b5afc9692c"],
Cell[1603, 49, 357, 8, 47, "TemplateAuthorInfo",ExpressionUUID->"f3f2c56d-6554-49c0-a8f0-7c8d2bae5215"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1997, 62, 234, 5, 67, "TemplateSectionHeaders",ExpressionUUID->"e3c11918-b62c-4e4f-bc19-a4aa32cba637",
 CellTags->"PosterContent"],
Cell[2234, 69, 350, 7, 49, "TemplateEditableContent",ExpressionUUID->"16215b85-c481-4f11-8175-b0652d7bbfad"],
Cell[2587, 78, 589, 11, 91, "TemplateEditableContent",ExpressionUUID->"c662dd0a-9849-40e8-bc89-a9f688107475"],
Cell[3179, 91, 331, 8, 58, "TemplateInstructions",ExpressionUUID->"ec924e65-f9fc-4678-8fe3-95cd292f053c"],
Cell[3513, 101, 52785, 871, 326, "TemplateEditableContent",ExpressionUUID->"32f16ef4-646e-45ed-a15a-a912cfc9ecd6"],
Cell[56301, 974, 426, 10, 91, "TemplateEditableContent",ExpressionUUID->"ba2205bf-d701-4ef5-aa12-c7a7f1002441"],
Cell[56730, 986, 683, 15, 135, "TemplateEditableContent",ExpressionUUID->"e44105f6-e95a-4d28-9e4d-8a40b3d4e596"],
Cell[57416, 1003, 99, 1, 19, "Input",ExpressionUUID->"4a721f19-623c-47ad-bb58-c6de867557f0",
 CellOpen->False],
Cell[57518, 1006, 2069, 54, 37, "TemplateDivider",ExpressionUUID->"3dd6c29c-0c7c-4de9-8e57-c12593f67d71"]
}, Open  ]],
Cell[CellGroupData[{
Cell[59624, 1065, 252, 6, 67, "TemplateSectionHeaders",ExpressionUUID->"8e028c0c-7cb5-4cea-9aaf-57044e03e425",
 CellTags->"PresentationContent"],
Cell[59879, 1073, 1395, 29, 86, "TemplateInstructions",ExpressionUUID->"a415c0fc-f692-474a-a3a1-95fb4df9ef20"],
Cell[CellGroupData[{
Cell[61299, 1106, 185, 3, 44, "TemplateEditableHeader",ExpressionUUID->"11276918-0fe9-4de3-be36-04823542a16a"],
Cell[61487, 1111, 347, 8, 79, "TemplateEditableContent",ExpressionUUID->"c214ec6c-0755-4b86-b2f8-5cbb795b706e"],
Cell[61837, 1121, 1135, 31, 130, "TemplateEditableInput",ExpressionUUID->"56794e5d-d3fc-4f7f-a7ed-b0cd7c23ea5e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[63009, 1157, 244, 4, 44, "TemplateEditableHeader",ExpressionUUID->"9f8891b5-9644-48d1-a1f9-42abe738fa0d"],
Cell[63256, 1163, 257, 6, 57, "TemplateEditableContent",ExpressionUUID->"b8fc5df6-643a-424e-a5b5-22c8a40b1489"],
Cell[63516, 1171, 723, 20, 73, "TemplateEditableInput",ExpressionUUID->"c9d95932-be13-422e-a455-8036921e884f"],
Cell[64242, 1193, 3098, 76, 37, "TemplateDivider",ExpressionUUID->"076ddf5c-307b-4320-9bc6-9a3254f2388c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[67389, 1275, 231, 5, 67, "TemplateSectionHeaders",ExpressionUUID->"d0702cda-4649-4987-a5e2-607be4aa4f6e",
 CellTags->"ProjectNotes"],
Cell[CellGroupData[{
Cell[67645, 1284, 339, 6, 56, "Subsubsection",ExpressionUUID->"c1b785be-a60a-40fe-b1f1-2d83590b38cd"],
Cell[67987, 1292, 408, 8, 78, "Text",ExpressionUUID->"7ec29ad3-4bb6-4f4d-8fc5-9b651bff275f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[68432, 1305, 205, 4, 44, "Subsubsection",ExpressionUUID->"6ebeefbd-4857-42fb-a308-27aaa279c47f"],
Cell[68640, 1311, 377, 7, 56, "Text",ExpressionUUID->"3a63da76-4fc5-4fde-bd88-b07bc80bc320"],
Cell[69020, 1320, 287, 6, 37, "CodeText",ExpressionUUID->"8899e6b6-fe79-4ad1-9aec-a4e8e13f2197"],
Cell[69310, 1328, 540, 13, 105, "Input",ExpressionUUID->"df573e23-9b69-4fc4-9511-4a0fbbcd1034"],
Cell[69853, 1343, 428, 8, 57, "CodeText",ExpressionUUID->"981b107d-e086-4a1a-8fa5-7dec1c5ac48c"],
Cell[70284, 1353, 716, 19, 105, "Input",ExpressionUUID->"b10cde1d-188b-4430-9f64-8568501addd4"],
Cell[71003, 1374, 288, 6, 37, "CodeText",ExpressionUUID->"c1788770-8101-4f2d-a4c9-ed352de32ecb"],
Cell[71294, 1382, 272, 8, 48, "Input",ExpressionUUID->"f02a91bd-ca5a-4433-80ee-d496166be2d4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[71603, 1395, 221, 4, 53, "Subsection",ExpressionUUID->"2dbfbf1a-2945-4bdb-9fae-3b02771ac17a"],
Cell[71827, 1401, 210, 6, 56, "Text",ExpressionUUID->"49b24db9-0c4e-4e16-b1d1-95c531720d08"],
Cell[CellGroupData[{
Cell[72062, 1411, 368, 7, 51, "Item",ExpressionUUID->"c92b713e-2cef-4b72-b531-0c0fd6728f74"],
Cell[72433, 1420, 344, 7, 31, "Item",ExpressionUUID->"da627b75-5e96-40e9-b2ce-43f073b02495"],
Cell[72780, 1429, 379, 8, 51, "Item",ExpressionUUID->"db25ae6f-cf9f-4ffa-a9ee-00f5b65842ce"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[73208, 1443, 306, 4, 52, "Subsection",ExpressionUUID->"2f432cc1-38d6-41ee-aa40-82e753543cf3"],
Cell[73517, 1449, 480, 9, 56, "Text",ExpressionUUID->"a751770f-3b0d-4cf8-bb36-99f09ba117f2"],
Cell[74000, 1460, 393, 9, 37, "CodeText",ExpressionUUID->"72fa3322-2723-4e21-9018-5ba4eea6d6f7"],
Cell[74396, 1471, 458, 11, 28, "Input",ExpressionUUID->"59307781-6e94-40f9-b9eb-06a39c0da99b"],
Cell[74857, 1484, 329, 7, 28, "Input",ExpressionUUID->"d19e9c04-a388-4bf5-8058-b3ef79f641e6"],
Cell[75189, 1493, 419, 9, 105, "Input",ExpressionUUID->"92884c6f-e84f-49cc-81f9-50af6b2d25b4"],
Cell[75611, 1504, 361, 10, 48, "Input",ExpressionUUID->"a92414ca-de9c-4e5e-bbd1-f962d3e7a3ab"],
Cell[CellGroupData[{
Cell[75997, 1518, 172, 3, 44, "Subsubsection",ExpressionUUID->"5425b4f6-48f7-486a-bec5-d38eae4b8fcf"],
Cell[76172, 1523, 633, 10, 100, "Text",ExpressionUUID->"ddbfbbbf-fc51-40d2-b25d-331dafe0e45e"],
Cell[76808, 1535, 195, 3, 37, "CodeText",ExpressionUUID->"189670a1-e5c2-4828-8a36-bd0a1bdd196b"],
Cell[77006, 1540, 297, 5, 30, "Input",ExpressionUUID->"07effa3d-f693-4598-a863-16d31741ae6c"],
Cell[77306, 1547, 248, 4, 37, "CodeText",ExpressionUUID->"ecb84b96-6317-4572-96e1-1eabf1ed7d56"],
Cell[77557, 1553, 676, 17, 86, "Input",ExpressionUUID->"0eb79990-56ef-4a97-9d76-45f9fae93f87"],
Cell[78236, 1572, 250, 4, 37, "CodeText",ExpressionUUID->"fa14d85e-b9c3-49c5-9766-275e18625cb1"],
Cell[78489, 1578, 449, 11, 28, "Input",ExpressionUUID->"04062dfb-5c74-4ba6-9c3c-fd8166dcc395"],
Cell[78941, 1591, 297, 7, 37, "CodeText",ExpressionUUID->"924ea3d4-466d-4162-b436-767c197e82e8"],
Cell[79241, 1600, 463, 13, 28, "Input",ExpressionUUID->"a748b61d-b949-43b4-a7e2-cfc24de3d95a"],
Cell[79707, 1615, 235, 6, 37, "CodeText",ExpressionUUID->"601f41f1-3177-4922-84bf-068787a1c6bb"],
Cell[79945, 1623, 367, 10, 67, "Input",ExpressionUUID->"2d95a84e-5444-46c8-a225-5d777c9fe84f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[80349, 1638, 193, 3, 44, "Subsubsection",ExpressionUUID->"dca2f52a-9d91-4585-bc2f-b41c6130a227"],
Cell[80545, 1643, 345, 7, 34, "Text",ExpressionUUID->"a5937307-abb1-4d52-8166-5eb6dd19fa0d"],
Cell[80893, 1652, 270, 6, 37, "CodeText",ExpressionUUID->"842f632c-82ba-40bc-8806-aaad614f837b"],
Cell[81166, 1660, 880, 19, 30, "Input",ExpressionUUID->"1ec994a2-dcbd-41dd-82e0-ccc609dfa1b3"],
Cell[82049, 1681, 244, 5, 37, "CodeText",ExpressionUUID->"b3a6252c-4a77-4cc7-9a11-66845c56212f"],
Cell[82296, 1688, 680, 16, 86, "Input",ExpressionUUID->"535a0982-49bd-446d-9568-09c0fa0d0eba"]
}, Open  ]],
Cell[CellGroupData[{
Cell[83013, 1709, 277, 4, 44, "Subsubsection",ExpressionUUID->"f1bf30d5-e979-46ba-acc8-b47251ef2a53"],
Cell[83293, 1715, 329, 7, 56, "Text",ExpressionUUID->"b52bc5af-0613-4fb1-ba08-dcb7ba8e6127"],
Cell[83625, 1724, 208, 3, 37, "CodeText",ExpressionUUID->"58538b1c-3496-4ccd-bb6f-d06748134a3b"],
Cell[83836, 1729, 704, 18, 86, "Input",ExpressionUUID->"74ac967b-0e60-4178-a417-5ba306d4ab2c"],
Cell[84543, 1749, 255, 6, 37, "CodeText",ExpressionUUID->"80652575-829f-43c9-9cfc-b317aa64eabe"],
Cell[84801, 1757, 1591, 37, 276, "Input",ExpressionUUID->"d6c9e662-916c-44e2-93fa-1f10fa6d60c7"],
Cell[86395, 1796, 262, 7, 57, "CodeText",ExpressionUUID->"f1b49779-adac-4a75-b87c-9e84ee51ba99"],
Cell[86660, 1805, 1858, 44, 296, "Input",ExpressionUUID->"d8dfad3e-5a40-4cce-852e-8454f5638eee"],
Cell[88521, 1851, 231, 6, 57, "CodeText",ExpressionUUID->"d5fbbf99-14b8-4860-98b1-64cb71371507"],
Cell[88755, 1859, 1721, 40, 239, "Input",ExpressionUUID->"173d6676-905a-4d1c-af8c-b6b5c2d65a1a"],
Cell[90479, 1901, 193, 3, 37, "CodeText",ExpressionUUID->"3fbfa40c-9877-487e-8c1b-8ca35c002a14"],
Cell[90675, 1906, 990, 27, 105, "Input",ExpressionUUID->"d49e286f-fc02-48ce-8a0b-290cb535a697"],
Cell[91668, 1935, 217, 6, 57, "CodeText",ExpressionUUID->"3c7e0c83-bf08-4c0a-8601-70249475e0a8"],
Cell[91888, 1943, 4716, 110, 618, "Input",ExpressionUUID->"5ca88211-2bee-4be3-b849-a5890e53c507"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[96653, 2059, 219, 4, 53, "Subsection",ExpressionUUID->"5d73dc09-602b-42ff-84c0-e463129c1d38"],
Cell[96875, 2065, 251, 4, 34, "Text",ExpressionUUID->"f7622d51-15d4-40c4-a40f-00746145aa73"],
Cell[CellGroupData[{
Cell[97151, 2073, 942, 21, 48, "Input",ExpressionUUID->"b98d235c-3123-41c2-81b2-4c11864ed698"],
Cell[98096, 2096, 1531, 27, 35, "Output",ExpressionUUID->"12c0a019-a70d-4506-9abc-98f8b4623fd1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[99664, 2128, 218, 4, 44, "Subsubsection",ExpressionUUID->"14e3781a-a52e-4548-bf74-c0aba980dad1"],
Cell[99885, 2134, 210, 3, 31, "Item",ExpressionUUID->"d164cdc3-c8cc-4779-b201-e2e8541cd2b4"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[100144, 2143, 145, 3, 53, "Subsection",ExpressionUUID->"405e0fe7-2022-4d50-b275-5f85c6659f37"],
Cell[CellGroupData[{
Cell[100314, 2150, 319, 5, 44, "Subsubsection",ExpressionUUID->"aa59b7ca-7848-48f1-96cf-6286c1fabb09"],
Cell[100636, 2157, 64020, 1057, 242, "Text",ExpressionUUID->"f5f89bf7-8146-477f-a6ba-44edf452363d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[164693, 3219, 168, 3, 44, "Subsubsection",ExpressionUUID->"9afe7952-52cb-49e5-812a-edf95df8c363"],
Cell[CellGroupData[{
Cell[164886, 3226, 337, 7, 31, "Item",ExpressionUUID->"9cb80bec-f85f-4351-9098-551d504bc820"],
Cell[165226, 3235, 341, 7, 31, "Item",ExpressionUUID->"c06084de-802c-4ad3-935f-51dce32b3b0b"],
Cell[165570, 3244, 327, 6, 31, "Item",ExpressionUUID->"6630d8dc-e2a9-43f4-b81b-29a242a14a06"],
Cell[165900, 3252, 296, 4, 31, "Item",ExpressionUUID->"a253cb2d-dba8-432a-9f88-9bcc31a6abbe"],
Cell[166199, 3258, 394, 6, 31, "Item",ExpressionUUID->"cf7e82f5-dc3b-4b36-b03c-20237d2d4d6a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[166642, 3270, 159, 3, 44, "Subsubsection",ExpressionUUID->"19b709dc-5a9b-4a0e-8d93-1058844be4dd"],
Cell[166804, 3275, 289, 7, 31, "Item",ExpressionUUID->"31a318cb-8fe1-4c87-9025-00c004d1cd32"]
}, Open  ]],
Cell[CellGroupData[{
Cell[167130, 3287, 132, 2, 44, "Subsubsection",ExpressionUUID->"6668b03b-4180-4966-b673-b20f85cb5927"],
Cell[CellGroupData[{
Cell[167287, 3293, 263, 4, 31, "Item",ExpressionUUID->"a0f68604-8bfc-4c6d-afb6-b6a38b6de7d0"],
Cell[167553, 3299, 269, 4, 31, "Item",ExpressionUUID->"d4791c55-e7db-46a0-8162-0eebcfa1df4d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[167871, 3309, 172, 3, 44, "Subsubsection",ExpressionUUID->"5f589531-3a9b-47cd-a487-fcf2f80aa83f"],
Cell[CellGroupData[{
Cell[168068, 3316, 215, 4, 31, "Item",ExpressionUUID->"4cd46233-c6f4-4c87-9a52-2c25b8daafac"],
Cell[168286, 3322, 215, 4, 31, "Item",ExpressionUUID->"12997aaf-8cd2-454d-ae9b-80f79ec8b80f"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

